
Assignment1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006c74  080001e4  080001e4  000101e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  08006e58  08006e58  00016e58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006e80  08006e80  0002000c  2**0
                  CONTENTS
  4 .ARM          00000000  08006e80  08006e80  0002000c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006e80  08006e80  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006e80  08006e80  00016e80  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006e84  08006e84  00016e84  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  08006e88  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001478  2000000c  08006e94  0002000c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20001484  08006e94  00021484  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020035  2**0
                  CONTENTS, READONLY
 13 .debug_info   00005fba  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001810  00000000  00000000  00026032  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000006c8  00000000  00000000  00027848  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000523  00000000  00000000  00027f10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00018246  00000000  00000000  00028433  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000a759  00000000  00000000  00040679  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008c6da  00000000  00000000  0004add2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00001990  00000000  00000000  000d74ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005d  00000000  00000000  000d8e3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e4 <__do_global_dtors_aux>:
 80001e4:	b510      	push	{r4, lr}
 80001e6:	4c05      	ldr	r4, [pc, #20]	; (80001fc <__do_global_dtors_aux+0x18>)
 80001e8:	7823      	ldrb	r3, [r4, #0]
 80001ea:	b933      	cbnz	r3, 80001fa <__do_global_dtors_aux+0x16>
 80001ec:	4b04      	ldr	r3, [pc, #16]	; (8000200 <__do_global_dtors_aux+0x1c>)
 80001ee:	b113      	cbz	r3, 80001f6 <__do_global_dtors_aux+0x12>
 80001f0:	4804      	ldr	r0, [pc, #16]	; (8000204 <__do_global_dtors_aux+0x20>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	2301      	movs	r3, #1
 80001f8:	7023      	strb	r3, [r4, #0]
 80001fa:	bd10      	pop	{r4, pc}
 80001fc:	2000000c 	.word	0x2000000c
 8000200:	00000000 	.word	0x00000000
 8000204:	08006e40 	.word	0x08006e40

08000208 <frame_dummy>:
 8000208:	b508      	push	{r3, lr}
 800020a:	4b03      	ldr	r3, [pc, #12]	; (8000218 <frame_dummy+0x10>)
 800020c:	b11b      	cbz	r3, 8000216 <frame_dummy+0xe>
 800020e:	4903      	ldr	r1, [pc, #12]	; (800021c <frame_dummy+0x14>)
 8000210:	4803      	ldr	r0, [pc, #12]	; (8000220 <frame_dummy+0x18>)
 8000212:	f3af 8000 	nop.w
 8000216:	bd08      	pop	{r3, pc}
 8000218:	00000000 	.word	0x00000000
 800021c:	20000010 	.word	0x20000010
 8000220:	08006e40 	.word	0x08006e40

08000224 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000224:	b580      	push	{r7, lr}
 8000226:	b088      	sub	sp, #32
 8000228:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800022a:	f107 0310 	add.w	r3, r7, #16
 800022e:	2200      	movs	r2, #0
 8000230:	601a      	str	r2, [r3, #0]
 8000232:	605a      	str	r2, [r3, #4]
 8000234:	609a      	str	r2, [r3, #8]
 8000236:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000238:	4b46      	ldr	r3, [pc, #280]	; (8000354 <MX_GPIO_Init+0x130>)
 800023a:	699b      	ldr	r3, [r3, #24]
 800023c:	4a45      	ldr	r2, [pc, #276]	; (8000354 <MX_GPIO_Init+0x130>)
 800023e:	f043 0320 	orr.w	r3, r3, #32
 8000242:	6193      	str	r3, [r2, #24]
 8000244:	4b43      	ldr	r3, [pc, #268]	; (8000354 <MX_GPIO_Init+0x130>)
 8000246:	699b      	ldr	r3, [r3, #24]
 8000248:	f003 0320 	and.w	r3, r3, #32
 800024c:	60fb      	str	r3, [r7, #12]
 800024e:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000250:	4b40      	ldr	r3, [pc, #256]	; (8000354 <MX_GPIO_Init+0x130>)
 8000252:	699b      	ldr	r3, [r3, #24]
 8000254:	4a3f      	ldr	r2, [pc, #252]	; (8000354 <MX_GPIO_Init+0x130>)
 8000256:	f043 0304 	orr.w	r3, r3, #4
 800025a:	6193      	str	r3, [r2, #24]
 800025c:	4b3d      	ldr	r3, [pc, #244]	; (8000354 <MX_GPIO_Init+0x130>)
 800025e:	699b      	ldr	r3, [r3, #24]
 8000260:	f003 0304 	and.w	r3, r3, #4
 8000264:	60bb      	str	r3, [r7, #8]
 8000266:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000268:	4b3a      	ldr	r3, [pc, #232]	; (8000354 <MX_GPIO_Init+0x130>)
 800026a:	699b      	ldr	r3, [r3, #24]
 800026c:	4a39      	ldr	r2, [pc, #228]	; (8000354 <MX_GPIO_Init+0x130>)
 800026e:	f043 0310 	orr.w	r3, r3, #16
 8000272:	6193      	str	r3, [r2, #24]
 8000274:	4b37      	ldr	r3, [pc, #220]	; (8000354 <MX_GPIO_Init+0x130>)
 8000276:	699b      	ldr	r3, [r3, #24]
 8000278:	f003 0310 	and.w	r3, r3, #16
 800027c:	607b      	str	r3, [r7, #4]
 800027e:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_SET);
 8000280:	2201      	movs	r2, #1
 8000282:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000286:	4834      	ldr	r0, [pc, #208]	; (8000358 <MX_GPIO_Init+0x134>)
 8000288:	f005 fc13 	bl	8005ab2 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);
 800028c:	2201      	movs	r2, #1
 800028e:	2104      	movs	r1, #4
 8000290:	4832      	ldr	r0, [pc, #200]	; (800035c <MX_GPIO_Init+0x138>)
 8000292:	f005 fc0e 	bl	8005ab2 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = KEY_WK_Pin;
 8000296:	2301      	movs	r3, #1
 8000298:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800029a:	4b31      	ldr	r3, [pc, #196]	; (8000360 <MX_GPIO_Init+0x13c>)
 800029c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800029e:	2302      	movs	r3, #2
 80002a0:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(KEY_WK_GPIO_Port, &GPIO_InitStruct);
 80002a2:	f107 0310 	add.w	r3, r7, #16
 80002a6:	4619      	mov	r1, r3
 80002a8:	482b      	ldr	r0, [pc, #172]	; (8000358 <MX_GPIO_Init+0x134>)
 80002aa:	f005 fa57 	bl	800575c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = KEY0_Pin;
 80002ae:	2320      	movs	r3, #32
 80002b0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80002b2:	4b2b      	ldr	r3, [pc, #172]	; (8000360 <MX_GPIO_Init+0x13c>)
 80002b4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80002b6:	2301      	movs	r3, #1
 80002b8:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(KEY0_GPIO_Port, &GPIO_InitStruct);
 80002ba:	f107 0310 	add.w	r3, r7, #16
 80002be:	4619      	mov	r1, r3
 80002c0:	4828      	ldr	r0, [pc, #160]	; (8000364 <MX_GPIO_Init+0x140>)
 80002c2:	f005 fa4b 	bl	800575c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LED0_Pin;
 80002c6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80002ca:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80002cc:	2301      	movs	r3, #1
 80002ce:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80002d0:	2300      	movs	r3, #0
 80002d2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80002d4:	2302      	movs	r3, #2
 80002d6:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED0_GPIO_Port, &GPIO_InitStruct);
 80002d8:	f107 0310 	add.w	r3, r7, #16
 80002dc:	4619      	mov	r1, r3
 80002de:	481e      	ldr	r0, [pc, #120]	; (8000358 <MX_GPIO_Init+0x134>)
 80002e0:	f005 fa3c 	bl	800575c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = KEY1_Pin;
 80002e4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80002e8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80002ea:	4b1d      	ldr	r3, [pc, #116]	; (8000360 <MX_GPIO_Init+0x13c>)
 80002ec:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80002ee:	2301      	movs	r3, #1
 80002f0:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(KEY1_GPIO_Port, &GPIO_InitStruct);
 80002f2:	f107 0310 	add.w	r3, r7, #16
 80002f6:	4619      	mov	r1, r3
 80002f8:	4817      	ldr	r0, [pc, #92]	; (8000358 <MX_GPIO_Init+0x134>)
 80002fa:	f005 fa2f 	bl	800575c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LED1_Pin;
 80002fe:	2304      	movs	r3, #4
 8000300:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000302:	2301      	movs	r3, #1
 8000304:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000306:	2300      	movs	r3, #0
 8000308:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800030a:	2302      	movs	r3, #2
 800030c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED1_GPIO_Port, &GPIO_InitStruct);
 800030e:	f107 0310 	add.w	r3, r7, #16
 8000312:	4619      	mov	r1, r3
 8000314:	4811      	ldr	r0, [pc, #68]	; (800035c <MX_GPIO_Init+0x138>)
 8000316:	f005 fa21 	bl	800575c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 1, 1);
 800031a:	2201      	movs	r2, #1
 800031c:	2101      	movs	r1, #1
 800031e:	2006      	movs	r0, #6
 8000320:	f005 f8a3 	bl	800546a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8000324:	2006      	movs	r0, #6
 8000326:	f005 f8bc 	bl	80054a2 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 1, 2);
 800032a:	2202      	movs	r2, #2
 800032c:	2101      	movs	r1, #1
 800032e:	2017      	movs	r0, #23
 8000330:	f005 f89b 	bl	800546a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8000334:	2017      	movs	r0, #23
 8000336:	f005 f8b4 	bl	80054a2 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 1, 3);
 800033a:	2203      	movs	r2, #3
 800033c:	2101      	movs	r1, #1
 800033e:	2028      	movs	r0, #40	; 0x28
 8000340:	f005 f893 	bl	800546a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000344:	2028      	movs	r0, #40	; 0x28
 8000346:	f005 f8ac 	bl	80054a2 <HAL_NVIC_EnableIRQ>

}
 800034a:	bf00      	nop
 800034c:	3720      	adds	r7, #32
 800034e:	46bd      	mov	sp, r7
 8000350:	bd80      	pop	{r7, pc}
 8000352:	bf00      	nop
 8000354:	40021000 	.word	0x40021000
 8000358:	40010800 	.word	0x40010800
 800035c:	40011400 	.word	0x40011400
 8000360:	10110000 	.word	0x10110000
 8000364:	40011000 	.word	0x40011000

08000368 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000368:	b580      	push	{r7, lr}
 800036a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800036c:	f004 ff20 	bl	80051b0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000370:	f000 f80e 	bl	8000390 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000374:	f7ff ff56 	bl	8000224 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 8000378:	f004 fe76 	bl	8005068 <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */
  HAL_UART_Receive_IT(&huart1, (uint8_t *) rxBuffer, 1);
 800037c:	2201      	movs	r2, #1
 800037e:	4902      	ldr	r1, [pc, #8]	; (8000388 <main+0x20>)
 8000380:	4802      	ldr	r0, [pc, #8]	; (800038c <main+0x24>)
 8000382:	f006 f8d8 	bl	8006536 <HAL_UART_Receive_IT>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000386:	e7fe      	b.n	8000386 <main+0x1e>
 8000388:	20000028 	.word	0x20000028
 800038c:	2000143c 	.word	0x2000143c

08000390 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000390:	b580      	push	{r7, lr}
 8000392:	b090      	sub	sp, #64	; 0x40
 8000394:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000396:	f107 0318 	add.w	r3, r7, #24
 800039a:	2228      	movs	r2, #40	; 0x28
 800039c:	2100      	movs	r1, #0
 800039e:	4618      	mov	r0, r3
 80003a0:	f006 fd22 	bl	8006de8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80003a4:	1d3b      	adds	r3, r7, #4
 80003a6:	2200      	movs	r2, #0
 80003a8:	601a      	str	r2, [r3, #0]
 80003aa:	605a      	str	r2, [r3, #4]
 80003ac:	609a      	str	r2, [r3, #8]
 80003ae:	60da      	str	r2, [r3, #12]
 80003b0:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80003b2:	2302      	movs	r3, #2
 80003b4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80003b6:	2301      	movs	r3, #1
 80003b8:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80003ba:	2310      	movs	r3, #16
 80003bc:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80003be:	2300      	movs	r3, #0
 80003c0:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80003c2:	f107 0318 	add.w	r3, r7, #24
 80003c6:	4618      	mov	r0, r3
 80003c8:	f005 fbbc 	bl	8005b44 <HAL_RCC_OscConfig>
 80003cc:	4603      	mov	r3, r0
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d001      	beq.n	80003d6 <SystemClock_Config+0x46>
  {
    Error_Handler();
 80003d2:	f000 f818 	bl	8000406 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80003d6:	230f      	movs	r3, #15
 80003d8:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80003da:	2300      	movs	r3, #0
 80003dc:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80003de:	2300      	movs	r3, #0
 80003e0:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80003e2:	2300      	movs	r3, #0
 80003e4:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80003e6:	2300      	movs	r3, #0
 80003e8:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80003ea:	1d3b      	adds	r3, r7, #4
 80003ec:	2100      	movs	r1, #0
 80003ee:	4618      	mov	r0, r3
 80003f0:	f005 fe2a 	bl	8006048 <HAL_RCC_ClockConfig>
 80003f4:	4603      	mov	r3, r0
 80003f6:	2b00      	cmp	r3, #0
 80003f8:	d001      	beq.n	80003fe <SystemClock_Config+0x6e>
  {
    Error_Handler();
 80003fa:	f000 f804 	bl	8000406 <Error_Handler>
  }
}
 80003fe:	bf00      	nop
 8000400:	3740      	adds	r7, #64	; 0x40
 8000402:	46bd      	mov	sp, r7
 8000404:	bd80      	pop	{r7, pc}

08000406 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000406:	b480      	push	{r7}
 8000408:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800040a:	b672      	cpsid	i
}
 800040c:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800040e:	e7fe      	b.n	800040e <Error_Handler+0x8>

08000410 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000410:	b580      	push	{r7, lr}
 8000412:	b084      	sub	sp, #16
 8000414:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000416:	4b16      	ldr	r3, [pc, #88]	; (8000470 <HAL_MspInit+0x60>)
 8000418:	699b      	ldr	r3, [r3, #24]
 800041a:	4a15      	ldr	r2, [pc, #84]	; (8000470 <HAL_MspInit+0x60>)
 800041c:	f043 0301 	orr.w	r3, r3, #1
 8000420:	6193      	str	r3, [r2, #24]
 8000422:	4b13      	ldr	r3, [pc, #76]	; (8000470 <HAL_MspInit+0x60>)
 8000424:	699b      	ldr	r3, [r3, #24]
 8000426:	f003 0301 	and.w	r3, r3, #1
 800042a:	60bb      	str	r3, [r7, #8]
 800042c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 800042e:	4b10      	ldr	r3, [pc, #64]	; (8000470 <HAL_MspInit+0x60>)
 8000430:	69db      	ldr	r3, [r3, #28]
 8000432:	4a0f      	ldr	r2, [pc, #60]	; (8000470 <HAL_MspInit+0x60>)
 8000434:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000438:	61d3      	str	r3, [r2, #28]
 800043a:	4b0d      	ldr	r3, [pc, #52]	; (8000470 <HAL_MspInit+0x60>)
 800043c:	69db      	ldr	r3, [r3, #28]
 800043e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000442:	607b      	str	r3, [r7, #4]
 8000444:	687b      	ldr	r3, [r7, #4]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_2);
 8000446:	2005      	movs	r0, #5
 8000448:	f005 f804 	bl	8005454 <HAL_NVIC_SetPriorityGrouping>

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 800044c:	4b09      	ldr	r3, [pc, #36]	; (8000474 <HAL_MspInit+0x64>)
 800044e:	685b      	ldr	r3, [r3, #4]
 8000450:	60fb      	str	r3, [r7, #12]
 8000452:	68fb      	ldr	r3, [r7, #12]
 8000454:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000458:	60fb      	str	r3, [r7, #12]
 800045a:	68fb      	ldr	r3, [r7, #12]
 800045c:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000460:	60fb      	str	r3, [r7, #12]
 8000462:	4a04      	ldr	r2, [pc, #16]	; (8000474 <HAL_MspInit+0x64>)
 8000464:	68fb      	ldr	r3, [r7, #12]
 8000466:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000468:	bf00      	nop
 800046a:	3710      	adds	r7, #16
 800046c:	46bd      	mov	sp, r7
 800046e:	bd80      	pop	{r7, pc}
 8000470:	40021000 	.word	0x40021000
 8000474:	40010000 	.word	0x40010000

08000478 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000478:	b480      	push	{r7}
 800047a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 800047c:	e7fe      	b.n	800047c <NMI_Handler+0x4>

0800047e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800047e:	b480      	push	{r7}
 8000480:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000482:	e7fe      	b.n	8000482 <HardFault_Handler+0x4>

08000484 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000484:	b480      	push	{r7}
 8000486:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000488:	e7fe      	b.n	8000488 <MemManage_Handler+0x4>

0800048a <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800048a:	b480      	push	{r7}
 800048c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800048e:	e7fe      	b.n	800048e <BusFault_Handler+0x4>

08000490 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000490:	b480      	push	{r7}
 8000492:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000494:	e7fe      	b.n	8000494 <UsageFault_Handler+0x4>

08000496 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000496:	b480      	push	{r7}
 8000498:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800049a:	bf00      	nop
 800049c:	46bd      	mov	sp, r7
 800049e:	bc80      	pop	{r7}
 80004a0:	4770      	bx	lr

080004a2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80004a2:	b480      	push	{r7}
 80004a4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80004a6:	bf00      	nop
 80004a8:	46bd      	mov	sp, r7
 80004aa:	bc80      	pop	{r7}
 80004ac:	4770      	bx	lr

080004ae <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80004ae:	b480      	push	{r7}
 80004b0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80004b2:	bf00      	nop
 80004b4:	46bd      	mov	sp, r7
 80004b6:	bc80      	pop	{r7}
 80004b8:	4770      	bx	lr

080004ba <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80004ba:	b580      	push	{r7, lr}
 80004bc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80004be:	f004 febd 	bl	800523c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80004c2:	bf00      	nop
 80004c4:	bd80      	pop	{r7, pc}

080004c6 <EXTI0_IRQHandler>:

/**
  * @brief This function handles EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
 80004c6:	b580      	push	{r7, lr}
 80004c8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI0_IRQn 0 */

  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(KEY_WK_Pin);
 80004ca:	2001      	movs	r0, #1
 80004cc:	f005 fb22 	bl	8005b14 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}
 80004d0:	bf00      	nop
 80004d2:	bd80      	pop	{r7, pc}

080004d4 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 80004d4:	b580      	push	{r7, lr}
 80004d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(KEY0_Pin);
 80004d8:	2020      	movs	r0, #32
 80004da:	f005 fb1b 	bl	8005b14 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 80004de:	bf00      	nop
 80004e0:	bd80      	pop	{r7, pc}
	...

080004e4 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 80004e4:	b580      	push	{r7, lr}
 80004e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80004e8:	4804      	ldr	r0, [pc, #16]	; (80004fc <USART1_IRQHandler+0x18>)
 80004ea:	f006 f855 	bl	8006598 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */
  HAL_UART_Receive_IT(&huart1, (uint8_t *) rxBuffer, 1);
 80004ee:	2201      	movs	r2, #1
 80004f0:	4903      	ldr	r1, [pc, #12]	; (8000500 <USART1_IRQHandler+0x1c>)
 80004f2:	4802      	ldr	r0, [pc, #8]	; (80004fc <USART1_IRQHandler+0x18>)
 80004f4:	f006 f81f 	bl	8006536 <HAL_UART_Receive_IT>
  /* USER CODE END USART1_IRQn 1 */
}
 80004f8:	bf00      	nop
 80004fa:	bd80      	pop	{r7, pc}
 80004fc:	2000143c 	.word	0x2000143c
 8000500:	20000028 	.word	0x20000028

08000504 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8000504:	b580      	push	{r7, lr}
 8000506:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(KEY1_Pin);
 8000508:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 800050c:	f005 fb02 	bl	8005b14 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8000510:	bf00      	nop
 8000512:	bd80      	pop	{r7, pc}

08000514 <HAL_GPIO_EXTI_Callback>:
static unsigned char uLength3 = 0;
int mode=0;
int k=0;
int h=0;
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8000514:	b580      	push	{r7, lr}
 8000516:	b086      	sub	sp, #24
 8000518:	af00      	add	r7, sp, #0
 800051a:	4603      	mov	r3, r0
 800051c:	80fb      	strh	r3, [r7, #6]
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
 800051e:	2201      	movs	r2, #1
 8000520:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000524:	486c      	ldr	r0, [pc, #432]	; (80006d8 <HAL_GPIO_EXTI_Callback+0x1c4>)
 8000526:	f005 fac4 	bl	8005ab2 <HAL_GPIO_WritePin>
 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
 800052a:	2201      	movs	r2, #1
 800052c:	2104      	movs	r1, #4
 800052e:	486b      	ldr	r0, [pc, #428]	; (80006dc <HAL_GPIO_EXTI_Callback+0x1c8>)
 8000530:	f005 fabf 	bl	8005ab2 <HAL_GPIO_WritePin>


switch(GPIO_Pin){
 8000534:	88fb      	ldrh	r3, [r7, #6]
 8000536:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800053a:	d030      	beq.n	800059e <HAL_GPIO_EXTI_Callback+0x8a>
 800053c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000540:	f301 804f 	bgt.w	80015e2 <HAL_GPIO_EXTI_Callback+0x10ce>
 8000544:	2b01      	cmp	r3, #1
 8000546:	d051      	beq.n	80005ec <HAL_GPIO_EXTI_Callback+0xd8>
 8000548:	2b20      	cmp	r3, #32
 800054a:	f041 804a 	bne.w	80015e2 <HAL_GPIO_EXTI_Callback+0x10ce>
case KEY0_Pin:
if(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin)==GPIO_PIN_RESET){
 800054e:	2120      	movs	r1, #32
 8000550:	4863      	ldr	r0, [pc, #396]	; (80006e0 <HAL_GPIO_EXTI_Callback+0x1cc>)
 8000552:	f005 fa97 	bl	8005a84 <HAL_GPIO_ReadPin>
 8000556:	4603      	mov	r3, r0
 8000558:	2b00      	cmp	r3, #0
 800055a:	f041 8044 	bne.w	80015e6 <HAL_GPIO_EXTI_Callback+0x10d2>
  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 800055e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000562:	485d      	ldr	r0, [pc, #372]	; (80006d8 <HAL_GPIO_EXTI_Callback+0x1c4>)
 8000564:	f005 fabd 	bl	8005ae2 <HAL_GPIO_TogglePin>
  HAL_Delay(500);
 8000568:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800056c:	f004 fe82 	bl	8005274 <HAL_Delay>
  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8000570:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000574:	4858      	ldr	r0, [pc, #352]	; (80006d8 <HAL_GPIO_EXTI_Callback+0x1c4>)
 8000576:	f005 fab4 	bl	8005ae2 <HAL_GPIO_TogglePin>
  HAL_Delay(500);
 800057a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800057e:	f004 fe79 	bl	8005274 <HAL_Delay>
  uRx_Data[uLength]='.';
 8000582:	4b58      	ldr	r3, [pc, #352]	; (80006e4 <HAL_GPIO_EXTI_Callback+0x1d0>)
 8000584:	781b      	ldrb	r3, [r3, #0]
 8000586:	461a      	mov	r2, r3
 8000588:	4b57      	ldr	r3, [pc, #348]	; (80006e8 <HAL_GPIO_EXTI_Callback+0x1d4>)
 800058a:	212e      	movs	r1, #46	; 0x2e
 800058c:	5499      	strb	r1, [r3, r2]
  uLength++;
 800058e:	4b55      	ldr	r3, [pc, #340]	; (80006e4 <HAL_GPIO_EXTI_Callback+0x1d0>)
 8000590:	781b      	ldrb	r3, [r3, #0]
 8000592:	3301      	adds	r3, #1
 8000594:	b2da      	uxtb	r2, r3
 8000596:	4b53      	ldr	r3, [pc, #332]	; (80006e4 <HAL_GPIO_EXTI_Callback+0x1d0>)
 8000598:	701a      	strb	r2, [r3, #0]

	}


break;
 800059a:	f001 b824 	b.w	80015e6 <HAL_GPIO_EXTI_Callback+0x10d2>
case KEY1_Pin:
	if (HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin)==GPIO_PIN_RESET){
 800059e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80005a2:	484d      	ldr	r0, [pc, #308]	; (80006d8 <HAL_GPIO_EXTI_Callback+0x1c4>)
 80005a4:	f005 fa6e 	bl	8005a84 <HAL_GPIO_ReadPin>
 80005a8:	4603      	mov	r3, r0
 80005aa:	2b00      	cmp	r3, #0
 80005ac:	f041 801d 	bne.w	80015ea <HAL_GPIO_EXTI_Callback+0x10d6>
          HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 80005b0:	2104      	movs	r1, #4
 80005b2:	484a      	ldr	r0, [pc, #296]	; (80006dc <HAL_GPIO_EXTI_Callback+0x1c8>)
 80005b4:	f005 fa95 	bl	8005ae2 <HAL_GPIO_TogglePin>
          HAL_Delay(500);
 80005b8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80005bc:	f004 fe5a 	bl	8005274 <HAL_Delay>
          HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 80005c0:	2104      	movs	r1, #4
 80005c2:	4846      	ldr	r0, [pc, #280]	; (80006dc <HAL_GPIO_EXTI_Callback+0x1c8>)
 80005c4:	f005 fa8d 	bl	8005ae2 <HAL_GPIO_TogglePin>
          HAL_Delay(500);
 80005c8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80005cc:	f004 fe52 	bl	8005274 <HAL_Delay>
          uRx_Data[uLength]='-';
 80005d0:	4b44      	ldr	r3, [pc, #272]	; (80006e4 <HAL_GPIO_EXTI_Callback+0x1d0>)
 80005d2:	781b      	ldrb	r3, [r3, #0]
 80005d4:	461a      	mov	r2, r3
 80005d6:	4b44      	ldr	r3, [pc, #272]	; (80006e8 <HAL_GPIO_EXTI_Callback+0x1d4>)
 80005d8:	212d      	movs	r1, #45	; 0x2d
 80005da:	5499      	strb	r1, [r3, r2]
          uLength++;
 80005dc:	4b41      	ldr	r3, [pc, #260]	; (80006e4 <HAL_GPIO_EXTI_Callback+0x1d0>)
 80005de:	781b      	ldrb	r3, [r3, #0]
 80005e0:	3301      	adds	r3, #1
 80005e2:	b2da      	uxtb	r2, r3
 80005e4:	4b3f      	ldr	r3, [pc, #252]	; (80006e4 <HAL_GPIO_EXTI_Callback+0x1d0>)
 80005e6:	701a      	strb	r2, [r3, #0]

	}
	break;
 80005e8:	f000 bfff 	b.w	80015ea <HAL_GPIO_EXTI_Callback+0x10d6>
case KEY_WK_Pin:
if(HAL_GPIO_ReadPin(KEY_WK_GPIO_Port,KEY_WK_Pin)==GPIO_PIN_SET){
 80005ec:	2101      	movs	r1, #1
 80005ee:	483a      	ldr	r0, [pc, #232]	; (80006d8 <HAL_GPIO_EXTI_Callback+0x1c4>)
 80005f0:	f005 fa48 	bl	8005a84 <HAL_GPIO_ReadPin>
 80005f4:	4603      	mov	r3, r0
 80005f6:	2b01      	cmp	r3, #1
 80005f8:	f040 87f9 	bne.w	80015ee <HAL_GPIO_EXTI_Callback+0x10da>
  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 80005fc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000600:	4835      	ldr	r0, [pc, #212]	; (80006d8 <HAL_GPIO_EXTI_Callback+0x1c4>)
 8000602:	f005 fa6e 	bl	8005ae2 <HAL_GPIO_TogglePin>
  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8000606:	2104      	movs	r1, #4
 8000608:	4834      	ldr	r0, [pc, #208]	; (80006dc <HAL_GPIO_EXTI_Callback+0x1c8>)
 800060a:	f005 fa6a 	bl	8005ae2 <HAL_GPIO_TogglePin>
  HAL_Delay(250);
 800060e:	20fa      	movs	r0, #250	; 0xfa
 8000610:	f004 fe30 	bl	8005274 <HAL_Delay>
  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8000614:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000618:	482f      	ldr	r0, [pc, #188]	; (80006d8 <HAL_GPIO_EXTI_Callback+0x1c4>)
 800061a:	f005 fa62 	bl	8005ae2 <HAL_GPIO_TogglePin>
  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 800061e:	2104      	movs	r1, #4
 8000620:	482e      	ldr	r0, [pc, #184]	; (80006dc <HAL_GPIO_EXTI_Callback+0x1c8>)
 8000622:	f005 fa5e 	bl	8005ae2 <HAL_GPIO_TogglePin>
  HAL_Delay(250);
 8000626:	20fa      	movs	r0, #250	; 0xfa
 8000628:	f004 fe24 	bl	8005274 <HAL_Delay>
  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 800062c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000630:	4829      	ldr	r0, [pc, #164]	; (80006d8 <HAL_GPIO_EXTI_Callback+0x1c4>)
 8000632:	f005 fa56 	bl	8005ae2 <HAL_GPIO_TogglePin>
  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8000636:	2104      	movs	r1, #4
 8000638:	4828      	ldr	r0, [pc, #160]	; (80006dc <HAL_GPIO_EXTI_Callback+0x1c8>)
 800063a:	f005 fa52 	bl	8005ae2 <HAL_GPIO_TogglePin>
  HAL_Delay(250);
 800063e:	20fa      	movs	r0, #250	; 0xfa
 8000640:	f004 fe18 	bl	8005274 <HAL_Delay>
  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8000644:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000648:	4823      	ldr	r0, [pc, #140]	; (80006d8 <HAL_GPIO_EXTI_Callback+0x1c4>)
 800064a:	f005 fa4a 	bl	8005ae2 <HAL_GPIO_TogglePin>
  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 800064e:	2104      	movs	r1, #4
 8000650:	4822      	ldr	r0, [pc, #136]	; (80006dc <HAL_GPIO_EXTI_Callback+0x1c8>)
 8000652:	f005 fa46 	bl	8005ae2 <HAL_GPIO_TogglePin>
  HAL_Delay(250);
 8000656:	20fa      	movs	r0, #250	; 0xfa
 8000658:	f004 fe0c 	bl	8005274 <HAL_Delay>
  uRx_Data[uLength]='/';
 800065c:	4b21      	ldr	r3, [pc, #132]	; (80006e4 <HAL_GPIO_EXTI_Callback+0x1d0>)
 800065e:	781b      	ldrb	r3, [r3, #0]
 8000660:	461a      	mov	r2, r3
 8000662:	4b21      	ldr	r3, [pc, #132]	; (80006e8 <HAL_GPIO_EXTI_Callback+0x1d4>)
 8000664:	212f      	movs	r1, #47	; 0x2f
 8000666:	5499      	strb	r1, [r3, r2]
  uLength++;
 8000668:	4b1e      	ldr	r3, [pc, #120]	; (80006e4 <HAL_GPIO_EXTI_Callback+0x1d0>)
 800066a:	781b      	ldrb	r3, [r3, #0]
 800066c:	3301      	adds	r3, #1
 800066e:	b2da      	uxtb	r2, r3
 8000670:	4b1c      	ldr	r3, [pc, #112]	; (80006e4 <HAL_GPIO_EXTI_Callback+0x1d0>)
 8000672:	701a      	strb	r2, [r3, #0]
  mode=1;
 8000674:	4b1d      	ldr	r3, [pc, #116]	; (80006ec <HAL_GPIO_EXTI_Callback+0x1d8>)
 8000676:	2201      	movs	r2, #1
 8000678:	601a      	str	r2, [r3, #0]
  for (int i=0;i<uLength;i++){
 800067a:	2300      	movs	r3, #0
 800067c:	617b      	str	r3, [r7, #20]
 800067e:	f000 bf8e 	b.w	800159e <HAL_GPIO_EXTI_Callback+0x108a>
      if (uRx_Data[i]=='.'){
 8000682:	4a19      	ldr	r2, [pc, #100]	; (80006e8 <HAL_GPIO_EXTI_Callback+0x1d4>)
 8000684:	697b      	ldr	r3, [r7, #20]
 8000686:	4413      	add	r3, r2
 8000688:	781b      	ldrb	r3, [r3, #0]
 800068a:	2b2e      	cmp	r3, #46	; 0x2e
 800068c:	f000 8784 	beq.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
          }
         else  if (uRx_Data[i]=='-'){
 8000690:	4a15      	ldr	r2, [pc, #84]	; (80006e8 <HAL_GPIO_EXTI_Callback+0x1d4>)
 8000692:	697b      	ldr	r3, [r7, #20]
 8000694:	4413      	add	r3, r2
 8000696:	781b      	ldrb	r3, [r3, #0]
 8000698:	2b2d      	cmp	r3, #45	; 0x2d
 800069a:	f000 877d 	beq.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>

       }
         else if (uRx_Data[i]=='/'){
 800069e:	4a12      	ldr	r2, [pc, #72]	; (80006e8 <HAL_GPIO_EXTI_Callback+0x1d4>)
 80006a0:	697b      	ldr	r3, [r7, #20]
 80006a2:	4413      	add	r3, r2
 80006a4:	781b      	ldrb	r3, [r3, #0]
 80006a6:	2b2f      	cmp	r3, #47	; 0x2f
 80006a8:	f040 8776 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
        	   int f=0;
 80006ac:	2300      	movs	r3, #0
 80006ae:	613b      	str	r3, [r7, #16]
        	   for (int j=k;j<=i-1;j++){
 80006b0:	4b0f      	ldr	r3, [pc, #60]	; (80006f0 <HAL_GPIO_EXTI_Callback+0x1dc>)
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	60fb      	str	r3, [r7, #12]
 80006b6:	e020      	b.n	80006fa <HAL_GPIO_EXTI_Callback+0x1e6>
        		   if (uRx_Data[j]!='.'&&uRx_Data[j]!='-'){
 80006b8:	4a0b      	ldr	r2, [pc, #44]	; (80006e8 <HAL_GPIO_EXTI_Callback+0x1d4>)
 80006ba:	68fb      	ldr	r3, [r7, #12]
 80006bc:	4413      	add	r3, r2
 80006be:	781b      	ldrb	r3, [r3, #0]
 80006c0:	2b2e      	cmp	r3, #46	; 0x2e
 80006c2:	d017      	beq.n	80006f4 <HAL_GPIO_EXTI_Callback+0x1e0>
 80006c4:	4a08      	ldr	r2, [pc, #32]	; (80006e8 <HAL_GPIO_EXTI_Callback+0x1d4>)
 80006c6:	68fb      	ldr	r3, [r7, #12]
 80006c8:	4413      	add	r3, r2
 80006ca:	781b      	ldrb	r3, [r3, #0]
 80006cc:	2b2d      	cmp	r3, #45	; 0x2d
 80006ce:	d011      	beq.n	80006f4 <HAL_GPIO_EXTI_Callback+0x1e0>
        			   f=1;
 80006d0:	2301      	movs	r3, #1
 80006d2:	613b      	str	r3, [r7, #16]
        			   break;
 80006d4:	e015      	b.n	8000702 <HAL_GPIO_EXTI_Callback+0x1ee>
 80006d6:	bf00      	nop
 80006d8:	40010800 	.word	0x40010800
 80006dc:	40011400 	.word	0x40011400
 80006e0:	40011000 	.word	0x40011000
 80006e4:	2000142c 	.word	0x2000142c
 80006e8:	2000042c 	.word	0x2000042c
 80006ec:	20001430 	.word	0x20001430
 80006f0:	20001434 	.word	0x20001434
        	   for (int j=k;j<=i-1;j++){
 80006f4:	68fb      	ldr	r3, [r7, #12]
 80006f6:	3301      	adds	r3, #1
 80006f8:	60fb      	str	r3, [r7, #12]
 80006fa:	697a      	ldr	r2, [r7, #20]
 80006fc:	68fb      	ldr	r3, [r7, #12]
 80006fe:	429a      	cmp	r2, r3
 8000700:	dcda      	bgt.n	80006b8 <HAL_GPIO_EXTI_Callback+0x1a4>
        		   }
        	   }
        	   if (f==1||i-k>4||(i-k==4&&((uRx_Data[k]=='.'&&uRx_Data[k+1]=='.'&&uRx_Data[k+2]=='-'&&uRx_Data[k+3]=='-')
 8000702:	693b      	ldr	r3, [r7, #16]
 8000704:	2b01      	cmp	r3, #1
 8000706:	d07c      	beq.n	8000802 <HAL_GPIO_EXTI_Callback+0x2ee>
 8000708:	4b83      	ldr	r3, [pc, #524]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 800070a:	681b      	ldr	r3, [r3, #0]
 800070c:	697a      	ldr	r2, [r7, #20]
 800070e:	1ad3      	subs	r3, r2, r3
 8000710:	2b04      	cmp	r3, #4
 8000712:	dc76      	bgt.n	8000802 <HAL_GPIO_EXTI_Callback+0x2ee>
 8000714:	4b80      	ldr	r3, [pc, #512]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 8000716:	681b      	ldr	r3, [r3, #0]
 8000718:	697a      	ldr	r2, [r7, #20]
 800071a:	1ad3      	subs	r3, r2, r3
 800071c:	2b04      	cmp	r3, #4
 800071e:	f040 8109 	bne.w	8000934 <HAL_GPIO_EXTI_Callback+0x420>
 8000722:	4b7d      	ldr	r3, [pc, #500]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	4a7d      	ldr	r2, [pc, #500]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 8000728:	5cd3      	ldrb	r3, [r2, r3]
 800072a:	2b2e      	cmp	r3, #46	; 0x2e
 800072c:	d114      	bne.n	8000758 <HAL_GPIO_EXTI_Callback+0x244>
 800072e:	4b7a      	ldr	r3, [pc, #488]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	3301      	adds	r3, #1
 8000734:	4a79      	ldr	r2, [pc, #484]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 8000736:	5cd3      	ldrb	r3, [r2, r3]
 8000738:	2b2e      	cmp	r3, #46	; 0x2e
 800073a:	d10d      	bne.n	8000758 <HAL_GPIO_EXTI_Callback+0x244>
 800073c:	4b76      	ldr	r3, [pc, #472]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	3302      	adds	r3, #2
 8000742:	4a76      	ldr	r2, [pc, #472]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 8000744:	5cd3      	ldrb	r3, [r2, r3]
 8000746:	2b2d      	cmp	r3, #45	; 0x2d
 8000748:	d106      	bne.n	8000758 <HAL_GPIO_EXTI_Callback+0x244>
 800074a:	4b73      	ldr	r3, [pc, #460]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 800074c:	681b      	ldr	r3, [r3, #0]
 800074e:	3303      	adds	r3, #3
 8000750:	4a72      	ldr	r2, [pc, #456]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 8000752:	5cd3      	ldrb	r3, [r2, r3]
 8000754:	2b2d      	cmp	r3, #45	; 0x2d
 8000756:	d054      	beq.n	8000802 <HAL_GPIO_EXTI_Callback+0x2ee>
        			   ||(uRx_Data[k]=='.'&&uRx_Data[k+1]=='-'&&uRx_Data[k+2]=='.'&&uRx_Data[k+3]=='-')
 8000758:	4b6f      	ldr	r3, [pc, #444]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	4a6f      	ldr	r2, [pc, #444]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 800075e:	5cd3      	ldrb	r3, [r2, r3]
 8000760:	2b2e      	cmp	r3, #46	; 0x2e
 8000762:	d114      	bne.n	800078e <HAL_GPIO_EXTI_Callback+0x27a>
 8000764:	4b6c      	ldr	r3, [pc, #432]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	3301      	adds	r3, #1
 800076a:	4a6c      	ldr	r2, [pc, #432]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 800076c:	5cd3      	ldrb	r3, [r2, r3]
 800076e:	2b2d      	cmp	r3, #45	; 0x2d
 8000770:	d10d      	bne.n	800078e <HAL_GPIO_EXTI_Callback+0x27a>
 8000772:	4b69      	ldr	r3, [pc, #420]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 8000774:	681b      	ldr	r3, [r3, #0]
 8000776:	3302      	adds	r3, #2
 8000778:	4a68      	ldr	r2, [pc, #416]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 800077a:	5cd3      	ldrb	r3, [r2, r3]
 800077c:	2b2e      	cmp	r3, #46	; 0x2e
 800077e:	d106      	bne.n	800078e <HAL_GPIO_EXTI_Callback+0x27a>
 8000780:	4b65      	ldr	r3, [pc, #404]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 8000782:	681b      	ldr	r3, [r3, #0]
 8000784:	3303      	adds	r3, #3
 8000786:	4a65      	ldr	r2, [pc, #404]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 8000788:	5cd3      	ldrb	r3, [r2, r3]
 800078a:	2b2d      	cmp	r3, #45	; 0x2d
 800078c:	d039      	beq.n	8000802 <HAL_GPIO_EXTI_Callback+0x2ee>
					   ||(uRx_Data[k]=='-'&&uRx_Data[k+1]=='-'&&uRx_Data[k+2]=='-'&&uRx_Data[k+3]=='.')
 800078e:	4b62      	ldr	r3, [pc, #392]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 8000790:	681b      	ldr	r3, [r3, #0]
 8000792:	4a62      	ldr	r2, [pc, #392]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 8000794:	5cd3      	ldrb	r3, [r2, r3]
 8000796:	2b2d      	cmp	r3, #45	; 0x2d
 8000798:	d114      	bne.n	80007c4 <HAL_GPIO_EXTI_Callback+0x2b0>
 800079a:	4b5f      	ldr	r3, [pc, #380]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	3301      	adds	r3, #1
 80007a0:	4a5e      	ldr	r2, [pc, #376]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 80007a2:	5cd3      	ldrb	r3, [r2, r3]
 80007a4:	2b2d      	cmp	r3, #45	; 0x2d
 80007a6:	d10d      	bne.n	80007c4 <HAL_GPIO_EXTI_Callback+0x2b0>
 80007a8:	4b5b      	ldr	r3, [pc, #364]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	3302      	adds	r3, #2
 80007ae:	4a5b      	ldr	r2, [pc, #364]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 80007b0:	5cd3      	ldrb	r3, [r2, r3]
 80007b2:	2b2d      	cmp	r3, #45	; 0x2d
 80007b4:	d106      	bne.n	80007c4 <HAL_GPIO_EXTI_Callback+0x2b0>
 80007b6:	4b58      	ldr	r3, [pc, #352]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 80007b8:	681b      	ldr	r3, [r3, #0]
 80007ba:	3303      	adds	r3, #3
 80007bc:	4a57      	ldr	r2, [pc, #348]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 80007be:	5cd3      	ldrb	r3, [r2, r3]
 80007c0:	2b2e      	cmp	r3, #46	; 0x2e
 80007c2:	d01e      	beq.n	8000802 <HAL_GPIO_EXTI_Callback+0x2ee>
					   ||(uRx_Data[k]=='-'&&uRx_Data[k+1]=='-'&&uRx_Data[k+2]=='-'&&uRx_Data[k+3]=='-')))){
 80007c4:	4b54      	ldr	r3, [pc, #336]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 80007c6:	681b      	ldr	r3, [r3, #0]
 80007c8:	4a54      	ldr	r2, [pc, #336]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 80007ca:	5cd3      	ldrb	r3, [r2, r3]
 80007cc:	2b2d      	cmp	r3, #45	; 0x2d
 80007ce:	f040 80b1 	bne.w	8000934 <HAL_GPIO_EXTI_Callback+0x420>
 80007d2:	4b51      	ldr	r3, [pc, #324]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 80007d4:	681b      	ldr	r3, [r3, #0]
 80007d6:	3301      	adds	r3, #1
 80007d8:	4a50      	ldr	r2, [pc, #320]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 80007da:	5cd3      	ldrb	r3, [r2, r3]
 80007dc:	2b2d      	cmp	r3, #45	; 0x2d
 80007de:	f040 80a9 	bne.w	8000934 <HAL_GPIO_EXTI_Callback+0x420>
 80007e2:	4b4d      	ldr	r3, [pc, #308]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 80007e4:	681b      	ldr	r3, [r3, #0]
 80007e6:	3302      	adds	r3, #2
 80007e8:	4a4c      	ldr	r2, [pc, #304]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 80007ea:	5cd3      	ldrb	r3, [r2, r3]
 80007ec:	2b2d      	cmp	r3, #45	; 0x2d
 80007ee:	f040 80a1 	bne.w	8000934 <HAL_GPIO_EXTI_Callback+0x420>
 80007f2:	4b49      	ldr	r3, [pc, #292]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 80007f4:	681b      	ldr	r3, [r3, #0]
 80007f6:	3303      	adds	r3, #3
 80007f8:	4a48      	ldr	r2, [pc, #288]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 80007fa:	5cd3      	ldrb	r3, [r2, r3]
 80007fc:	2b2d      	cmp	r3, #45	; 0x2d
 80007fe:	f040 8099 	bne.w	8000934 <HAL_GPIO_EXTI_Callback+0x420>
        		    uRx_Data1[uLength1]='d';
 8000802:	4b47      	ldr	r3, [pc, #284]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 8000804:	781b      	ldrb	r3, [r3, #0]
 8000806:	461a      	mov	r2, r3
 8000808:	4b46      	ldr	r3, [pc, #280]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 800080a:	2164      	movs	r1, #100	; 0x64
 800080c:	5499      	strb	r1, [r3, r2]
	        	    	uRx_Data1[uLength1+1]='e';
 800080e:	4b44      	ldr	r3, [pc, #272]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 8000810:	781b      	ldrb	r3, [r3, #0]
 8000812:	3301      	adds	r3, #1
 8000814:	4a43      	ldr	r2, [pc, #268]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 8000816:	2165      	movs	r1, #101	; 0x65
 8000818:	54d1      	strb	r1, [r2, r3]
	        	    	uRx_Data1[uLength1+2]='c';
 800081a:	4b41      	ldr	r3, [pc, #260]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 800081c:	781b      	ldrb	r3, [r3, #0]
 800081e:	3302      	adds	r3, #2
 8000820:	4a40      	ldr	r2, [pc, #256]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 8000822:	2163      	movs	r1, #99	; 0x63
 8000824:	54d1      	strb	r1, [r2, r3]
	        	    	uRx_Data1[uLength1+3]='o';
 8000826:	4b3e      	ldr	r3, [pc, #248]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 8000828:	781b      	ldrb	r3, [r3, #0]
 800082a:	3303      	adds	r3, #3
 800082c:	4a3d      	ldr	r2, [pc, #244]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 800082e:	216f      	movs	r1, #111	; 0x6f
 8000830:	54d1      	strb	r1, [r2, r3]
	        	    	uRx_Data1[uLength1+4]='d';
 8000832:	4b3b      	ldr	r3, [pc, #236]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 8000834:	781b      	ldrb	r3, [r3, #0]
 8000836:	3304      	adds	r3, #4
 8000838:	4a3a      	ldr	r2, [pc, #232]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 800083a:	2164      	movs	r1, #100	; 0x64
 800083c:	54d1      	strb	r1, [r2, r3]
	        	    	uRx_Data1[uLength1+5]='e';
 800083e:	4b38      	ldr	r3, [pc, #224]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 8000840:	781b      	ldrb	r3, [r3, #0]
 8000842:	3305      	adds	r3, #5
 8000844:	4a37      	ldr	r2, [pc, #220]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 8000846:	2165      	movs	r1, #101	; 0x65
 8000848:	54d1      	strb	r1, [r2, r3]
	        	    	uRx_Data1[uLength1+6]=' ';
 800084a:	4b35      	ldr	r3, [pc, #212]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 800084c:	781b      	ldrb	r3, [r3, #0]
 800084e:	3306      	adds	r3, #6
 8000850:	4a34      	ldr	r2, [pc, #208]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 8000852:	2120      	movs	r1, #32
 8000854:	54d1      	strb	r1, [r2, r3]
	        	    	uRx_Data1[uLength1+7]='E';
 8000856:	4b32      	ldr	r3, [pc, #200]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 8000858:	781b      	ldrb	r3, [r3, #0]
 800085a:	3307      	adds	r3, #7
 800085c:	4a31      	ldr	r2, [pc, #196]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 800085e:	2145      	movs	r1, #69	; 0x45
 8000860:	54d1      	strb	r1, [r2, r3]
	        	    	uRx_Data1[uLength1+8]='r';
 8000862:	4b2f      	ldr	r3, [pc, #188]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 8000864:	781b      	ldrb	r3, [r3, #0]
 8000866:	3308      	adds	r3, #8
 8000868:	4a2e      	ldr	r2, [pc, #184]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 800086a:	2172      	movs	r1, #114	; 0x72
 800086c:	54d1      	strb	r1, [r2, r3]
	        	    	uRx_Data1[uLength1+9]='r';
 800086e:	4b2c      	ldr	r3, [pc, #176]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 8000870:	781b      	ldrb	r3, [r3, #0]
 8000872:	3309      	adds	r3, #9
 8000874:	4a2b      	ldr	r2, [pc, #172]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 8000876:	2172      	movs	r1, #114	; 0x72
 8000878:	54d1      	strb	r1, [r2, r3]
	        	    	uRx_Data1[uLength1+10]='o';
 800087a:	4b29      	ldr	r3, [pc, #164]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 800087c:	781b      	ldrb	r3, [r3, #0]
 800087e:	330a      	adds	r3, #10
 8000880:	4a28      	ldr	r2, [pc, #160]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 8000882:	216f      	movs	r1, #111	; 0x6f
 8000884:	54d1      	strb	r1, [r2, r3]
	        	    	uRx_Data1[uLength1+11]='r';
 8000886:	4b26      	ldr	r3, [pc, #152]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 8000888:	781b      	ldrb	r3, [r3, #0]
 800088a:	330b      	adds	r3, #11
 800088c:	4a25      	ldr	r2, [pc, #148]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 800088e:	2172      	movs	r1, #114	; 0x72
 8000890:	54d1      	strb	r1, [r2, r3]
	        	    	uRx_Data1[uLength1+12]=':';
 8000892:	4b23      	ldr	r3, [pc, #140]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 8000894:	781b      	ldrb	r3, [r3, #0]
 8000896:	330c      	adds	r3, #12
 8000898:	4a22      	ldr	r2, [pc, #136]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 800089a:	213a      	movs	r1, #58	; 0x3a
 800089c:	54d1      	strb	r1, [r2, r3]
	        	    	uRx_Data1[uLength1+13]=' ';
 800089e:	4b20      	ldr	r3, [pc, #128]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 80008a0:	781b      	ldrb	r3, [r3, #0]
 80008a2:	330d      	adds	r3, #13
 80008a4:	4a1f      	ldr	r2, [pc, #124]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 80008a6:	2120      	movs	r1, #32
 80008a8:	54d1      	strb	r1, [r2, r3]
	        	    	for (int j=k;j<=i-1;j++){
 80008aa:	4b1b      	ldr	r3, [pc, #108]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 80008ac:	681b      	ldr	r3, [r3, #0]
 80008ae:	60bb      	str	r3, [r7, #8]
 80008b0:	e012      	b.n	80008d8 <HAL_GPIO_EXTI_Callback+0x3c4>
 	        		  	uRx_Data1[uLength1+13+j-k+1]=uRx_Data[j];
 80008b2:	4b1b      	ldr	r3, [pc, #108]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 80008b4:	781b      	ldrb	r3, [r3, #0]
 80008b6:	f103 020d 	add.w	r2, r3, #13
 80008ba:	68bb      	ldr	r3, [r7, #8]
 80008bc:	441a      	add	r2, r3
 80008be:	4b16      	ldr	r3, [pc, #88]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 80008c0:	681b      	ldr	r3, [r3, #0]
 80008c2:	1ad3      	subs	r3, r2, r3
 80008c4:	3301      	adds	r3, #1
 80008c6:	4915      	ldr	r1, [pc, #84]	; (800091c <HAL_GPIO_EXTI_Callback+0x408>)
 80008c8:	68ba      	ldr	r2, [r7, #8]
 80008ca:	440a      	add	r2, r1
 80008cc:	7811      	ldrb	r1, [r2, #0]
 80008ce:	4a15      	ldr	r2, [pc, #84]	; (8000924 <HAL_GPIO_EXTI_Callback+0x410>)
 80008d0:	54d1      	strb	r1, [r2, r3]
	        	    	for (int j=k;j<=i-1;j++){
 80008d2:	68bb      	ldr	r3, [r7, #8]
 80008d4:	3301      	adds	r3, #1
 80008d6:	60bb      	str	r3, [r7, #8]
 80008d8:	697a      	ldr	r2, [r7, #20]
 80008da:	68bb      	ldr	r3, [r7, #8]
 80008dc:	429a      	cmp	r2, r3
 80008de:	dce8      	bgt.n	80008b2 <HAL_GPIO_EXTI_Callback+0x39e>
 	        	   }
	        	    	uLength1+=13+i-k+1;
 80008e0:	697b      	ldr	r3, [r7, #20]
 80008e2:	b2da      	uxtb	r2, r3
 80008e4:	4b0c      	ldr	r3, [pc, #48]	; (8000918 <HAL_GPIO_EXTI_Callback+0x404>)
 80008e6:	681b      	ldr	r3, [r3, #0]
 80008e8:	b2db      	uxtb	r3, r3
 80008ea:	1ad3      	subs	r3, r2, r3
 80008ec:	b2da      	uxtb	r2, r3
 80008ee:	4b0c      	ldr	r3, [pc, #48]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 80008f0:	781b      	ldrb	r3, [r3, #0]
 80008f2:	4413      	add	r3, r2
 80008f4:	b2db      	uxtb	r3, r3
 80008f6:	330e      	adds	r3, #14
 80008f8:	b2da      	uxtb	r2, r3
 80008fa:	4b09      	ldr	r3, [pc, #36]	; (8000920 <HAL_GPIO_EXTI_Callback+0x40c>)
 80008fc:	701a      	strb	r2, [r3, #0]
	        	    	//k=i+1;
	        	    uRx_Data2[h]='d';
 80008fe:	4b0a      	ldr	r3, [pc, #40]	; (8000928 <HAL_GPIO_EXTI_Callback+0x414>)
 8000900:	681b      	ldr	r3, [r3, #0]
 8000902:	4a0a      	ldr	r2, [pc, #40]	; (800092c <HAL_GPIO_EXTI_Callback+0x418>)
 8000904:	2164      	movs	r1, #100	; 0x64
 8000906:	54d1      	strb	r1, [r2, r3]
	        	    uLength2+=1;
 8000908:	4b09      	ldr	r3, [pc, #36]	; (8000930 <HAL_GPIO_EXTI_Callback+0x41c>)
 800090a:	781b      	ldrb	r3, [r3, #0]
 800090c:	3301      	adds	r3, #1
 800090e:	b2da      	uxtb	r2, r3
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <HAL_GPIO_EXTI_Callback+0x41c>)
 8000912:	701a      	strb	r2, [r3, #0]
 8000914:	f000 be40 	b.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
 8000918:	20001434 	.word	0x20001434
 800091c:	2000042c 	.word	0x2000042c
 8000920:	2000142d 	.word	0x2000142d
 8000924:	2000082c 	.word	0x2000082c
 8000928:	20001438 	.word	0x20001438
 800092c:	20000c2c 	.word	0x20000c2c
 8000930:	2000142e 	.word	0x2000142e
        	   }
        	   else {
        		   if (i-k==1){
 8000934:	4b8b      	ldr	r3, [pc, #556]	; (8000b64 <HAL_GPIO_EXTI_Callback+0x650>)
 8000936:	681b      	ldr	r3, [r3, #0]
 8000938:	697a      	ldr	r2, [r7, #20]
 800093a:	1ad3      	subs	r3, r2, r3
 800093c:	2b01      	cmp	r3, #1
 800093e:	d14a      	bne.n	80009d6 <HAL_GPIO_EXTI_Callback+0x4c2>
        			  if (uRx_Data[k]=='.') {
 8000940:	4b88      	ldr	r3, [pc, #544]	; (8000b64 <HAL_GPIO_EXTI_Callback+0x650>)
 8000942:	681b      	ldr	r3, [r3, #0]
 8000944:	4a88      	ldr	r2, [pc, #544]	; (8000b68 <HAL_GPIO_EXTI_Callback+0x654>)
 8000946:	5cd3      	ldrb	r3, [r2, r3]
 8000948:	2b2e      	cmp	r3, #46	; 0x2e
 800094a:	d11e      	bne.n	800098a <HAL_GPIO_EXTI_Callback+0x476>
        				  uRx_Data1[uLength1]='E';
 800094c:	4b87      	ldr	r3, [pc, #540]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 800094e:	781b      	ldrb	r3, [r3, #0]
 8000950:	461a      	mov	r2, r3
 8000952:	4b87      	ldr	r3, [pc, #540]	; (8000b70 <HAL_GPIO_EXTI_Callback+0x65c>)
 8000954:	2145      	movs	r1, #69	; 0x45
 8000956:	5499      	strb	r1, [r3, r2]
        				  uLength1++; uRx_Data2[h]='.';
 8000958:	4b84      	ldr	r3, [pc, #528]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 800095a:	781b      	ldrb	r3, [r3, #0]
 800095c:	3301      	adds	r3, #1
 800095e:	b2da      	uxtb	r2, r3
 8000960:	4b82      	ldr	r3, [pc, #520]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000962:	701a      	strb	r2, [r3, #0]
 8000964:	4b83      	ldr	r3, [pc, #524]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000966:	681b      	ldr	r3, [r3, #0]
 8000968:	4a83      	ldr	r2, [pc, #524]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 800096a:	212e      	movs	r1, #46	; 0x2e
 800096c:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+1]='/';
 800096e:	4b81      	ldr	r3, [pc, #516]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000970:	681b      	ldr	r3, [r3, #0]
 8000972:	3301      	adds	r3, #1
 8000974:	4a80      	ldr	r2, [pc, #512]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000976:	212f      	movs	r1, #47	; 0x2f
 8000978:	54d1      	strb	r1, [r2, r3]
  	 	        	    	//k=k+2;
  	 	        	        uLength2+=2;
 800097a:	4b80      	ldr	r3, [pc, #512]	; (8000b7c <HAL_GPIO_EXTI_Callback+0x668>)
 800097c:	781b      	ldrb	r3, [r3, #0]
 800097e:	3302      	adds	r3, #2
 8000980:	b2da      	uxtb	r2, r3
 8000982:	4b7e      	ldr	r3, [pc, #504]	; (8000b7c <HAL_GPIO_EXTI_Callback+0x668>)
 8000984:	701a      	strb	r2, [r3, #0]
 8000986:	f000 be07 	b.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>

        			  }
        			  else if (uRx_Data[k]=='-') {
 800098a:	4b76      	ldr	r3, [pc, #472]	; (8000b64 <HAL_GPIO_EXTI_Callback+0x650>)
 800098c:	681b      	ldr	r3, [r3, #0]
 800098e:	4a76      	ldr	r2, [pc, #472]	; (8000b68 <HAL_GPIO_EXTI_Callback+0x654>)
 8000990:	5cd3      	ldrb	r3, [r2, r3]
 8000992:	2b2d      	cmp	r3, #45	; 0x2d
 8000994:	f040 8600 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
        				  uRx_Data1[uLength1]='T';
 8000998:	4b74      	ldr	r3, [pc, #464]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 800099a:	781b      	ldrb	r3, [r3, #0]
 800099c:	461a      	mov	r2, r3
 800099e:	4b74      	ldr	r3, [pc, #464]	; (8000b70 <HAL_GPIO_EXTI_Callback+0x65c>)
 80009a0:	2154      	movs	r1, #84	; 0x54
 80009a2:	5499      	strb	r1, [r3, r2]
        				  uLength1++;uRx_Data2[h]='-';
 80009a4:	4b71      	ldr	r3, [pc, #452]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 80009a6:	781b      	ldrb	r3, [r3, #0]
 80009a8:	3301      	adds	r3, #1
 80009aa:	b2da      	uxtb	r2, r3
 80009ac:	4b6f      	ldr	r3, [pc, #444]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 80009ae:	701a      	strb	r2, [r3, #0]
 80009b0:	4b70      	ldr	r3, [pc, #448]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 80009b2:	681b      	ldr	r3, [r3, #0]
 80009b4:	4a70      	ldr	r2, [pc, #448]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 80009b6:	212d      	movs	r1, #45	; 0x2d
 80009b8:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+1]='/';
 80009ba:	4b6e      	ldr	r3, [pc, #440]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 80009bc:	681b      	ldr	r3, [r3, #0]
 80009be:	3301      	adds	r3, #1
 80009c0:	4a6d      	ldr	r2, [pc, #436]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 80009c2:	212f      	movs	r1, #47	; 0x2f
 80009c4:	54d1      	strb	r1, [r2, r3]
  	 	        	    	//k=k+2;
  	 	        	        uLength2+=2;
 80009c6:	4b6d      	ldr	r3, [pc, #436]	; (8000b7c <HAL_GPIO_EXTI_Callback+0x668>)
 80009c8:	781b      	ldrb	r3, [r3, #0]
 80009ca:	3302      	adds	r3, #2
 80009cc:	b2da      	uxtb	r2, r3
 80009ce:	4b6b      	ldr	r3, [pc, #428]	; (8000b7c <HAL_GPIO_EXTI_Callback+0x668>)
 80009d0:	701a      	strb	r2, [r3, #0]
 80009d2:	f000 bde1 	b.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
        			  }
        		  }else if(i-k==2) {
 80009d6:	4b63      	ldr	r3, [pc, #396]	; (8000b64 <HAL_GPIO_EXTI_Callback+0x650>)
 80009d8:	681b      	ldr	r3, [r3, #0]
 80009da:	697a      	ldr	r2, [r7, #20]
 80009dc:	1ad3      	subs	r3, r2, r3
 80009de:	2b02      	cmp	r3, #2
 80009e0:	f040 80ce 	bne.w	8000b80 <HAL_GPIO_EXTI_Callback+0x66c>
        			 if (uRx_Data[k]=='.') {
 80009e4:	4b5f      	ldr	r3, [pc, #380]	; (8000b64 <HAL_GPIO_EXTI_Callback+0x650>)
 80009e6:	681b      	ldr	r3, [r3, #0]
 80009e8:	4a5f      	ldr	r2, [pc, #380]	; (8000b68 <HAL_GPIO_EXTI_Callback+0x654>)
 80009ea:	5cd3      	ldrb	r3, [r2, r3]
 80009ec:	2b2e      	cmp	r3, #46	; 0x2e
 80009ee:	d158      	bne.n	8000aa2 <HAL_GPIO_EXTI_Callback+0x58e>
        				  if (uRx_Data[k+1]=='.') {
 80009f0:	4b5c      	ldr	r3, [pc, #368]	; (8000b64 <HAL_GPIO_EXTI_Callback+0x650>)
 80009f2:	681b      	ldr	r3, [r3, #0]
 80009f4:	3301      	adds	r3, #1
 80009f6:	4a5c      	ldr	r2, [pc, #368]	; (8000b68 <HAL_GPIO_EXTI_Callback+0x654>)
 80009f8:	5cd3      	ldrb	r3, [r2, r3]
 80009fa:	2b2e      	cmp	r3, #46	; 0x2e
 80009fc:	d124      	bne.n	8000a48 <HAL_GPIO_EXTI_Callback+0x534>
        				       uRx_Data1[uLength1]='I';
 80009fe:	4b5b      	ldr	r3, [pc, #364]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000a00:	781b      	ldrb	r3, [r3, #0]
 8000a02:	461a      	mov	r2, r3
 8000a04:	4b5a      	ldr	r3, [pc, #360]	; (8000b70 <HAL_GPIO_EXTI_Callback+0x65c>)
 8000a06:	2149      	movs	r1, #73	; 0x49
 8000a08:	5499      	strb	r1, [r3, r2]
        				       uLength1++;uRx_Data2[h]='.';
 8000a0a:	4b58      	ldr	r3, [pc, #352]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000a0c:	781b      	ldrb	r3, [r3, #0]
 8000a0e:	3301      	adds	r3, #1
 8000a10:	b2da      	uxtb	r2, r3
 8000a12:	4b56      	ldr	r3, [pc, #344]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000a14:	701a      	strb	r2, [r3, #0]
 8000a16:	4b57      	ldr	r3, [pc, #348]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000a18:	681b      	ldr	r3, [r3, #0]
 8000a1a:	4a57      	ldr	r2, [pc, #348]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000a1c:	212e      	movs	r1, #46	; 0x2e
 8000a1e:	54d1      	strb	r1, [r2, r3]
    	 	        	    	uRx_Data2[h+1]='.';
 8000a20:	4b54      	ldr	r3, [pc, #336]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000a22:	681b      	ldr	r3, [r3, #0]
 8000a24:	3301      	adds	r3, #1
 8000a26:	4a54      	ldr	r2, [pc, #336]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000a28:	212e      	movs	r1, #46	; 0x2e
 8000a2a:	54d1      	strb	r1, [r2, r3]
    	 	        	    	uRx_Data2[h+2]='/';
 8000a2c:	4b51      	ldr	r3, [pc, #324]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000a2e:	681b      	ldr	r3, [r3, #0]
 8000a30:	3302      	adds	r3, #2
 8000a32:	4a51      	ldr	r2, [pc, #324]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000a34:	212f      	movs	r1, #47	; 0x2f
 8000a36:	54d1      	strb	r1, [r2, r3]
       	 	        	    	//k=k+3;
       	 	        	        uLength2+=3;
 8000a38:	4b50      	ldr	r3, [pc, #320]	; (8000b7c <HAL_GPIO_EXTI_Callback+0x668>)
 8000a3a:	781b      	ldrb	r3, [r3, #0]
 8000a3c:	3303      	adds	r3, #3
 8000a3e:	b2da      	uxtb	r2, r3
 8000a40:	4b4e      	ldr	r3, [pc, #312]	; (8000b7c <HAL_GPIO_EXTI_Callback+0x668>)
 8000a42:	701a      	strb	r2, [r3, #0]
 8000a44:	f000 bda8 	b.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
        				   }
        				 else if (uRx_Data[k+1]=='-') {
 8000a48:	4b46      	ldr	r3, [pc, #280]	; (8000b64 <HAL_GPIO_EXTI_Callback+0x650>)
 8000a4a:	681b      	ldr	r3, [r3, #0]
 8000a4c:	3301      	adds	r3, #1
 8000a4e:	4a46      	ldr	r2, [pc, #280]	; (8000b68 <HAL_GPIO_EXTI_Callback+0x654>)
 8000a50:	5cd3      	ldrb	r3, [r2, r3]
 8000a52:	2b2d      	cmp	r3, #45	; 0x2d
 8000a54:	f040 85a0 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
        				       uRx_Data1[uLength1]='A';
 8000a58:	4b44      	ldr	r3, [pc, #272]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000a5a:	781b      	ldrb	r3, [r3, #0]
 8000a5c:	461a      	mov	r2, r3
 8000a5e:	4b44      	ldr	r3, [pc, #272]	; (8000b70 <HAL_GPIO_EXTI_Callback+0x65c>)
 8000a60:	2141      	movs	r1, #65	; 0x41
 8000a62:	5499      	strb	r1, [r3, r2]
        				       uLength1++;
 8000a64:	4b41      	ldr	r3, [pc, #260]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000a66:	781b      	ldrb	r3, [r3, #0]
 8000a68:	3301      	adds	r3, #1
 8000a6a:	b2da      	uxtb	r2, r3
 8000a6c:	4b3f      	ldr	r3, [pc, #252]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000a6e:	701a      	strb	r2, [r3, #0]
        				       uRx_Data2[h]='.';
 8000a70:	4b40      	ldr	r3, [pc, #256]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000a72:	681b      	ldr	r3, [r3, #0]
 8000a74:	4a40      	ldr	r2, [pc, #256]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000a76:	212e      	movs	r1, #46	; 0x2e
 8000a78:	54d1      	strb	r1, [r2, r3]
  	 	        	    	  uRx_Data2[h+1]='-';
 8000a7a:	4b3e      	ldr	r3, [pc, #248]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000a7c:	681b      	ldr	r3, [r3, #0]
 8000a7e:	3301      	adds	r3, #1
 8000a80:	4a3d      	ldr	r2, [pc, #244]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000a82:	212d      	movs	r1, #45	; 0x2d
 8000a84:	54d1      	strb	r1, [r2, r3]
  	 	        	    	  uRx_Data2[h+2]='/';
 8000a86:	4b3b      	ldr	r3, [pc, #236]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000a88:	681b      	ldr	r3, [r3, #0]
 8000a8a:	3302      	adds	r3, #2
 8000a8c:	4a3a      	ldr	r2, [pc, #232]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000a8e:	212f      	movs	r1, #47	; 0x2f
 8000a90:	54d1      	strb	r1, [r2, r3]
  	 	        	    	//k=k+3;
  	 	        	        uLength2+=3;
 8000a92:	4b3a      	ldr	r3, [pc, #232]	; (8000b7c <HAL_GPIO_EXTI_Callback+0x668>)
 8000a94:	781b      	ldrb	r3, [r3, #0]
 8000a96:	3303      	adds	r3, #3
 8000a98:	b2da      	uxtb	r2, r3
 8000a9a:	4b38      	ldr	r3, [pc, #224]	; (8000b7c <HAL_GPIO_EXTI_Callback+0x668>)
 8000a9c:	701a      	strb	r2, [r3, #0]
 8000a9e:	f000 bd7b 	b.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>

        				   }

        			  }
        			 else if (uRx_Data[k]=='-') {
 8000aa2:	4b30      	ldr	r3, [pc, #192]	; (8000b64 <HAL_GPIO_EXTI_Callback+0x650>)
 8000aa4:	681b      	ldr	r3, [r3, #0]
 8000aa6:	4a30      	ldr	r2, [pc, #192]	; (8000b68 <HAL_GPIO_EXTI_Callback+0x654>)
 8000aa8:	5cd3      	ldrb	r3, [r2, r3]
 8000aaa:	2b2d      	cmp	r3, #45	; 0x2d
 8000aac:	f040 8574 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
        				  if (uRx_Data[k+1]=='.') {
 8000ab0:	4b2c      	ldr	r3, [pc, #176]	; (8000b64 <HAL_GPIO_EXTI_Callback+0x650>)
 8000ab2:	681b      	ldr	r3, [r3, #0]
 8000ab4:	3301      	adds	r3, #1
 8000ab6:	4a2c      	ldr	r2, [pc, #176]	; (8000b68 <HAL_GPIO_EXTI_Callback+0x654>)
 8000ab8:	5cd3      	ldrb	r3, [r2, r3]
 8000aba:	2b2e      	cmp	r3, #46	; 0x2e
 8000abc:	d124      	bne.n	8000b08 <HAL_GPIO_EXTI_Callback+0x5f4>
        				        uRx_Data1[uLength1]='N';
 8000abe:	4b2b      	ldr	r3, [pc, #172]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000ac0:	781b      	ldrb	r3, [r3, #0]
 8000ac2:	461a      	mov	r2, r3
 8000ac4:	4b2a      	ldr	r3, [pc, #168]	; (8000b70 <HAL_GPIO_EXTI_Callback+0x65c>)
 8000ac6:	214e      	movs	r1, #78	; 0x4e
 8000ac8:	5499      	strb	r1, [r3, r2]
        				        uLength1++;uRx_Data2[h]='-';
 8000aca:	4b28      	ldr	r3, [pc, #160]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000acc:	781b      	ldrb	r3, [r3, #0]
 8000ace:	3301      	adds	r3, #1
 8000ad0:	b2da      	uxtb	r2, r3
 8000ad2:	4b26      	ldr	r3, [pc, #152]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000ad4:	701a      	strb	r2, [r3, #0]
 8000ad6:	4b27      	ldr	r3, [pc, #156]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000ad8:	681b      	ldr	r3, [r3, #0]
 8000ada:	4a27      	ldr	r2, [pc, #156]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000adc:	212d      	movs	r1, #45	; 0x2d
 8000ade:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+1]='.';
 8000ae0:	4b24      	ldr	r3, [pc, #144]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	3301      	adds	r3, #1
 8000ae6:	4a24      	ldr	r2, [pc, #144]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000ae8:	212e      	movs	r1, #46	; 0x2e
 8000aea:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+2]='/';
 8000aec:	4b21      	ldr	r3, [pc, #132]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000aee:	681b      	ldr	r3, [r3, #0]
 8000af0:	3302      	adds	r3, #2
 8000af2:	4a21      	ldr	r2, [pc, #132]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000af4:	212f      	movs	r1, #47	; 0x2f
 8000af6:	54d1      	strb	r1, [r2, r3]
        	 	        	    	//k=k+3;
        	 	        	        uLength2+=3;
 8000af8:	4b20      	ldr	r3, [pc, #128]	; (8000b7c <HAL_GPIO_EXTI_Callback+0x668>)
 8000afa:	781b      	ldrb	r3, [r3, #0]
 8000afc:	3303      	adds	r3, #3
 8000afe:	b2da      	uxtb	r2, r3
 8000b00:	4b1e      	ldr	r3, [pc, #120]	; (8000b7c <HAL_GPIO_EXTI_Callback+0x668>)
 8000b02:	701a      	strb	r2, [r3, #0]
 8000b04:	f000 bd48 	b.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
        				  }
        				  else if (uRx_Data[k+1]=='-') {
 8000b08:	4b16      	ldr	r3, [pc, #88]	; (8000b64 <HAL_GPIO_EXTI_Callback+0x650>)
 8000b0a:	681b      	ldr	r3, [r3, #0]
 8000b0c:	3301      	adds	r3, #1
 8000b0e:	4a16      	ldr	r2, [pc, #88]	; (8000b68 <HAL_GPIO_EXTI_Callback+0x654>)
 8000b10:	5cd3      	ldrb	r3, [r2, r3]
 8000b12:	2b2d      	cmp	r3, #45	; 0x2d
 8000b14:	f040 8540 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
        				        uRx_Data1[uLength1]='M';
 8000b18:	4b14      	ldr	r3, [pc, #80]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000b1a:	781b      	ldrb	r3, [r3, #0]
 8000b1c:	461a      	mov	r2, r3
 8000b1e:	4b14      	ldr	r3, [pc, #80]	; (8000b70 <HAL_GPIO_EXTI_Callback+0x65c>)
 8000b20:	214d      	movs	r1, #77	; 0x4d
 8000b22:	5499      	strb	r1, [r3, r2]
        				        uLength1++;uRx_Data2[h]='-';
 8000b24:	4b11      	ldr	r3, [pc, #68]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000b26:	781b      	ldrb	r3, [r3, #0]
 8000b28:	3301      	adds	r3, #1
 8000b2a:	b2da      	uxtb	r2, r3
 8000b2c:	4b0f      	ldr	r3, [pc, #60]	; (8000b6c <HAL_GPIO_EXTI_Callback+0x658>)
 8000b2e:	701a      	strb	r2, [r3, #0]
 8000b30:	4b10      	ldr	r3, [pc, #64]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000b32:	681b      	ldr	r3, [r3, #0]
 8000b34:	4a10      	ldr	r2, [pc, #64]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000b36:	212d      	movs	r1, #45	; 0x2d
 8000b38:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+1]='-';
 8000b3a:	4b0e      	ldr	r3, [pc, #56]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000b3c:	681b      	ldr	r3, [r3, #0]
 8000b3e:	3301      	adds	r3, #1
 8000b40:	4a0d      	ldr	r2, [pc, #52]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000b42:	212d      	movs	r1, #45	; 0x2d
 8000b44:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+2]='/';
 8000b46:	4b0b      	ldr	r3, [pc, #44]	; (8000b74 <HAL_GPIO_EXTI_Callback+0x660>)
 8000b48:	681b      	ldr	r3, [r3, #0]
 8000b4a:	3302      	adds	r3, #2
 8000b4c:	4a0a      	ldr	r2, [pc, #40]	; (8000b78 <HAL_GPIO_EXTI_Callback+0x664>)
 8000b4e:	212f      	movs	r1, #47	; 0x2f
 8000b50:	54d1      	strb	r1, [r2, r3]
        	 	        	    	//k=k+3;
        	 	        	        uLength2+=3;
 8000b52:	4b0a      	ldr	r3, [pc, #40]	; (8000b7c <HAL_GPIO_EXTI_Callback+0x668>)
 8000b54:	781b      	ldrb	r3, [r3, #0]
 8000b56:	3303      	adds	r3, #3
 8000b58:	b2da      	uxtb	r2, r3
 8000b5a:	4b08      	ldr	r3, [pc, #32]	; (8000b7c <HAL_GPIO_EXTI_Callback+0x668>)
 8000b5c:	701a      	strb	r2, [r3, #0]
 8000b5e:	f000 bd1b 	b.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
 8000b62:	bf00      	nop
 8000b64:	20001434 	.word	0x20001434
 8000b68:	2000042c 	.word	0x2000042c
 8000b6c:	2000142d 	.word	0x2000142d
 8000b70:	2000082c 	.word	0x2000082c
 8000b74:	20001438 	.word	0x20001438
 8000b78:	20000c2c 	.word	0x20000c2c
 8000b7c:	2000142e 	.word	0x2000142e
        				  }

        			}

        		  }else if (i-k==3){
 8000b80:	4b92      	ldr	r3, [pc, #584]	; (8000dcc <HAL_GPIO_EXTI_Callback+0x8b8>)
 8000b82:	681b      	ldr	r3, [r3, #0]
 8000b84:	697a      	ldr	r2, [r7, #20]
 8000b86:	1ad3      	subs	r3, r2, r3
 8000b88:	2b03      	cmp	r3, #3
 8000b8a:	f040 81ca 	bne.w	8000f22 <HAL_GPIO_EXTI_Callback+0xa0e>
        	     if (uRx_Data[k]=='.') {
 8000b8e:	4b8f      	ldr	r3, [pc, #572]	; (8000dcc <HAL_GPIO_EXTI_Callback+0x8b8>)
 8000b90:	681b      	ldr	r3, [r3, #0]
 8000b92:	4a8f      	ldr	r2, [pc, #572]	; (8000dd0 <HAL_GPIO_EXTI_Callback+0x8bc>)
 8000b94:	5cd3      	ldrb	r3, [r2, r3]
 8000b96:	2b2e      	cmp	r3, #46	; 0x2e
 8000b98:	f040 80d9 	bne.w	8000d4e <HAL_GPIO_EXTI_Callback+0x83a>
    				  if (uRx_Data[k+1]=='.') {
 8000b9c:	4b8b      	ldr	r3, [pc, #556]	; (8000dcc <HAL_GPIO_EXTI_Callback+0x8b8>)
 8000b9e:	681b      	ldr	r3, [r3, #0]
 8000ba0:	3301      	adds	r3, #1
 8000ba2:	4a8b      	ldr	r2, [pc, #556]	; (8000dd0 <HAL_GPIO_EXTI_Callback+0x8bc>)
 8000ba4:	5cd3      	ldrb	r3, [r2, r3]
 8000ba6:	2b2e      	cmp	r3, #46	; 0x2e
 8000ba8:	d164      	bne.n	8000c74 <HAL_GPIO_EXTI_Callback+0x760>
    					  if (uRx_Data[k+2]=='.') {
 8000baa:	4b88      	ldr	r3, [pc, #544]	; (8000dcc <HAL_GPIO_EXTI_Callback+0x8b8>)
 8000bac:	681b      	ldr	r3, [r3, #0]
 8000bae:	3302      	adds	r3, #2
 8000bb0:	4a87      	ldr	r2, [pc, #540]	; (8000dd0 <HAL_GPIO_EXTI_Callback+0x8bc>)
 8000bb2:	5cd3      	ldrb	r3, [r2, r3]
 8000bb4:	2b2e      	cmp	r3, #46	; 0x2e
 8000bb6:	d12a      	bne.n	8000c0e <HAL_GPIO_EXTI_Callback+0x6fa>
   				       uRx_Data1[uLength1]='S';
 8000bb8:	4b86      	ldr	r3, [pc, #536]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000bba:	781b      	ldrb	r3, [r3, #0]
 8000bbc:	461a      	mov	r2, r3
 8000bbe:	4b86      	ldr	r3, [pc, #536]	; (8000dd8 <HAL_GPIO_EXTI_Callback+0x8c4>)
 8000bc0:	2153      	movs	r1, #83	; 0x53
 8000bc2:	5499      	strb	r1, [r3, r2]
   				       uLength1++; uRx_Data2[h]='.';
 8000bc4:	4b83      	ldr	r3, [pc, #524]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000bc6:	781b      	ldrb	r3, [r3, #0]
 8000bc8:	3301      	adds	r3, #1
 8000bca:	b2da      	uxtb	r2, r3
 8000bcc:	4b81      	ldr	r3, [pc, #516]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000bce:	701a      	strb	r2, [r3, #0]
 8000bd0:	4b82      	ldr	r3, [pc, #520]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000bd2:	681b      	ldr	r3, [r3, #0]
 8000bd4:	4a82      	ldr	r2, [pc, #520]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000bd6:	212e      	movs	r1, #46	; 0x2e
 8000bd8:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+1]='.';
 8000bda:	4b80      	ldr	r3, [pc, #512]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000bdc:	681b      	ldr	r3, [r3, #0]
 8000bde:	3301      	adds	r3, #1
 8000be0:	4a7f      	ldr	r2, [pc, #508]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000be2:	212e      	movs	r1, #46	; 0x2e
 8000be4:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+2]='.';
 8000be6:	4b7d      	ldr	r3, [pc, #500]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000be8:	681b      	ldr	r3, [r3, #0]
 8000bea:	3302      	adds	r3, #2
 8000bec:	4a7c      	ldr	r2, [pc, #496]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000bee:	212e      	movs	r1, #46	; 0x2e
 8000bf0:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+3]='/';
 8000bf2:	4b7a      	ldr	r3, [pc, #488]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000bf4:	681b      	ldr	r3, [r3, #0]
 8000bf6:	3303      	adds	r3, #3
 8000bf8:	4a79      	ldr	r2, [pc, #484]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000bfa:	212f      	movs	r1, #47	; 0x2f
 8000bfc:	54d1      	strb	r1, [r2, r3]
	 	        	    	//k=k+4;
	 	        	        uLength2+=4;
 8000bfe:	4b79      	ldr	r3, [pc, #484]	; (8000de4 <HAL_GPIO_EXTI_Callback+0x8d0>)
 8000c00:	781b      	ldrb	r3, [r3, #0]
 8000c02:	3304      	adds	r3, #4
 8000c04:	b2da      	uxtb	r2, r3
 8000c06:	4b77      	ldr	r3, [pc, #476]	; (8000de4 <HAL_GPIO_EXTI_Callback+0x8d0>)
 8000c08:	701a      	strb	r2, [r3, #0]
 8000c0a:	f000 bcc5 	b.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
   				   }
   				 else if (uRx_Data[k+2]=='-') {
 8000c0e:	4b6f      	ldr	r3, [pc, #444]	; (8000dcc <HAL_GPIO_EXTI_Callback+0x8b8>)
 8000c10:	681b      	ldr	r3, [r3, #0]
 8000c12:	3302      	adds	r3, #2
 8000c14:	4a6e      	ldr	r2, [pc, #440]	; (8000dd0 <HAL_GPIO_EXTI_Callback+0x8bc>)
 8000c16:	5cd3      	ldrb	r3, [r2, r3]
 8000c18:	2b2d      	cmp	r3, #45	; 0x2d
 8000c1a:	f040 84bd 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
   				       uRx_Data1[uLength1]='U';
 8000c1e:	4b6d      	ldr	r3, [pc, #436]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000c20:	781b      	ldrb	r3, [r3, #0]
 8000c22:	461a      	mov	r2, r3
 8000c24:	4b6c      	ldr	r3, [pc, #432]	; (8000dd8 <HAL_GPIO_EXTI_Callback+0x8c4>)
 8000c26:	2155      	movs	r1, #85	; 0x55
 8000c28:	5499      	strb	r1, [r3, r2]
   				       uLength1++;uRx_Data2[h]='.';
 8000c2a:	4b6a      	ldr	r3, [pc, #424]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000c2c:	781b      	ldrb	r3, [r3, #0]
 8000c2e:	3301      	adds	r3, #1
 8000c30:	b2da      	uxtb	r2, r3
 8000c32:	4b68      	ldr	r3, [pc, #416]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000c34:	701a      	strb	r2, [r3, #0]
 8000c36:	4b69      	ldr	r3, [pc, #420]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000c38:	681b      	ldr	r3, [r3, #0]
 8000c3a:	4a69      	ldr	r2, [pc, #420]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000c3c:	212e      	movs	r1, #46	; 0x2e
 8000c3e:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+1]='.';
 8000c40:	4b66      	ldr	r3, [pc, #408]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000c42:	681b      	ldr	r3, [r3, #0]
 8000c44:	3301      	adds	r3, #1
 8000c46:	4a66      	ldr	r2, [pc, #408]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000c48:	212e      	movs	r1, #46	; 0x2e
 8000c4a:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+2]='-';
 8000c4c:	4b63      	ldr	r3, [pc, #396]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000c4e:	681b      	ldr	r3, [r3, #0]
 8000c50:	3302      	adds	r3, #2
 8000c52:	4a63      	ldr	r2, [pc, #396]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000c54:	212d      	movs	r1, #45	; 0x2d
 8000c56:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+3]='/';
 8000c58:	4b60      	ldr	r3, [pc, #384]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000c5a:	681b      	ldr	r3, [r3, #0]
 8000c5c:	3303      	adds	r3, #3
 8000c5e:	4a60      	ldr	r2, [pc, #384]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000c60:	212f      	movs	r1, #47	; 0x2f
 8000c62:	54d1      	strb	r1, [r2, r3]
	 	        	    	//k=k+4;
	 	        	        uLength2+=4;
 8000c64:	4b5f      	ldr	r3, [pc, #380]	; (8000de4 <HAL_GPIO_EXTI_Callback+0x8d0>)
 8000c66:	781b      	ldrb	r3, [r3, #0]
 8000c68:	3304      	adds	r3, #4
 8000c6a:	b2da      	uxtb	r2, r3
 8000c6c:	4b5d      	ldr	r3, [pc, #372]	; (8000de4 <HAL_GPIO_EXTI_Callback+0x8d0>)
 8000c6e:	701a      	strb	r2, [r3, #0]
 8000c70:	f000 bc92 	b.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
   				   }

    				   }
    				 else if (uRx_Data[k+1]=='-') {
 8000c74:	4b55      	ldr	r3, [pc, #340]	; (8000dcc <HAL_GPIO_EXTI_Callback+0x8b8>)
 8000c76:	681b      	ldr	r3, [r3, #0]
 8000c78:	3301      	adds	r3, #1
 8000c7a:	4a55      	ldr	r2, [pc, #340]	; (8000dd0 <HAL_GPIO_EXTI_Callback+0x8bc>)
 8000c7c:	5cd3      	ldrb	r3, [r2, r3]
 8000c7e:	2b2d      	cmp	r3, #45	; 0x2d
 8000c80:	f040 848a 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
    					 if (uRx_Data[k+2]=='.') {
 8000c84:	4b51      	ldr	r3, [pc, #324]	; (8000dcc <HAL_GPIO_EXTI_Callback+0x8b8>)
 8000c86:	681b      	ldr	r3, [r3, #0]
 8000c88:	3302      	adds	r3, #2
 8000c8a:	4a51      	ldr	r2, [pc, #324]	; (8000dd0 <HAL_GPIO_EXTI_Callback+0x8bc>)
 8000c8c:	5cd3      	ldrb	r3, [r2, r3]
 8000c8e:	2b2e      	cmp	r3, #46	; 0x2e
 8000c90:	d12a      	bne.n	8000ce8 <HAL_GPIO_EXTI_Callback+0x7d4>
  				       uRx_Data1[uLength1]='R';
 8000c92:	4b50      	ldr	r3, [pc, #320]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000c94:	781b      	ldrb	r3, [r3, #0]
 8000c96:	461a      	mov	r2, r3
 8000c98:	4b4f      	ldr	r3, [pc, #316]	; (8000dd8 <HAL_GPIO_EXTI_Callback+0x8c4>)
 8000c9a:	2152      	movs	r1, #82	; 0x52
 8000c9c:	5499      	strb	r1, [r3, r2]
  				       uLength1++;uRx_Data2[h]='.';
 8000c9e:	4b4d      	ldr	r3, [pc, #308]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000ca0:	781b      	ldrb	r3, [r3, #0]
 8000ca2:	3301      	adds	r3, #1
 8000ca4:	b2da      	uxtb	r2, r3
 8000ca6:	4b4b      	ldr	r3, [pc, #300]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000ca8:	701a      	strb	r2, [r3, #0]
 8000caa:	4b4c      	ldr	r3, [pc, #304]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000cac:	681b      	ldr	r3, [r3, #0]
 8000cae:	4a4c      	ldr	r2, [pc, #304]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000cb0:	212e      	movs	r1, #46	; 0x2e
 8000cb2:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+1]='-';
 8000cb4:	4b49      	ldr	r3, [pc, #292]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000cb6:	681b      	ldr	r3, [r3, #0]
 8000cb8:	3301      	adds	r3, #1
 8000cba:	4a49      	ldr	r2, [pc, #292]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000cbc:	212d      	movs	r1, #45	; 0x2d
 8000cbe:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+2]='.';
 8000cc0:	4b46      	ldr	r3, [pc, #280]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000cc2:	681b      	ldr	r3, [r3, #0]
 8000cc4:	3302      	adds	r3, #2
 8000cc6:	4a46      	ldr	r2, [pc, #280]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000cc8:	212e      	movs	r1, #46	; 0x2e
 8000cca:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+3]='/';
 8000ccc:	4b43      	ldr	r3, [pc, #268]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000cce:	681b      	ldr	r3, [r3, #0]
 8000cd0:	3303      	adds	r3, #3
 8000cd2:	4a43      	ldr	r2, [pc, #268]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000cd4:	212f      	movs	r1, #47	; 0x2f
 8000cd6:	54d1      	strb	r1, [r2, r3]
	 	        	    	//k=k+4;
	 	        	        uLength2+=4;
 8000cd8:	4b42      	ldr	r3, [pc, #264]	; (8000de4 <HAL_GPIO_EXTI_Callback+0x8d0>)
 8000cda:	781b      	ldrb	r3, [r3, #0]
 8000cdc:	3304      	adds	r3, #4
 8000cde:	b2da      	uxtb	r2, r3
 8000ce0:	4b40      	ldr	r3, [pc, #256]	; (8000de4 <HAL_GPIO_EXTI_Callback+0x8d0>)
 8000ce2:	701a      	strb	r2, [r3, #0]
 8000ce4:	f000 bc58 	b.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
  				   }
  				 else if (uRx_Data[k+2]=='-') {
 8000ce8:	4b38      	ldr	r3, [pc, #224]	; (8000dcc <HAL_GPIO_EXTI_Callback+0x8b8>)
 8000cea:	681b      	ldr	r3, [r3, #0]
 8000cec:	3302      	adds	r3, #2
 8000cee:	4a38      	ldr	r2, [pc, #224]	; (8000dd0 <HAL_GPIO_EXTI_Callback+0x8bc>)
 8000cf0:	5cd3      	ldrb	r3, [r2, r3]
 8000cf2:	2b2d      	cmp	r3, #45	; 0x2d
 8000cf4:	f040 8450 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
  				       uRx_Data1[uLength1]='W';
 8000cf8:	4b36      	ldr	r3, [pc, #216]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000cfa:	781b      	ldrb	r3, [r3, #0]
 8000cfc:	461a      	mov	r2, r3
 8000cfe:	4b36      	ldr	r3, [pc, #216]	; (8000dd8 <HAL_GPIO_EXTI_Callback+0x8c4>)
 8000d00:	2157      	movs	r1, #87	; 0x57
 8000d02:	5499      	strb	r1, [r3, r2]
  				       uLength1++;uRx_Data2[h]='.';
 8000d04:	4b33      	ldr	r3, [pc, #204]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000d06:	781b      	ldrb	r3, [r3, #0]
 8000d08:	3301      	adds	r3, #1
 8000d0a:	b2da      	uxtb	r2, r3
 8000d0c:	4b31      	ldr	r3, [pc, #196]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000d0e:	701a      	strb	r2, [r3, #0]
 8000d10:	4b32      	ldr	r3, [pc, #200]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000d12:	681b      	ldr	r3, [r3, #0]
 8000d14:	4a32      	ldr	r2, [pc, #200]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000d16:	212e      	movs	r1, #46	; 0x2e
 8000d18:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+1]='-';
 8000d1a:	4b30      	ldr	r3, [pc, #192]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000d1c:	681b      	ldr	r3, [r3, #0]
 8000d1e:	3301      	adds	r3, #1
 8000d20:	4a2f      	ldr	r2, [pc, #188]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000d22:	212d      	movs	r1, #45	; 0x2d
 8000d24:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+2]='-';
 8000d26:	4b2d      	ldr	r3, [pc, #180]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000d28:	681b      	ldr	r3, [r3, #0]
 8000d2a:	3302      	adds	r3, #2
 8000d2c:	4a2c      	ldr	r2, [pc, #176]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000d2e:	212d      	movs	r1, #45	; 0x2d
 8000d30:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+3]='/';
 8000d32:	4b2a      	ldr	r3, [pc, #168]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000d34:	681b      	ldr	r3, [r3, #0]
 8000d36:	3303      	adds	r3, #3
 8000d38:	4a29      	ldr	r2, [pc, #164]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000d3a:	212f      	movs	r1, #47	; 0x2f
 8000d3c:	54d1      	strb	r1, [r2, r3]
	 	        	    	//k=k+4;
	 	        	        uLength2+=4;
 8000d3e:	4b29      	ldr	r3, [pc, #164]	; (8000de4 <HAL_GPIO_EXTI_Callback+0x8d0>)
 8000d40:	781b      	ldrb	r3, [r3, #0]
 8000d42:	3304      	adds	r3, #4
 8000d44:	b2da      	uxtb	r2, r3
 8000d46:	4b27      	ldr	r3, [pc, #156]	; (8000de4 <HAL_GPIO_EXTI_Callback+0x8d0>)
 8000d48:	701a      	strb	r2, [r3, #0]
 8000d4a:	f000 bc25 	b.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
  				   }

    				   }

    			  }
    			 else if (uRx_Data[k]=='-') {
 8000d4e:	4b1f      	ldr	r3, [pc, #124]	; (8000dcc <HAL_GPIO_EXTI_Callback+0x8b8>)
 8000d50:	681b      	ldr	r3, [r3, #0]
 8000d52:	4a1f      	ldr	r2, [pc, #124]	; (8000dd0 <HAL_GPIO_EXTI_Callback+0x8bc>)
 8000d54:	5cd3      	ldrb	r3, [r2, r3]
 8000d56:	2b2d      	cmp	r3, #45	; 0x2d
 8000d58:	f040 841e 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
    				  if (uRx_Data[k+1]=='.') {
 8000d5c:	4b1b      	ldr	r3, [pc, #108]	; (8000dcc <HAL_GPIO_EXTI_Callback+0x8b8>)
 8000d5e:	681b      	ldr	r3, [r3, #0]
 8000d60:	3301      	adds	r3, #1
 8000d62:	4a1b      	ldr	r2, [pc, #108]	; (8000dd0 <HAL_GPIO_EXTI_Callback+0x8bc>)
 8000d64:	5cd3      	ldrb	r3, [r2, r3]
 8000d66:	2b2e      	cmp	r3, #46	; 0x2e
 8000d68:	d170      	bne.n	8000e4c <HAL_GPIO_EXTI_Callback+0x938>
    					  if (uRx_Data[k+2]=='.') {
 8000d6a:	4b18      	ldr	r3, [pc, #96]	; (8000dcc <HAL_GPIO_EXTI_Callback+0x8b8>)
 8000d6c:	681b      	ldr	r3, [r3, #0]
 8000d6e:	3302      	adds	r3, #2
 8000d70:	4a17      	ldr	r2, [pc, #92]	; (8000dd0 <HAL_GPIO_EXTI_Callback+0x8bc>)
 8000d72:	5cd3      	ldrb	r3, [r2, r3]
 8000d74:	2b2e      	cmp	r3, #46	; 0x2e
 8000d76:	d137      	bne.n	8000de8 <HAL_GPIO_EXTI_Callback+0x8d4>
      				       uRx_Data1[uLength1]='D';
 8000d78:	4b16      	ldr	r3, [pc, #88]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000d7a:	781b      	ldrb	r3, [r3, #0]
 8000d7c:	461a      	mov	r2, r3
 8000d7e:	4b16      	ldr	r3, [pc, #88]	; (8000dd8 <HAL_GPIO_EXTI_Callback+0x8c4>)
 8000d80:	2144      	movs	r1, #68	; 0x44
 8000d82:	5499      	strb	r1, [r3, r2]
      				       uLength1++;uRx_Data2[h]='-';
 8000d84:	4b13      	ldr	r3, [pc, #76]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000d86:	781b      	ldrb	r3, [r3, #0]
 8000d88:	3301      	adds	r3, #1
 8000d8a:	b2da      	uxtb	r2, r3
 8000d8c:	4b11      	ldr	r3, [pc, #68]	; (8000dd4 <HAL_GPIO_EXTI_Callback+0x8c0>)
 8000d8e:	701a      	strb	r2, [r3, #0]
 8000d90:	4b12      	ldr	r3, [pc, #72]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000d92:	681b      	ldr	r3, [r3, #0]
 8000d94:	4a12      	ldr	r2, [pc, #72]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000d96:	212d      	movs	r1, #45	; 0x2d
 8000d98:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+1]='.';
 8000d9a:	4b10      	ldr	r3, [pc, #64]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000d9c:	681b      	ldr	r3, [r3, #0]
 8000d9e:	3301      	adds	r3, #1
 8000da0:	4a0f      	ldr	r2, [pc, #60]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000da2:	212e      	movs	r1, #46	; 0x2e
 8000da4:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+2]='.';
 8000da6:	4b0d      	ldr	r3, [pc, #52]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000da8:	681b      	ldr	r3, [r3, #0]
 8000daa:	3302      	adds	r3, #2
 8000dac:	4a0c      	ldr	r2, [pc, #48]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000dae:	212e      	movs	r1, #46	; 0x2e
 8000db0:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+3]='/';
 8000db2:	4b0a      	ldr	r3, [pc, #40]	; (8000ddc <HAL_GPIO_EXTI_Callback+0x8c8>)
 8000db4:	681b      	ldr	r3, [r3, #0]
 8000db6:	3303      	adds	r3, #3
 8000db8:	4a09      	ldr	r2, [pc, #36]	; (8000de0 <HAL_GPIO_EXTI_Callback+0x8cc>)
 8000dba:	212f      	movs	r1, #47	; 0x2f
 8000dbc:	54d1      	strb	r1, [r2, r3]
   	 	        	    	//k=k+4;
   	 	        	        uLength2+=4;
 8000dbe:	4b09      	ldr	r3, [pc, #36]	; (8000de4 <HAL_GPIO_EXTI_Callback+0x8d0>)
 8000dc0:	781b      	ldrb	r3, [r3, #0]
 8000dc2:	3304      	adds	r3, #4
 8000dc4:	b2da      	uxtb	r2, r3
 8000dc6:	4b07      	ldr	r3, [pc, #28]	; (8000de4 <HAL_GPIO_EXTI_Callback+0x8d0>)
 8000dc8:	701a      	strb	r2, [r3, #0]
 8000dca:	e3e5      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
 8000dcc:	20001434 	.word	0x20001434
 8000dd0:	2000042c 	.word	0x2000042c
 8000dd4:	2000142d 	.word	0x2000142d
 8000dd8:	2000082c 	.word	0x2000082c
 8000ddc:	20001438 	.word	0x20001438
 8000de0:	20000c2c 	.word	0x20000c2c
 8000de4:	2000142e 	.word	0x2000142e
      				   }
      				 else if (uRx_Data[k+2]=='-') {
 8000de8:	4b94      	ldr	r3, [pc, #592]	; (800103c <HAL_GPIO_EXTI_Callback+0xb28>)
 8000dea:	681b      	ldr	r3, [r3, #0]
 8000dec:	3302      	adds	r3, #2
 8000dee:	4a94      	ldr	r2, [pc, #592]	; (8001040 <HAL_GPIO_EXTI_Callback+0xb2c>)
 8000df0:	5cd3      	ldrb	r3, [r2, r3]
 8000df2:	2b2d      	cmp	r3, #45	; 0x2d
 8000df4:	f040 83d0 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
      				       uRx_Data1[uLength1]='K';
 8000df8:	4b92      	ldr	r3, [pc, #584]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000dfa:	781b      	ldrb	r3, [r3, #0]
 8000dfc:	461a      	mov	r2, r3
 8000dfe:	4b92      	ldr	r3, [pc, #584]	; (8001048 <HAL_GPIO_EXTI_Callback+0xb34>)
 8000e00:	214b      	movs	r1, #75	; 0x4b
 8000e02:	5499      	strb	r1, [r3, r2]
      				       uLength1++;uRx_Data2[h]='-';
 8000e04:	4b8f      	ldr	r3, [pc, #572]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000e06:	781b      	ldrb	r3, [r3, #0]
 8000e08:	3301      	adds	r3, #1
 8000e0a:	b2da      	uxtb	r2, r3
 8000e0c:	4b8d      	ldr	r3, [pc, #564]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000e0e:	701a      	strb	r2, [r3, #0]
 8000e10:	4b8e      	ldr	r3, [pc, #568]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000e12:	681b      	ldr	r3, [r3, #0]
 8000e14:	4a8e      	ldr	r2, [pc, #568]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000e16:	212d      	movs	r1, #45	; 0x2d
 8000e18:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+1]='.';
 8000e1a:	4b8c      	ldr	r3, [pc, #560]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000e1c:	681b      	ldr	r3, [r3, #0]
 8000e1e:	3301      	adds	r3, #1
 8000e20:	4a8b      	ldr	r2, [pc, #556]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000e22:	212e      	movs	r1, #46	; 0x2e
 8000e24:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+2]='-';
 8000e26:	4b89      	ldr	r3, [pc, #548]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000e28:	681b      	ldr	r3, [r3, #0]
 8000e2a:	3302      	adds	r3, #2
 8000e2c:	4a88      	ldr	r2, [pc, #544]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000e2e:	212d      	movs	r1, #45	; 0x2d
 8000e30:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+3]='/';
 8000e32:	4b86      	ldr	r3, [pc, #536]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000e34:	681b      	ldr	r3, [r3, #0]
 8000e36:	3303      	adds	r3, #3
 8000e38:	4a85      	ldr	r2, [pc, #532]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000e3a:	212f      	movs	r1, #47	; 0x2f
 8000e3c:	54d1      	strb	r1, [r2, r3]
   	 	        	    	//k=k+4;
   	 	        	        uLength2+=4;
 8000e3e:	4b85      	ldr	r3, [pc, #532]	; (8001054 <HAL_GPIO_EXTI_Callback+0xb40>)
 8000e40:	781b      	ldrb	r3, [r3, #0]
 8000e42:	3304      	adds	r3, #4
 8000e44:	b2da      	uxtb	r2, r3
 8000e46:	4b83      	ldr	r3, [pc, #524]	; (8001054 <HAL_GPIO_EXTI_Callback+0xb40>)
 8000e48:	701a      	strb	r2, [r3, #0]
 8000e4a:	e3a5      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
      				   }

    				  }
    				  else if (uRx_Data[k+1]=='-') {
 8000e4c:	4b7b      	ldr	r3, [pc, #492]	; (800103c <HAL_GPIO_EXTI_Callback+0xb28>)
 8000e4e:	681b      	ldr	r3, [r3, #0]
 8000e50:	3301      	adds	r3, #1
 8000e52:	4a7b      	ldr	r2, [pc, #492]	; (8001040 <HAL_GPIO_EXTI_Callback+0xb2c>)
 8000e54:	5cd3      	ldrb	r3, [r2, r3]
 8000e56:	2b2d      	cmp	r3, #45	; 0x2d
 8000e58:	f040 839e 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
    					  if (uRx_Data[k+2]=='.') {
 8000e5c:	4b77      	ldr	r3, [pc, #476]	; (800103c <HAL_GPIO_EXTI_Callback+0xb28>)
 8000e5e:	681b      	ldr	r3, [r3, #0]
 8000e60:	3302      	adds	r3, #2
 8000e62:	4a77      	ldr	r2, [pc, #476]	; (8001040 <HAL_GPIO_EXTI_Callback+0xb2c>)
 8000e64:	5cd3      	ldrb	r3, [r2, r3]
 8000e66:	2b2e      	cmp	r3, #46	; 0x2e
 8000e68:	d129      	bne.n	8000ebe <HAL_GPIO_EXTI_Callback+0x9aa>
      				       uRx_Data1[uLength1]='G';
 8000e6a:	4b76      	ldr	r3, [pc, #472]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000e6c:	781b      	ldrb	r3, [r3, #0]
 8000e6e:	461a      	mov	r2, r3
 8000e70:	4b75      	ldr	r3, [pc, #468]	; (8001048 <HAL_GPIO_EXTI_Callback+0xb34>)
 8000e72:	2147      	movs	r1, #71	; 0x47
 8000e74:	5499      	strb	r1, [r3, r2]
      				       uLength1++;uRx_Data2[h]='-';
 8000e76:	4b73      	ldr	r3, [pc, #460]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000e78:	781b      	ldrb	r3, [r3, #0]
 8000e7a:	3301      	adds	r3, #1
 8000e7c:	b2da      	uxtb	r2, r3
 8000e7e:	4b71      	ldr	r3, [pc, #452]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000e80:	701a      	strb	r2, [r3, #0]
 8000e82:	4b72      	ldr	r3, [pc, #456]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000e84:	681b      	ldr	r3, [r3, #0]
 8000e86:	4a72      	ldr	r2, [pc, #456]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000e88:	212d      	movs	r1, #45	; 0x2d
 8000e8a:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+1]='-';
 8000e8c:	4b6f      	ldr	r3, [pc, #444]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000e8e:	681b      	ldr	r3, [r3, #0]
 8000e90:	3301      	adds	r3, #1
 8000e92:	4a6f      	ldr	r2, [pc, #444]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000e94:	212d      	movs	r1, #45	; 0x2d
 8000e96:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+2]='.';
 8000e98:	4b6c      	ldr	r3, [pc, #432]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000e9a:	681b      	ldr	r3, [r3, #0]
 8000e9c:	3302      	adds	r3, #2
 8000e9e:	4a6c      	ldr	r2, [pc, #432]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000ea0:	212e      	movs	r1, #46	; 0x2e
 8000ea2:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+3]='/';
 8000ea4:	4b69      	ldr	r3, [pc, #420]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	3303      	adds	r3, #3
 8000eaa:	4a69      	ldr	r2, [pc, #420]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000eac:	212f      	movs	r1, #47	; 0x2f
 8000eae:	54d1      	strb	r1, [r2, r3]
   	 	        	    	//k=k+4;
   	 	        	        uLength2+=4;
 8000eb0:	4b68      	ldr	r3, [pc, #416]	; (8001054 <HAL_GPIO_EXTI_Callback+0xb40>)
 8000eb2:	781b      	ldrb	r3, [r3, #0]
 8000eb4:	3304      	adds	r3, #4
 8000eb6:	b2da      	uxtb	r2, r3
 8000eb8:	4b66      	ldr	r3, [pc, #408]	; (8001054 <HAL_GPIO_EXTI_Callback+0xb40>)
 8000eba:	701a      	strb	r2, [r3, #0]
 8000ebc:	e36c      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
      				   }
      				 else if (uRx_Data[k+2]=='-') {
 8000ebe:	4b5f      	ldr	r3, [pc, #380]	; (800103c <HAL_GPIO_EXTI_Callback+0xb28>)
 8000ec0:	681b      	ldr	r3, [r3, #0]
 8000ec2:	3302      	adds	r3, #2
 8000ec4:	4a5e      	ldr	r2, [pc, #376]	; (8001040 <HAL_GPIO_EXTI_Callback+0xb2c>)
 8000ec6:	5cd3      	ldrb	r3, [r2, r3]
 8000ec8:	2b2d      	cmp	r3, #45	; 0x2d
 8000eca:	f040 8365 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
      				       uRx_Data1[uLength1]='O';
 8000ece:	4b5d      	ldr	r3, [pc, #372]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000ed0:	781b      	ldrb	r3, [r3, #0]
 8000ed2:	461a      	mov	r2, r3
 8000ed4:	4b5c      	ldr	r3, [pc, #368]	; (8001048 <HAL_GPIO_EXTI_Callback+0xb34>)
 8000ed6:	214f      	movs	r1, #79	; 0x4f
 8000ed8:	5499      	strb	r1, [r3, r2]
      				       uLength1++; uRx_Data2[h]='-';
 8000eda:	4b5a      	ldr	r3, [pc, #360]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000edc:	781b      	ldrb	r3, [r3, #0]
 8000ede:	3301      	adds	r3, #1
 8000ee0:	b2da      	uxtb	r2, r3
 8000ee2:	4b58      	ldr	r3, [pc, #352]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000ee4:	701a      	strb	r2, [r3, #0]
 8000ee6:	4b59      	ldr	r3, [pc, #356]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000ee8:	681b      	ldr	r3, [r3, #0]
 8000eea:	4a59      	ldr	r2, [pc, #356]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000eec:	212d      	movs	r1, #45	; 0x2d
 8000eee:	54d1      	strb	r1, [r2, r3]
 	 	        	    	uRx_Data2[h+1]='-';
 8000ef0:	4b56      	ldr	r3, [pc, #344]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000ef2:	681b      	ldr	r3, [r3, #0]
 8000ef4:	3301      	adds	r3, #1
 8000ef6:	4a56      	ldr	r2, [pc, #344]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000ef8:	212d      	movs	r1, #45	; 0x2d
 8000efa:	54d1      	strb	r1, [r2, r3]
 	 	        	    	uRx_Data2[h+2]='-';
 8000efc:	4b53      	ldr	r3, [pc, #332]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000efe:	681b      	ldr	r3, [r3, #0]
 8000f00:	3302      	adds	r3, #2
 8000f02:	4a53      	ldr	r2, [pc, #332]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000f04:	212d      	movs	r1, #45	; 0x2d
 8000f06:	54d1      	strb	r1, [r2, r3]
 	 	        	    	uRx_Data2[h+3]='/';
 8000f08:	4b50      	ldr	r3, [pc, #320]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000f0a:	681b      	ldr	r3, [r3, #0]
 8000f0c:	3303      	adds	r3, #3
 8000f0e:	4a50      	ldr	r2, [pc, #320]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000f10:	212f      	movs	r1, #47	; 0x2f
 8000f12:	54d1      	strb	r1, [r2, r3]
   	 	        	    	//k=k+4;
   	 	        	        uLength2+=4;
 8000f14:	4b4f      	ldr	r3, [pc, #316]	; (8001054 <HAL_GPIO_EXTI_Callback+0xb40>)
 8000f16:	781b      	ldrb	r3, [r3, #0]
 8000f18:	3304      	adds	r3, #4
 8000f1a:	b2da      	uxtb	r2, r3
 8000f1c:	4b4d      	ldr	r3, [pc, #308]	; (8001054 <HAL_GPIO_EXTI_Callback+0xb40>)
 8000f1e:	701a      	strb	r2, [r3, #0]
 8000f20:	e33a      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
    				  }

    			}


        		  }else if (i-k==4){
 8000f22:	4b46      	ldr	r3, [pc, #280]	; (800103c <HAL_GPIO_EXTI_Callback+0xb28>)
 8000f24:	681b      	ldr	r3, [r3, #0]
 8000f26:	697a      	ldr	r2, [r7, #20]
 8000f28:	1ad3      	subs	r3, r2, r3
 8000f2a:	2b04      	cmp	r3, #4
 8000f2c:	f040 8334 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>

        		if (uRx_Data[k]=='.') {
 8000f30:	4b42      	ldr	r3, [pc, #264]	; (800103c <HAL_GPIO_EXTI_Callback+0xb28>)
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	4a42      	ldr	r2, [pc, #264]	; (8001040 <HAL_GPIO_EXTI_Callback+0xb2c>)
 8000f36:	5cd3      	ldrb	r3, [r2, r3]
 8000f38:	2b2e      	cmp	r3, #46	; 0x2e
 8000f3a:	f040 8199 	bne.w	8001270 <HAL_GPIO_EXTI_Callback+0xd5c>
    				  if (uRx_Data[k+1]=='.') {
 8000f3e:	4b3f      	ldr	r3, [pc, #252]	; (800103c <HAL_GPIO_EXTI_Callback+0xb28>)
 8000f40:	681b      	ldr	r3, [r3, #0]
 8000f42:	3301      	adds	r3, #1
 8000f44:	4a3e      	ldr	r2, [pc, #248]	; (8001040 <HAL_GPIO_EXTI_Callback+0xb2c>)
 8000f46:	5cd3      	ldrb	r3, [r2, r3]
 8000f48:	2b2e      	cmp	r3, #46	; 0x2e
 8000f4a:	f040 80c5 	bne.w	80010d8 <HAL_GPIO_EXTI_Callback+0xbc4>
    					  if (uRx_Data[k+2]=='.') {
 8000f4e:	4b3b      	ldr	r3, [pc, #236]	; (800103c <HAL_GPIO_EXTI_Callback+0xb28>)
 8000f50:	681b      	ldr	r3, [r3, #0]
 8000f52:	3302      	adds	r3, #2
 8000f54:	4a3a      	ldr	r2, [pc, #232]	; (8001040 <HAL_GPIO_EXTI_Callback+0xb2c>)
 8000f56:	5cd3      	ldrb	r3, [r2, r3]
 8000f58:	2b2e      	cmp	r3, #46	; 0x2e
 8000f5a:	d17d      	bne.n	8001058 <HAL_GPIO_EXTI_Callback+0xb44>
    						  if (uRx_Data[k+3]=='.') {
 8000f5c:	4b37      	ldr	r3, [pc, #220]	; (800103c <HAL_GPIO_EXTI_Callback+0xb28>)
 8000f5e:	681b      	ldr	r3, [r3, #0]
 8000f60:	3303      	adds	r3, #3
 8000f62:	4a37      	ldr	r2, [pc, #220]	; (8001040 <HAL_GPIO_EXTI_Callback+0xb2c>)
 8000f64:	5cd3      	ldrb	r3, [r2, r3]
 8000f66:	2b2e      	cmp	r3, #46	; 0x2e
 8000f68:	d12f      	bne.n	8000fca <HAL_GPIO_EXTI_Callback+0xab6>
	        				       uRx_Data1[uLength1]='H';
 8000f6a:	4b36      	ldr	r3, [pc, #216]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000f6c:	781b      	ldrb	r3, [r3, #0]
 8000f6e:	461a      	mov	r2, r3
 8000f70:	4b35      	ldr	r3, [pc, #212]	; (8001048 <HAL_GPIO_EXTI_Callback+0xb34>)
 8000f72:	2148      	movs	r1, #72	; 0x48
 8000f74:	5499      	strb	r1, [r3, r2]
	        				       uLength1++;uRx_Data2[h]='.';
 8000f76:	4b33      	ldr	r3, [pc, #204]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000f78:	781b      	ldrb	r3, [r3, #0]
 8000f7a:	3301      	adds	r3, #1
 8000f7c:	b2da      	uxtb	r2, r3
 8000f7e:	4b31      	ldr	r3, [pc, #196]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000f80:	701a      	strb	r2, [r3, #0]
 8000f82:	4b32      	ldr	r3, [pc, #200]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000f84:	681b      	ldr	r3, [r3, #0]
 8000f86:	4a32      	ldr	r2, [pc, #200]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000f88:	212e      	movs	r1, #46	; 0x2e
 8000f8a:	54d1      	strb	r1, [r2, r3]
    	 	        	    	uRx_Data2[h+1]='.';
 8000f8c:	4b2f      	ldr	r3, [pc, #188]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000f8e:	681b      	ldr	r3, [r3, #0]
 8000f90:	3301      	adds	r3, #1
 8000f92:	4a2f      	ldr	r2, [pc, #188]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000f94:	212e      	movs	r1, #46	; 0x2e
 8000f96:	54d1      	strb	r1, [r2, r3]
    	 	        	    	uRx_Data2[h+2]='.';
 8000f98:	4b2c      	ldr	r3, [pc, #176]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000f9a:	681b      	ldr	r3, [r3, #0]
 8000f9c:	3302      	adds	r3, #2
 8000f9e:	4a2c      	ldr	r2, [pc, #176]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000fa0:	212e      	movs	r1, #46	; 0x2e
 8000fa2:	54d1      	strb	r1, [r2, r3]
    	 	        	    	uRx_Data2[h+3]='.';
 8000fa4:	4b29      	ldr	r3, [pc, #164]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000fa6:	681b      	ldr	r3, [r3, #0]
 8000fa8:	3303      	adds	r3, #3
 8000faa:	4a29      	ldr	r2, [pc, #164]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000fac:	212e      	movs	r1, #46	; 0x2e
 8000fae:	54d1      	strb	r1, [r2, r3]
    	 	        	    	uRx_Data2[h+4]='/';
 8000fb0:	4b26      	ldr	r3, [pc, #152]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000fb2:	681b      	ldr	r3, [r3, #0]
 8000fb4:	3304      	adds	r3, #4
 8000fb6:	4a26      	ldr	r2, [pc, #152]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000fb8:	212f      	movs	r1, #47	; 0x2f
 8000fba:	54d1      	strb	r1, [r2, r3]
       	 	        	    	//k=k+5;
       	 	        	        uLength2+=5;
 8000fbc:	4b25      	ldr	r3, [pc, #148]	; (8001054 <HAL_GPIO_EXTI_Callback+0xb40>)
 8000fbe:	781b      	ldrb	r3, [r3, #0]
 8000fc0:	3305      	adds	r3, #5
 8000fc2:	b2da      	uxtb	r2, r3
 8000fc4:	4b23      	ldr	r3, [pc, #140]	; (8001054 <HAL_GPIO_EXTI_Callback+0xb40>)
 8000fc6:	701a      	strb	r2, [r3, #0]
 8000fc8:	e2e6      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
	        				   }
	        				 else if (uRx_Data[k+3]=='-') {
 8000fca:	4b1c      	ldr	r3, [pc, #112]	; (800103c <HAL_GPIO_EXTI_Callback+0xb28>)
 8000fcc:	681b      	ldr	r3, [r3, #0]
 8000fce:	3303      	adds	r3, #3
 8000fd0:	4a1b      	ldr	r2, [pc, #108]	; (8001040 <HAL_GPIO_EXTI_Callback+0xb2c>)
 8000fd2:	5cd3      	ldrb	r3, [r2, r3]
 8000fd4:	2b2d      	cmp	r3, #45	; 0x2d
 8000fd6:	f040 82df 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
	        				       uRx_Data1[uLength1]='V';
 8000fda:	4b1a      	ldr	r3, [pc, #104]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000fdc:	781b      	ldrb	r3, [r3, #0]
 8000fde:	461a      	mov	r2, r3
 8000fe0:	4b19      	ldr	r3, [pc, #100]	; (8001048 <HAL_GPIO_EXTI_Callback+0xb34>)
 8000fe2:	2156      	movs	r1, #86	; 0x56
 8000fe4:	5499      	strb	r1, [r3, r2]
	        				       uLength1++;uRx_Data2[h]='.';
 8000fe6:	4b17      	ldr	r3, [pc, #92]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000fe8:	781b      	ldrb	r3, [r3, #0]
 8000fea:	3301      	adds	r3, #1
 8000fec:	b2da      	uxtb	r2, r3
 8000fee:	4b15      	ldr	r3, [pc, #84]	; (8001044 <HAL_GPIO_EXTI_Callback+0xb30>)
 8000ff0:	701a      	strb	r2, [r3, #0]
 8000ff2:	4b16      	ldr	r3, [pc, #88]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000ff4:	681b      	ldr	r3, [r3, #0]
 8000ff6:	4a16      	ldr	r2, [pc, #88]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8000ff8:	212e      	movs	r1, #46	; 0x2e
 8000ffa:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+1]='.';
 8000ffc:	4b13      	ldr	r3, [pc, #76]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8000ffe:	681b      	ldr	r3, [r3, #0]
 8001000:	3301      	adds	r3, #1
 8001002:	4a13      	ldr	r2, [pc, #76]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8001004:	212e      	movs	r1, #46	; 0x2e
 8001006:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+2]='.';
 8001008:	4b10      	ldr	r3, [pc, #64]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 800100a:	681b      	ldr	r3, [r3, #0]
 800100c:	3302      	adds	r3, #2
 800100e:	4a10      	ldr	r2, [pc, #64]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8001010:	212e      	movs	r1, #46	; 0x2e
 8001012:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+3]='-';
 8001014:	4b0d      	ldr	r3, [pc, #52]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8001016:	681b      	ldr	r3, [r3, #0]
 8001018:	3303      	adds	r3, #3
 800101a:	4a0d      	ldr	r2, [pc, #52]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 800101c:	212d      	movs	r1, #45	; 0x2d
 800101e:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+4]='/';
 8001020:	4b0a      	ldr	r3, [pc, #40]	; (800104c <HAL_GPIO_EXTI_Callback+0xb38>)
 8001022:	681b      	ldr	r3, [r3, #0]
 8001024:	3304      	adds	r3, #4
 8001026:	4a0a      	ldr	r2, [pc, #40]	; (8001050 <HAL_GPIO_EXTI_Callback+0xb3c>)
 8001028:	212f      	movs	r1, #47	; 0x2f
 800102a:	54d1      	strb	r1, [r2, r3]
       	 	        	    	//k=k+5;
       	 	        	        uLength2+=5;
 800102c:	4b09      	ldr	r3, [pc, #36]	; (8001054 <HAL_GPIO_EXTI_Callback+0xb40>)
 800102e:	781b      	ldrb	r3, [r3, #0]
 8001030:	3305      	adds	r3, #5
 8001032:	b2da      	uxtb	r2, r3
 8001034:	4b07      	ldr	r3, [pc, #28]	; (8001054 <HAL_GPIO_EXTI_Callback+0xb40>)
 8001036:	701a      	strb	r2, [r3, #0]
 8001038:	e2ae      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
 800103a:	bf00      	nop
 800103c:	20001434 	.word	0x20001434
 8001040:	2000042c 	.word	0x2000042c
 8001044:	2000142d 	.word	0x2000142d
 8001048:	2000082c 	.word	0x2000082c
 800104c:	20001438 	.word	0x20001438
 8001050:	20000c2c 	.word	0x20000c2c
 8001054:	2000142e 	.word	0x2000142e
	        				   }

   				   }
   				 else if (uRx_Data[k+2]=='-') {
 8001058:	4b7e      	ldr	r3, [pc, #504]	; (8001254 <HAL_GPIO_EXTI_Callback+0xd40>)
 800105a:	681b      	ldr	r3, [r3, #0]
 800105c:	3302      	adds	r3, #2
 800105e:	4a7e      	ldr	r2, [pc, #504]	; (8001258 <HAL_GPIO_EXTI_Callback+0xd44>)
 8001060:	5cd3      	ldrb	r3, [r2, r3]
 8001062:	2b2d      	cmp	r3, #45	; 0x2d
 8001064:	f040 8298 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
   					 if (uRx_Data[k+3]=='.') {
 8001068:	4b7a      	ldr	r3, [pc, #488]	; (8001254 <HAL_GPIO_EXTI_Callback+0xd40>)
 800106a:	681b      	ldr	r3, [r3, #0]
 800106c:	3303      	adds	r3, #3
 800106e:	4a7a      	ldr	r2, [pc, #488]	; (8001258 <HAL_GPIO_EXTI_Callback+0xd44>)
 8001070:	5cd3      	ldrb	r3, [r2, r3]
 8001072:	2b2e      	cmp	r3, #46	; 0x2e
 8001074:	f040 8290 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
				       uRx_Data1[uLength1]='F';
 8001078:	4b78      	ldr	r3, [pc, #480]	; (800125c <HAL_GPIO_EXTI_Callback+0xd48>)
 800107a:	781b      	ldrb	r3, [r3, #0]
 800107c:	461a      	mov	r2, r3
 800107e:	4b78      	ldr	r3, [pc, #480]	; (8001260 <HAL_GPIO_EXTI_Callback+0xd4c>)
 8001080:	2146      	movs	r1, #70	; 0x46
 8001082:	5499      	strb	r1, [r3, r2]
				       uLength1++;uRx_Data2[h]='.';
 8001084:	4b75      	ldr	r3, [pc, #468]	; (800125c <HAL_GPIO_EXTI_Callback+0xd48>)
 8001086:	781b      	ldrb	r3, [r3, #0]
 8001088:	3301      	adds	r3, #1
 800108a:	b2da      	uxtb	r2, r3
 800108c:	4b73      	ldr	r3, [pc, #460]	; (800125c <HAL_GPIO_EXTI_Callback+0xd48>)
 800108e:	701a      	strb	r2, [r3, #0]
 8001090:	4b74      	ldr	r3, [pc, #464]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 8001092:	681b      	ldr	r3, [r3, #0]
 8001094:	4a74      	ldr	r2, [pc, #464]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 8001096:	212e      	movs	r1, #46	; 0x2e
 8001098:	54d1      	strb	r1, [r2, r3]
 	        	    	uRx_Data2[h+1]='.';
 800109a:	4b72      	ldr	r3, [pc, #456]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 800109c:	681b      	ldr	r3, [r3, #0]
 800109e:	3301      	adds	r3, #1
 80010a0:	4a71      	ldr	r2, [pc, #452]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 80010a2:	212e      	movs	r1, #46	; 0x2e
 80010a4:	54d1      	strb	r1, [r2, r3]
 	        	    	uRx_Data2[h+2]='-';
 80010a6:	4b6f      	ldr	r3, [pc, #444]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 80010a8:	681b      	ldr	r3, [r3, #0]
 80010aa:	3302      	adds	r3, #2
 80010ac:	4a6e      	ldr	r2, [pc, #440]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 80010ae:	212d      	movs	r1, #45	; 0x2d
 80010b0:	54d1      	strb	r1, [r2, r3]
 	        	    	uRx_Data2[h+3]='.';
 80010b2:	4b6c      	ldr	r3, [pc, #432]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 80010b4:	681b      	ldr	r3, [r3, #0]
 80010b6:	3303      	adds	r3, #3
 80010b8:	4a6b      	ldr	r2, [pc, #428]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 80010ba:	212e      	movs	r1, #46	; 0x2e
 80010bc:	54d1      	strb	r1, [r2, r3]
 	        	    	uRx_Data2[h+4]='/';
 80010be:	4b69      	ldr	r3, [pc, #420]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 80010c0:	681b      	ldr	r3, [r3, #0]
 80010c2:	3304      	adds	r3, #4
 80010c4:	4a68      	ldr	r2, [pc, #416]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 80010c6:	212f      	movs	r1, #47	; 0x2f
 80010c8:	54d1      	strb	r1, [r2, r3]
	 	        	    	//k=k+5;
	 	        	        uLength2+=5;
 80010ca:	4b68      	ldr	r3, [pc, #416]	; (800126c <HAL_GPIO_EXTI_Callback+0xd58>)
 80010cc:	781b      	ldrb	r3, [r3, #0]
 80010ce:	3305      	adds	r3, #5
 80010d0:	b2da      	uxtb	r2, r3
 80010d2:	4b66      	ldr	r3, [pc, #408]	; (800126c <HAL_GPIO_EXTI_Callback+0xd58>)
 80010d4:	701a      	strb	r2, [r3, #0]
 80010d6:	e25f      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>

				   }
   				   }

    				   }
    				 else if (uRx_Data[k+1]=='-') {
 80010d8:	4b5e      	ldr	r3, [pc, #376]	; (8001254 <HAL_GPIO_EXTI_Callback+0xd40>)
 80010da:	681b      	ldr	r3, [r3, #0]
 80010dc:	3301      	adds	r3, #1
 80010de:	4a5e      	ldr	r2, [pc, #376]	; (8001258 <HAL_GPIO_EXTI_Callback+0xd44>)
 80010e0:	5cd3      	ldrb	r3, [r2, r3]
 80010e2:	2b2d      	cmp	r3, #45	; 0x2d
 80010e4:	f040 8258 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
    					 if (uRx_Data[k+2]=='.') {
 80010e8:	4b5a      	ldr	r3, [pc, #360]	; (8001254 <HAL_GPIO_EXTI_Callback+0xd40>)
 80010ea:	681b      	ldr	r3, [r3, #0]
 80010ec:	3302      	adds	r3, #2
 80010ee:	4a5a      	ldr	r2, [pc, #360]	; (8001258 <HAL_GPIO_EXTI_Callback+0xd44>)
 80010f0:	5cd3      	ldrb	r3, [r2, r3]
 80010f2:	2b2e      	cmp	r3, #46	; 0x2e
 80010f4:	d137      	bne.n	8001166 <HAL_GPIO_EXTI_Callback+0xc52>
    						 if (uRx_Data[k+3]=='.') {
 80010f6:	4b57      	ldr	r3, [pc, #348]	; (8001254 <HAL_GPIO_EXTI_Callback+0xd40>)
 80010f8:	681b      	ldr	r3, [r3, #0]
 80010fa:	3303      	adds	r3, #3
 80010fc:	4a56      	ldr	r2, [pc, #344]	; (8001258 <HAL_GPIO_EXTI_Callback+0xd44>)
 80010fe:	5cd3      	ldrb	r3, [r2, r3]
 8001100:	2b2e      	cmp	r3, #46	; 0x2e
 8001102:	f040 8249 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
        				       uRx_Data1[uLength1]='L';
 8001106:	4b55      	ldr	r3, [pc, #340]	; (800125c <HAL_GPIO_EXTI_Callback+0xd48>)
 8001108:	781b      	ldrb	r3, [r3, #0]
 800110a:	461a      	mov	r2, r3
 800110c:	4b54      	ldr	r3, [pc, #336]	; (8001260 <HAL_GPIO_EXTI_Callback+0xd4c>)
 800110e:	214c      	movs	r1, #76	; 0x4c
 8001110:	5499      	strb	r1, [r3, r2]
        				       uLength1++;uRx_Data2[h]='.';
 8001112:	4b52      	ldr	r3, [pc, #328]	; (800125c <HAL_GPIO_EXTI_Callback+0xd48>)
 8001114:	781b      	ldrb	r3, [r3, #0]
 8001116:	3301      	adds	r3, #1
 8001118:	b2da      	uxtb	r2, r3
 800111a:	4b50      	ldr	r3, [pc, #320]	; (800125c <HAL_GPIO_EXTI_Callback+0xd48>)
 800111c:	701a      	strb	r2, [r3, #0]
 800111e:	4b51      	ldr	r3, [pc, #324]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 8001120:	681b      	ldr	r3, [r3, #0]
 8001122:	4a51      	ldr	r2, [pc, #324]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 8001124:	212e      	movs	r1, #46	; 0x2e
 8001126:	54d1      	strb	r1, [r2, r3]
    	 	        	    	uRx_Data2[h+1]='-';
 8001128:	4b4e      	ldr	r3, [pc, #312]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 800112a:	681b      	ldr	r3, [r3, #0]
 800112c:	3301      	adds	r3, #1
 800112e:	4a4e      	ldr	r2, [pc, #312]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 8001130:	212d      	movs	r1, #45	; 0x2d
 8001132:	54d1      	strb	r1, [r2, r3]
    	 	        	    	uRx_Data2[h+2]='.';
 8001134:	4b4b      	ldr	r3, [pc, #300]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 8001136:	681b      	ldr	r3, [r3, #0]
 8001138:	3302      	adds	r3, #2
 800113a:	4a4b      	ldr	r2, [pc, #300]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 800113c:	212e      	movs	r1, #46	; 0x2e
 800113e:	54d1      	strb	r1, [r2, r3]
    	 	        	    	uRx_Data2[h+3]='.';
 8001140:	4b48      	ldr	r3, [pc, #288]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 8001142:	681b      	ldr	r3, [r3, #0]
 8001144:	3303      	adds	r3, #3
 8001146:	4a48      	ldr	r2, [pc, #288]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 8001148:	212e      	movs	r1, #46	; 0x2e
 800114a:	54d1      	strb	r1, [r2, r3]
    	 	        	    	uRx_Data2[h+4]='/';
 800114c:	4b45      	ldr	r3, [pc, #276]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 800114e:	681b      	ldr	r3, [r3, #0]
 8001150:	3304      	adds	r3, #4
 8001152:	4a45      	ldr	r2, [pc, #276]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 8001154:	212f      	movs	r1, #47	; 0x2f
 8001156:	54d1      	strb	r1, [r2, r3]
       	 	        	    	//k=k+5;
       	 	        	        uLength2+=5;
 8001158:	4b44      	ldr	r3, [pc, #272]	; (800126c <HAL_GPIO_EXTI_Callback+0xd58>)
 800115a:	781b      	ldrb	r3, [r3, #0]
 800115c:	3305      	adds	r3, #5
 800115e:	b2da      	uxtb	r2, r3
 8001160:	4b42      	ldr	r3, [pc, #264]	; (800126c <HAL_GPIO_EXTI_Callback+0xd58>)
 8001162:	701a      	strb	r2, [r3, #0]
 8001164:	e218      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
        				 else if (uRx_Data[k+3]=='-') {

        				   }

  				   }
  				 else if (uRx_Data[k+2]=='-') {
 8001166:	4b3b      	ldr	r3, [pc, #236]	; (8001254 <HAL_GPIO_EXTI_Callback+0xd40>)
 8001168:	681b      	ldr	r3, [r3, #0]
 800116a:	3302      	adds	r3, #2
 800116c:	4a3a      	ldr	r2, [pc, #232]	; (8001258 <HAL_GPIO_EXTI_Callback+0xd44>)
 800116e:	5cd3      	ldrb	r3, [r2, r3]
 8001170:	2b2d      	cmp	r3, #45	; 0x2d
 8001172:	f040 8211 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
  					 if (uRx_Data[k+3]=='.') {
 8001176:	4b37      	ldr	r3, [pc, #220]	; (8001254 <HAL_GPIO_EXTI_Callback+0xd40>)
 8001178:	681b      	ldr	r3, [r3, #0]
 800117a:	3303      	adds	r3, #3
 800117c:	4a36      	ldr	r2, [pc, #216]	; (8001258 <HAL_GPIO_EXTI_Callback+0xd44>)
 800117e:	5cd3      	ldrb	r3, [r2, r3]
 8001180:	2b2e      	cmp	r3, #46	; 0x2e
 8001182:	d12f      	bne.n	80011e4 <HAL_GPIO_EXTI_Callback+0xcd0>
				       uRx_Data1[uLength1]='P';
 8001184:	4b35      	ldr	r3, [pc, #212]	; (800125c <HAL_GPIO_EXTI_Callback+0xd48>)
 8001186:	781b      	ldrb	r3, [r3, #0]
 8001188:	461a      	mov	r2, r3
 800118a:	4b35      	ldr	r3, [pc, #212]	; (8001260 <HAL_GPIO_EXTI_Callback+0xd4c>)
 800118c:	2150      	movs	r1, #80	; 0x50
 800118e:	5499      	strb	r1, [r3, r2]
				       uLength1++;uRx_Data2[h]='.';
 8001190:	4b32      	ldr	r3, [pc, #200]	; (800125c <HAL_GPIO_EXTI_Callback+0xd48>)
 8001192:	781b      	ldrb	r3, [r3, #0]
 8001194:	3301      	adds	r3, #1
 8001196:	b2da      	uxtb	r2, r3
 8001198:	4b30      	ldr	r3, [pc, #192]	; (800125c <HAL_GPIO_EXTI_Callback+0xd48>)
 800119a:	701a      	strb	r2, [r3, #0]
 800119c:	4b31      	ldr	r3, [pc, #196]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 800119e:	681b      	ldr	r3, [r3, #0]
 80011a0:	4a31      	ldr	r2, [pc, #196]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 80011a2:	212e      	movs	r1, #46	; 0x2e
 80011a4:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+1]='-';
 80011a6:	4b2f      	ldr	r3, [pc, #188]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 80011a8:	681b      	ldr	r3, [r3, #0]
 80011aa:	3301      	adds	r3, #1
 80011ac:	4a2e      	ldr	r2, [pc, #184]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 80011ae:	212d      	movs	r1, #45	; 0x2d
 80011b0:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+2]='-';
 80011b2:	4b2c      	ldr	r3, [pc, #176]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 80011b4:	681b      	ldr	r3, [r3, #0]
 80011b6:	3302      	adds	r3, #2
 80011b8:	4a2b      	ldr	r2, [pc, #172]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 80011ba:	212d      	movs	r1, #45	; 0x2d
 80011bc:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+3]='.';
 80011be:	4b29      	ldr	r3, [pc, #164]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 80011c0:	681b      	ldr	r3, [r3, #0]
 80011c2:	3303      	adds	r3, #3
 80011c4:	4a28      	ldr	r2, [pc, #160]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 80011c6:	212e      	movs	r1, #46	; 0x2e
 80011c8:	54d1      	strb	r1, [r2, r3]
	 	        	    	uRx_Data2[h+4]='/';
 80011ca:	4b26      	ldr	r3, [pc, #152]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 80011cc:	681b      	ldr	r3, [r3, #0]
 80011ce:	3304      	adds	r3, #4
 80011d0:	4a25      	ldr	r2, [pc, #148]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 80011d2:	212f      	movs	r1, #47	; 0x2f
 80011d4:	54d1      	strb	r1, [r2, r3]
	 	        	    	//k=k+5;
	 	        	        uLength2+=5;
 80011d6:	4b25      	ldr	r3, [pc, #148]	; (800126c <HAL_GPIO_EXTI_Callback+0xd58>)
 80011d8:	781b      	ldrb	r3, [r3, #0]
 80011da:	3305      	adds	r3, #5
 80011dc:	b2da      	uxtb	r2, r3
 80011de:	4b23      	ldr	r3, [pc, #140]	; (800126c <HAL_GPIO_EXTI_Callback+0xd58>)
 80011e0:	701a      	strb	r2, [r3, #0]
 80011e2:	e1d9      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
				   }
				 else if (uRx_Data[k+3]=='-') {
 80011e4:	4b1b      	ldr	r3, [pc, #108]	; (8001254 <HAL_GPIO_EXTI_Callback+0xd40>)
 80011e6:	681b      	ldr	r3, [r3, #0]
 80011e8:	3303      	adds	r3, #3
 80011ea:	4a1b      	ldr	r2, [pc, #108]	; (8001258 <HAL_GPIO_EXTI_Callback+0xd44>)
 80011ec:	5cd3      	ldrb	r3, [r2, r3]
 80011ee:	2b2d      	cmp	r3, #45	; 0x2d
 80011f0:	f040 81d2 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
				       uRx_Data1[uLength1]='J';
 80011f4:	4b19      	ldr	r3, [pc, #100]	; (800125c <HAL_GPIO_EXTI_Callback+0xd48>)
 80011f6:	781b      	ldrb	r3, [r3, #0]
 80011f8:	461a      	mov	r2, r3
 80011fa:	4b19      	ldr	r3, [pc, #100]	; (8001260 <HAL_GPIO_EXTI_Callback+0xd4c>)
 80011fc:	214a      	movs	r1, #74	; 0x4a
 80011fe:	5499      	strb	r1, [r3, r2]
				       uLength1++;uRx_Data2[h]='.';
 8001200:	4b16      	ldr	r3, [pc, #88]	; (800125c <HAL_GPIO_EXTI_Callback+0xd48>)
 8001202:	781b      	ldrb	r3, [r3, #0]
 8001204:	3301      	adds	r3, #1
 8001206:	b2da      	uxtb	r2, r3
 8001208:	4b14      	ldr	r3, [pc, #80]	; (800125c <HAL_GPIO_EXTI_Callback+0xd48>)
 800120a:	701a      	strb	r2, [r3, #0]
 800120c:	4b15      	ldr	r3, [pc, #84]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 800120e:	681b      	ldr	r3, [r3, #0]
 8001210:	4a15      	ldr	r2, [pc, #84]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 8001212:	212e      	movs	r1, #46	; 0x2e
 8001214:	54d1      	strb	r1, [r2, r3]
 	        	    	uRx_Data2[h+1]='-';
 8001216:	4b13      	ldr	r3, [pc, #76]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 8001218:	681b      	ldr	r3, [r3, #0]
 800121a:	3301      	adds	r3, #1
 800121c:	4a12      	ldr	r2, [pc, #72]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 800121e:	212d      	movs	r1, #45	; 0x2d
 8001220:	54d1      	strb	r1, [r2, r3]
 	        	    	uRx_Data2[h+2]='-';
 8001222:	4b10      	ldr	r3, [pc, #64]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 8001224:	681b      	ldr	r3, [r3, #0]
 8001226:	3302      	adds	r3, #2
 8001228:	4a0f      	ldr	r2, [pc, #60]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 800122a:	212d      	movs	r1, #45	; 0x2d
 800122c:	54d1      	strb	r1, [r2, r3]
 	        	    	uRx_Data2[h+3]='-';
 800122e:	4b0d      	ldr	r3, [pc, #52]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 8001230:	681b      	ldr	r3, [r3, #0]
 8001232:	3303      	adds	r3, #3
 8001234:	4a0c      	ldr	r2, [pc, #48]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 8001236:	212d      	movs	r1, #45	; 0x2d
 8001238:	54d1      	strb	r1, [r2, r3]
 	        	    	uRx_Data2[h+4]='/';
 800123a:	4b0a      	ldr	r3, [pc, #40]	; (8001264 <HAL_GPIO_EXTI_Callback+0xd50>)
 800123c:	681b      	ldr	r3, [r3, #0]
 800123e:	3304      	adds	r3, #4
 8001240:	4a09      	ldr	r2, [pc, #36]	; (8001268 <HAL_GPIO_EXTI_Callback+0xd54>)
 8001242:	212f      	movs	r1, #47	; 0x2f
 8001244:	54d1      	strb	r1, [r2, r3]
	 	        	    	//k=k+5;
	 	        	        uLength2+=5;
 8001246:	4b09      	ldr	r3, [pc, #36]	; (800126c <HAL_GPIO_EXTI_Callback+0xd58>)
 8001248:	781b      	ldrb	r3, [r3, #0]
 800124a:	3305      	adds	r3, #5
 800124c:	b2da      	uxtb	r2, r3
 800124e:	4b07      	ldr	r3, [pc, #28]	; (800126c <HAL_GPIO_EXTI_Callback+0xd58>)
 8001250:	701a      	strb	r2, [r3, #0]
 8001252:	e1a1      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
 8001254:	20001434 	.word	0x20001434
 8001258:	2000042c 	.word	0x2000042c
 800125c:	2000142d 	.word	0x2000142d
 8001260:	2000082c 	.word	0x2000082c
 8001264:	20001438 	.word	0x20001438
 8001268:	20000c2c 	.word	0x20000c2c
 800126c:	2000142e 	.word	0x2000142e
  				   }

    				   }

    			  }
    			 else if (uRx_Data[k]=='-') {
 8001270:	4b7d      	ldr	r3, [pc, #500]	; (8001468 <HAL_GPIO_EXTI_Callback+0xf54>)
 8001272:	681b      	ldr	r3, [r3, #0]
 8001274:	4a7d      	ldr	r2, [pc, #500]	; (800146c <HAL_GPIO_EXTI_Callback+0xf58>)
 8001276:	5cd3      	ldrb	r3, [r2, r3]
 8001278:	2b2d      	cmp	r3, #45	; 0x2d
 800127a:	f040 818d 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
    				  if (uRx_Data[k+1]=='.') {
 800127e:	4b7a      	ldr	r3, [pc, #488]	; (8001468 <HAL_GPIO_EXTI_Callback+0xf54>)
 8001280:	681b      	ldr	r3, [r3, #0]
 8001282:	3301      	adds	r3, #1
 8001284:	4a79      	ldr	r2, [pc, #484]	; (800146c <HAL_GPIO_EXTI_Callback+0xf58>)
 8001286:	5cd3      	ldrb	r3, [r2, r3]
 8001288:	2b2e      	cmp	r3, #46	; 0x2e
 800128a:	f040 80fb 	bne.w	8001484 <HAL_GPIO_EXTI_Callback+0xf70>
    					  if (uRx_Data[k+2]=='.') {
 800128e:	4b76      	ldr	r3, [pc, #472]	; (8001468 <HAL_GPIO_EXTI_Callback+0xf54>)
 8001290:	681b      	ldr	r3, [r3, #0]
 8001292:	3302      	adds	r3, #2
 8001294:	4a75      	ldr	r2, [pc, #468]	; (800146c <HAL_GPIO_EXTI_Callback+0xf58>)
 8001296:	5cd3      	ldrb	r3, [r2, r3]
 8001298:	2b2e      	cmp	r3, #46	; 0x2e
 800129a:	d16e      	bne.n	800137a <HAL_GPIO_EXTI_Callback+0xe66>
    						  if (uRx_Data[k+3]=='.') {
 800129c:	4b72      	ldr	r3, [pc, #456]	; (8001468 <HAL_GPIO_EXTI_Callback+0xf54>)
 800129e:	681b      	ldr	r3, [r3, #0]
 80012a0:	3303      	adds	r3, #3
 80012a2:	4a72      	ldr	r2, [pc, #456]	; (800146c <HAL_GPIO_EXTI_Callback+0xf58>)
 80012a4:	5cd3      	ldrb	r3, [r2, r3]
 80012a6:	2b2e      	cmp	r3, #46	; 0x2e
 80012a8:	d12f      	bne.n	800130a <HAL_GPIO_EXTI_Callback+0xdf6>
	        				       uRx_Data1[uLength1]='B';
 80012aa:	4b71      	ldr	r3, [pc, #452]	; (8001470 <HAL_GPIO_EXTI_Callback+0xf5c>)
 80012ac:	781b      	ldrb	r3, [r3, #0]
 80012ae:	461a      	mov	r2, r3
 80012b0:	4b70      	ldr	r3, [pc, #448]	; (8001474 <HAL_GPIO_EXTI_Callback+0xf60>)
 80012b2:	2142      	movs	r1, #66	; 0x42
 80012b4:	5499      	strb	r1, [r3, r2]
	        				       uLength1++;uRx_Data2[h]='-';
 80012b6:	4b6e      	ldr	r3, [pc, #440]	; (8001470 <HAL_GPIO_EXTI_Callback+0xf5c>)
 80012b8:	781b      	ldrb	r3, [r3, #0]
 80012ba:	3301      	adds	r3, #1
 80012bc:	b2da      	uxtb	r2, r3
 80012be:	4b6c      	ldr	r3, [pc, #432]	; (8001470 <HAL_GPIO_EXTI_Callback+0xf5c>)
 80012c0:	701a      	strb	r2, [r3, #0]
 80012c2:	4b6d      	ldr	r3, [pc, #436]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 80012c4:	681b      	ldr	r3, [r3, #0]
 80012c6:	4a6d      	ldr	r2, [pc, #436]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 80012c8:	212d      	movs	r1, #45	; 0x2d
 80012ca:	54d1      	strb	r1, [r2, r3]
   	 	        	    	uRx_Data2[h+1]='.';
 80012cc:	4b6a      	ldr	r3, [pc, #424]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 80012ce:	681b      	ldr	r3, [r3, #0]
 80012d0:	3301      	adds	r3, #1
 80012d2:	4a6a      	ldr	r2, [pc, #424]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 80012d4:	212e      	movs	r1, #46	; 0x2e
 80012d6:	54d1      	strb	r1, [r2, r3]
   	 	        	    	uRx_Data2[h+2]='.';
 80012d8:	4b67      	ldr	r3, [pc, #412]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 80012da:	681b      	ldr	r3, [r3, #0]
 80012dc:	3302      	adds	r3, #2
 80012de:	4a67      	ldr	r2, [pc, #412]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 80012e0:	212e      	movs	r1, #46	; 0x2e
 80012e2:	54d1      	strb	r1, [r2, r3]
   	 	        	    	uRx_Data2[h+3]='.';
 80012e4:	4b64      	ldr	r3, [pc, #400]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 80012e6:	681b      	ldr	r3, [r3, #0]
 80012e8:	3303      	adds	r3, #3
 80012ea:	4a64      	ldr	r2, [pc, #400]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 80012ec:	212e      	movs	r1, #46	; 0x2e
 80012ee:	54d1      	strb	r1, [r2, r3]
   	 	        	    	uRx_Data2[h+4]='/';
 80012f0:	4b61      	ldr	r3, [pc, #388]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 80012f2:	681b      	ldr	r3, [r3, #0]
 80012f4:	3304      	adds	r3, #4
 80012f6:	4a61      	ldr	r2, [pc, #388]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 80012f8:	212f      	movs	r1, #47	; 0x2f
 80012fa:	54d1      	strb	r1, [r2, r3]
   	 	        	    	//k=k+5;
   	 	        	        uLength2+=5;
 80012fc:	4b60      	ldr	r3, [pc, #384]	; (8001480 <HAL_GPIO_EXTI_Callback+0xf6c>)
 80012fe:	781b      	ldrb	r3, [r3, #0]
 8001300:	3305      	adds	r3, #5
 8001302:	b2da      	uxtb	r2, r3
 8001304:	4b5e      	ldr	r3, [pc, #376]	; (8001480 <HAL_GPIO_EXTI_Callback+0xf6c>)
 8001306:	701a      	strb	r2, [r3, #0]
 8001308:	e146      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
	        				   }
	        				 else if (uRx_Data[k+3]=='-') {
 800130a:	4b57      	ldr	r3, [pc, #348]	; (8001468 <HAL_GPIO_EXTI_Callback+0xf54>)
 800130c:	681b      	ldr	r3, [r3, #0]
 800130e:	3303      	adds	r3, #3
 8001310:	4a56      	ldr	r2, [pc, #344]	; (800146c <HAL_GPIO_EXTI_Callback+0xf58>)
 8001312:	5cd3      	ldrb	r3, [r2, r3]
 8001314:	2b2d      	cmp	r3, #45	; 0x2d
 8001316:	f040 813f 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
	        				       uRx_Data1[uLength1]='X';
 800131a:	4b55      	ldr	r3, [pc, #340]	; (8001470 <HAL_GPIO_EXTI_Callback+0xf5c>)
 800131c:	781b      	ldrb	r3, [r3, #0]
 800131e:	461a      	mov	r2, r3
 8001320:	4b54      	ldr	r3, [pc, #336]	; (8001474 <HAL_GPIO_EXTI_Callback+0xf60>)
 8001322:	2158      	movs	r1, #88	; 0x58
 8001324:	5499      	strb	r1, [r3, r2]
	        				       uLength1++;uRx_Data2[h]='-';
 8001326:	4b52      	ldr	r3, [pc, #328]	; (8001470 <HAL_GPIO_EXTI_Callback+0xf5c>)
 8001328:	781b      	ldrb	r3, [r3, #0]
 800132a:	3301      	adds	r3, #1
 800132c:	b2da      	uxtb	r2, r3
 800132e:	4b50      	ldr	r3, [pc, #320]	; (8001470 <HAL_GPIO_EXTI_Callback+0xf5c>)
 8001330:	701a      	strb	r2, [r3, #0]
 8001332:	4b51      	ldr	r3, [pc, #324]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 8001334:	681b      	ldr	r3, [r3, #0]
 8001336:	4a51      	ldr	r2, [pc, #324]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 8001338:	212d      	movs	r1, #45	; 0x2d
 800133a:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+1]='.';
 800133c:	4b4e      	ldr	r3, [pc, #312]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	3301      	adds	r3, #1
 8001342:	4a4e      	ldr	r2, [pc, #312]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 8001344:	212e      	movs	r1, #46	; 0x2e
 8001346:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+2]='.';
 8001348:	4b4b      	ldr	r3, [pc, #300]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 800134a:	681b      	ldr	r3, [r3, #0]
 800134c:	3302      	adds	r3, #2
 800134e:	4a4b      	ldr	r2, [pc, #300]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 8001350:	212e      	movs	r1, #46	; 0x2e
 8001352:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+3]='-';
 8001354:	4b48      	ldr	r3, [pc, #288]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	3303      	adds	r3, #3
 800135a:	4a48      	ldr	r2, [pc, #288]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 800135c:	212d      	movs	r1, #45	; 0x2d
 800135e:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+4]='/';
 8001360:	4b45      	ldr	r3, [pc, #276]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 8001362:	681b      	ldr	r3, [r3, #0]
 8001364:	3304      	adds	r3, #4
 8001366:	4a45      	ldr	r2, [pc, #276]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 8001368:	212f      	movs	r1, #47	; 0x2f
 800136a:	54d1      	strb	r1, [r2, r3]
       	 	        	    	//k=k+5;
       	 	        	        uLength2+=5;
 800136c:	4b44      	ldr	r3, [pc, #272]	; (8001480 <HAL_GPIO_EXTI_Callback+0xf6c>)
 800136e:	781b      	ldrb	r3, [r3, #0]
 8001370:	3305      	adds	r3, #5
 8001372:	b2da      	uxtb	r2, r3
 8001374:	4b42      	ldr	r3, [pc, #264]	; (8001480 <HAL_GPIO_EXTI_Callback+0xf6c>)
 8001376:	701a      	strb	r2, [r3, #0]
 8001378:	e10e      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
	        				   }

      				   }
      				 else if (uRx_Data[k+2]=='-') {
 800137a:	4b3b      	ldr	r3, [pc, #236]	; (8001468 <HAL_GPIO_EXTI_Callback+0xf54>)
 800137c:	681b      	ldr	r3, [r3, #0]
 800137e:	3302      	adds	r3, #2
 8001380:	4a3a      	ldr	r2, [pc, #232]	; (800146c <HAL_GPIO_EXTI_Callback+0xf58>)
 8001382:	5cd3      	ldrb	r3, [r2, r3]
 8001384:	2b2d      	cmp	r3, #45	; 0x2d
 8001386:	f040 8107 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
      					 if (uRx_Data[k+3]=='.') {
 800138a:	4b37      	ldr	r3, [pc, #220]	; (8001468 <HAL_GPIO_EXTI_Callback+0xf54>)
 800138c:	681b      	ldr	r3, [r3, #0]
 800138e:	3303      	adds	r3, #3
 8001390:	4a36      	ldr	r2, [pc, #216]	; (800146c <HAL_GPIO_EXTI_Callback+0xf58>)
 8001392:	5cd3      	ldrb	r3, [r2, r3]
 8001394:	2b2e      	cmp	r3, #46	; 0x2e
 8001396:	d12f      	bne.n	80013f8 <HAL_GPIO_EXTI_Callback+0xee4>
    				       uRx_Data1[uLength1]='C';
 8001398:	4b35      	ldr	r3, [pc, #212]	; (8001470 <HAL_GPIO_EXTI_Callback+0xf5c>)
 800139a:	781b      	ldrb	r3, [r3, #0]
 800139c:	461a      	mov	r2, r3
 800139e:	4b35      	ldr	r3, [pc, #212]	; (8001474 <HAL_GPIO_EXTI_Callback+0xf60>)
 80013a0:	2143      	movs	r1, #67	; 0x43
 80013a2:	5499      	strb	r1, [r3, r2]
    				       uLength1++; uRx_Data2[h]='-';
 80013a4:	4b32      	ldr	r3, [pc, #200]	; (8001470 <HAL_GPIO_EXTI_Callback+0xf5c>)
 80013a6:	781b      	ldrb	r3, [r3, #0]
 80013a8:	3301      	adds	r3, #1
 80013aa:	b2da      	uxtb	r2, r3
 80013ac:	4b30      	ldr	r3, [pc, #192]	; (8001470 <HAL_GPIO_EXTI_Callback+0xf5c>)
 80013ae:	701a      	strb	r2, [r3, #0]
 80013b0:	4b31      	ldr	r3, [pc, #196]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 80013b2:	681b      	ldr	r3, [r3, #0]
 80013b4:	4a31      	ldr	r2, [pc, #196]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 80013b6:	212d      	movs	r1, #45	; 0x2d
 80013b8:	54d1      	strb	r1, [r2, r3]
	        	    	     uRx_Data2[h+1]='.';
 80013ba:	4b2f      	ldr	r3, [pc, #188]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 80013bc:	681b      	ldr	r3, [r3, #0]
 80013be:	3301      	adds	r3, #1
 80013c0:	4a2e      	ldr	r2, [pc, #184]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 80013c2:	212e      	movs	r1, #46	; 0x2e
 80013c4:	54d1      	strb	r1, [r2, r3]
	        	    	     uRx_Data2[h+2]='-';
 80013c6:	4b2c      	ldr	r3, [pc, #176]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 80013c8:	681b      	ldr	r3, [r3, #0]
 80013ca:	3302      	adds	r3, #2
 80013cc:	4a2b      	ldr	r2, [pc, #172]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 80013ce:	212d      	movs	r1, #45	; 0x2d
 80013d0:	54d1      	strb	r1, [r2, r3]
	        	    	     uRx_Data2[h+3]='.';
 80013d2:	4b29      	ldr	r3, [pc, #164]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 80013d4:	681b      	ldr	r3, [r3, #0]
 80013d6:	3303      	adds	r3, #3
 80013d8:	4a28      	ldr	r2, [pc, #160]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 80013da:	212e      	movs	r1, #46	; 0x2e
 80013dc:	54d1      	strb	r1, [r2, r3]
	        	    	     uRx_Data2[h+4]='/';
 80013de:	4b26      	ldr	r3, [pc, #152]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 80013e0:	681b      	ldr	r3, [r3, #0]
 80013e2:	3304      	adds	r3, #4
 80013e4:	4a25      	ldr	r2, [pc, #148]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 80013e6:	212f      	movs	r1, #47	; 0x2f
 80013e8:	54d1      	strb	r1, [r2, r3]
	 	        	    	//k=k+5;
	 	        	        uLength2+=5;
 80013ea:	4b25      	ldr	r3, [pc, #148]	; (8001480 <HAL_GPIO_EXTI_Callback+0xf6c>)
 80013ec:	781b      	ldrb	r3, [r3, #0]
 80013ee:	3305      	adds	r3, #5
 80013f0:	b2da      	uxtb	r2, r3
 80013f2:	4b23      	ldr	r3, [pc, #140]	; (8001480 <HAL_GPIO_EXTI_Callback+0xf6c>)
 80013f4:	701a      	strb	r2, [r3, #0]
 80013f6:	e0cf      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
    				   }
    				 else if (uRx_Data[k+3]=='-') {
 80013f8:	4b1b      	ldr	r3, [pc, #108]	; (8001468 <HAL_GPIO_EXTI_Callback+0xf54>)
 80013fa:	681b      	ldr	r3, [r3, #0]
 80013fc:	3303      	adds	r3, #3
 80013fe:	4a1b      	ldr	r2, [pc, #108]	; (800146c <HAL_GPIO_EXTI_Callback+0xf58>)
 8001400:	5cd3      	ldrb	r3, [r2, r3]
 8001402:	2b2d      	cmp	r3, #45	; 0x2d
 8001404:	f040 80c8 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
    				       uRx_Data1[uLength1]='Y';
 8001408:	4b19      	ldr	r3, [pc, #100]	; (8001470 <HAL_GPIO_EXTI_Callback+0xf5c>)
 800140a:	781b      	ldrb	r3, [r3, #0]
 800140c:	461a      	mov	r2, r3
 800140e:	4b19      	ldr	r3, [pc, #100]	; (8001474 <HAL_GPIO_EXTI_Callback+0xf60>)
 8001410:	2159      	movs	r1, #89	; 0x59
 8001412:	5499      	strb	r1, [r3, r2]
    				       uLength1++; uRx_Data2[h]='-';
 8001414:	4b16      	ldr	r3, [pc, #88]	; (8001470 <HAL_GPIO_EXTI_Callback+0xf5c>)
 8001416:	781b      	ldrb	r3, [r3, #0]
 8001418:	3301      	adds	r3, #1
 800141a:	b2da      	uxtb	r2, r3
 800141c:	4b14      	ldr	r3, [pc, #80]	; (8001470 <HAL_GPIO_EXTI_Callback+0xf5c>)
 800141e:	701a      	strb	r2, [r3, #0]
 8001420:	4b15      	ldr	r3, [pc, #84]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 8001422:	681b      	ldr	r3, [r3, #0]
 8001424:	4a15      	ldr	r2, [pc, #84]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 8001426:	212d      	movs	r1, #45	; 0x2d
 8001428:	54d1      	strb	r1, [r2, r3]
 	 	        	    	uRx_Data2[h+1]='.';
 800142a:	4b13      	ldr	r3, [pc, #76]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 800142c:	681b      	ldr	r3, [r3, #0]
 800142e:	3301      	adds	r3, #1
 8001430:	4a12      	ldr	r2, [pc, #72]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 8001432:	212e      	movs	r1, #46	; 0x2e
 8001434:	54d1      	strb	r1, [r2, r3]
 	 	        	    	uRx_Data2[h+2]='-';
 8001436:	4b10      	ldr	r3, [pc, #64]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 8001438:	681b      	ldr	r3, [r3, #0]
 800143a:	3302      	adds	r3, #2
 800143c:	4a0f      	ldr	r2, [pc, #60]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 800143e:	212d      	movs	r1, #45	; 0x2d
 8001440:	54d1      	strb	r1, [r2, r3]
 	 	        	    	uRx_Data2[h+3]='-';
 8001442:	4b0d      	ldr	r3, [pc, #52]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 8001444:	681b      	ldr	r3, [r3, #0]
 8001446:	3303      	adds	r3, #3
 8001448:	4a0c      	ldr	r2, [pc, #48]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 800144a:	212d      	movs	r1, #45	; 0x2d
 800144c:	54d1      	strb	r1, [r2, r3]
 	 	        	    	uRx_Data2[h+4]='/';
 800144e:	4b0a      	ldr	r3, [pc, #40]	; (8001478 <HAL_GPIO_EXTI_Callback+0xf64>)
 8001450:	681b      	ldr	r3, [r3, #0]
 8001452:	3304      	adds	r3, #4
 8001454:	4a09      	ldr	r2, [pc, #36]	; (800147c <HAL_GPIO_EXTI_Callback+0xf68>)
 8001456:	212f      	movs	r1, #47	; 0x2f
 8001458:	54d1      	strb	r1, [r2, r3]
   	 	        	    	//k=k+5;
   	 	        	        uLength2+=5;
 800145a:	4b09      	ldr	r3, [pc, #36]	; (8001480 <HAL_GPIO_EXTI_Callback+0xf6c>)
 800145c:	781b      	ldrb	r3, [r3, #0]
 800145e:	3305      	adds	r3, #5
 8001460:	b2da      	uxtb	r2, r3
 8001462:	4b07      	ldr	r3, [pc, #28]	; (8001480 <HAL_GPIO_EXTI_Callback+0xf6c>)
 8001464:	701a      	strb	r2, [r3, #0]
 8001466:	e097      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
 8001468:	20001434 	.word	0x20001434
 800146c:	2000042c 	.word	0x2000042c
 8001470:	2000142d 	.word	0x2000142d
 8001474:	2000082c 	.word	0x2000082c
 8001478:	20001438 	.word	0x20001438
 800147c:	20000c2c 	.word	0x20000c2c
 8001480:	2000142e 	.word	0x2000142e
    				   }

      				   }

    				  }
    				  else if (uRx_Data[k+1]=='-') {
 8001484:	4b5c      	ldr	r3, [pc, #368]	; (80015f8 <HAL_GPIO_EXTI_Callback+0x10e4>)
 8001486:	681b      	ldr	r3, [r3, #0]
 8001488:	3301      	adds	r3, #1
 800148a:	4a5c      	ldr	r2, [pc, #368]	; (80015fc <HAL_GPIO_EXTI_Callback+0x10e8>)
 800148c:	5cd3      	ldrb	r3, [r2, r3]
 800148e:	2b2d      	cmp	r3, #45	; 0x2d
 8001490:	f040 8082 	bne.w	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
    					  if (uRx_Data[k+2]=='.') {
 8001494:	4b58      	ldr	r3, [pc, #352]	; (80015f8 <HAL_GPIO_EXTI_Callback+0x10e4>)
 8001496:	681b      	ldr	r3, [r3, #0]
 8001498:	3302      	adds	r3, #2
 800149a:	4a58      	ldr	r2, [pc, #352]	; (80015fc <HAL_GPIO_EXTI_Callback+0x10e8>)
 800149c:	5cd3      	ldrb	r3, [r2, r3]
 800149e:	2b2e      	cmp	r3, #46	; 0x2e
 80014a0:	d16d      	bne.n	800157e <HAL_GPIO_EXTI_Callback+0x106a>
    						  if (uRx_Data[k+3]=='.') {
 80014a2:	4b55      	ldr	r3, [pc, #340]	; (80015f8 <HAL_GPIO_EXTI_Callback+0x10e4>)
 80014a4:	681b      	ldr	r3, [r3, #0]
 80014a6:	3303      	adds	r3, #3
 80014a8:	4a54      	ldr	r2, [pc, #336]	; (80015fc <HAL_GPIO_EXTI_Callback+0x10e8>)
 80014aa:	5cd3      	ldrb	r3, [r2, r3]
 80014ac:	2b2e      	cmp	r3, #46	; 0x2e
 80014ae:	d12f      	bne.n	8001510 <HAL_GPIO_EXTI_Callback+0xffc>
	        				       uRx_Data1[uLength1]='Z';
 80014b0:	4b53      	ldr	r3, [pc, #332]	; (8001600 <HAL_GPIO_EXTI_Callback+0x10ec>)
 80014b2:	781b      	ldrb	r3, [r3, #0]
 80014b4:	461a      	mov	r2, r3
 80014b6:	4b53      	ldr	r3, [pc, #332]	; (8001604 <HAL_GPIO_EXTI_Callback+0x10f0>)
 80014b8:	215a      	movs	r1, #90	; 0x5a
 80014ba:	5499      	strb	r1, [r3, r2]
	        				       uLength1++; uRx_Data2[h]='-';
 80014bc:	4b50      	ldr	r3, [pc, #320]	; (8001600 <HAL_GPIO_EXTI_Callback+0x10ec>)
 80014be:	781b      	ldrb	r3, [r3, #0]
 80014c0:	3301      	adds	r3, #1
 80014c2:	b2da      	uxtb	r2, r3
 80014c4:	4b4e      	ldr	r3, [pc, #312]	; (8001600 <HAL_GPIO_EXTI_Callback+0x10ec>)
 80014c6:	701a      	strb	r2, [r3, #0]
 80014c8:	4b4f      	ldr	r3, [pc, #316]	; (8001608 <HAL_GPIO_EXTI_Callback+0x10f4>)
 80014ca:	681b      	ldr	r3, [r3, #0]
 80014cc:	4a4f      	ldr	r2, [pc, #316]	; (800160c <HAL_GPIO_EXTI_Callback+0x10f8>)
 80014ce:	212d      	movs	r1, #45	; 0x2d
 80014d0:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+1]='-';
 80014d2:	4b4d      	ldr	r3, [pc, #308]	; (8001608 <HAL_GPIO_EXTI_Callback+0x10f4>)
 80014d4:	681b      	ldr	r3, [r3, #0]
 80014d6:	3301      	adds	r3, #1
 80014d8:	4a4c      	ldr	r2, [pc, #304]	; (800160c <HAL_GPIO_EXTI_Callback+0x10f8>)
 80014da:	212d      	movs	r1, #45	; 0x2d
 80014dc:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+2]='.';
 80014de:	4b4a      	ldr	r3, [pc, #296]	; (8001608 <HAL_GPIO_EXTI_Callback+0x10f4>)
 80014e0:	681b      	ldr	r3, [r3, #0]
 80014e2:	3302      	adds	r3, #2
 80014e4:	4a49      	ldr	r2, [pc, #292]	; (800160c <HAL_GPIO_EXTI_Callback+0x10f8>)
 80014e6:	212e      	movs	r1, #46	; 0x2e
 80014e8:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+3]='.';
 80014ea:	4b47      	ldr	r3, [pc, #284]	; (8001608 <HAL_GPIO_EXTI_Callback+0x10f4>)
 80014ec:	681b      	ldr	r3, [r3, #0]
 80014ee:	3303      	adds	r3, #3
 80014f0:	4a46      	ldr	r2, [pc, #280]	; (800160c <HAL_GPIO_EXTI_Callback+0x10f8>)
 80014f2:	212e      	movs	r1, #46	; 0x2e
 80014f4:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+4]='/';
 80014f6:	4b44      	ldr	r3, [pc, #272]	; (8001608 <HAL_GPIO_EXTI_Callback+0x10f4>)
 80014f8:	681b      	ldr	r3, [r3, #0]
 80014fa:	3304      	adds	r3, #4
 80014fc:	4a43      	ldr	r2, [pc, #268]	; (800160c <HAL_GPIO_EXTI_Callback+0x10f8>)
 80014fe:	212f      	movs	r1, #47	; 0x2f
 8001500:	54d1      	strb	r1, [r2, r3]
       	 	        	    	//k=k+5;
       	 	        	        uLength2+=5;
 8001502:	4b43      	ldr	r3, [pc, #268]	; (8001610 <HAL_GPIO_EXTI_Callback+0x10fc>)
 8001504:	781b      	ldrb	r3, [r3, #0]
 8001506:	3305      	adds	r3, #5
 8001508:	b2da      	uxtb	r2, r3
 800150a:	4b41      	ldr	r3, [pc, #260]	; (8001610 <HAL_GPIO_EXTI_Callback+0x10fc>)
 800150c:	701a      	strb	r2, [r3, #0]
 800150e:	e043      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
	        				   }
	        				 else if (uRx_Data[k+3]=='-') {
 8001510:	4b39      	ldr	r3, [pc, #228]	; (80015f8 <HAL_GPIO_EXTI_Callback+0x10e4>)
 8001512:	681b      	ldr	r3, [r3, #0]
 8001514:	3303      	adds	r3, #3
 8001516:	4a39      	ldr	r2, [pc, #228]	; (80015fc <HAL_GPIO_EXTI_Callback+0x10e8>)
 8001518:	5cd3      	ldrb	r3, [r2, r3]
 800151a:	2b2d      	cmp	r3, #45	; 0x2d
 800151c:	d13c      	bne.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
	        				       uRx_Data1[uLength1]='Q';
 800151e:	4b38      	ldr	r3, [pc, #224]	; (8001600 <HAL_GPIO_EXTI_Callback+0x10ec>)
 8001520:	781b      	ldrb	r3, [r3, #0]
 8001522:	461a      	mov	r2, r3
 8001524:	4b37      	ldr	r3, [pc, #220]	; (8001604 <HAL_GPIO_EXTI_Callback+0x10f0>)
 8001526:	2151      	movs	r1, #81	; 0x51
 8001528:	5499      	strb	r1, [r3, r2]
	        				       uLength1++; uRx_Data2[h]='-';
 800152a:	4b35      	ldr	r3, [pc, #212]	; (8001600 <HAL_GPIO_EXTI_Callback+0x10ec>)
 800152c:	781b      	ldrb	r3, [r3, #0]
 800152e:	3301      	adds	r3, #1
 8001530:	b2da      	uxtb	r2, r3
 8001532:	4b33      	ldr	r3, [pc, #204]	; (8001600 <HAL_GPIO_EXTI_Callback+0x10ec>)
 8001534:	701a      	strb	r2, [r3, #0]
 8001536:	4b34      	ldr	r3, [pc, #208]	; (8001608 <HAL_GPIO_EXTI_Callback+0x10f4>)
 8001538:	681b      	ldr	r3, [r3, #0]
 800153a:	4a34      	ldr	r2, [pc, #208]	; (800160c <HAL_GPIO_EXTI_Callback+0x10f8>)
 800153c:	212d      	movs	r1, #45	; 0x2d
 800153e:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+1]='-';
 8001540:	4b31      	ldr	r3, [pc, #196]	; (8001608 <HAL_GPIO_EXTI_Callback+0x10f4>)
 8001542:	681b      	ldr	r3, [r3, #0]
 8001544:	3301      	adds	r3, #1
 8001546:	4a31      	ldr	r2, [pc, #196]	; (800160c <HAL_GPIO_EXTI_Callback+0x10f8>)
 8001548:	212d      	movs	r1, #45	; 0x2d
 800154a:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+2]='.';
 800154c:	4b2e      	ldr	r3, [pc, #184]	; (8001608 <HAL_GPIO_EXTI_Callback+0x10f4>)
 800154e:	681b      	ldr	r3, [r3, #0]
 8001550:	3302      	adds	r3, #2
 8001552:	4a2e      	ldr	r2, [pc, #184]	; (800160c <HAL_GPIO_EXTI_Callback+0x10f8>)
 8001554:	212e      	movs	r1, #46	; 0x2e
 8001556:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+3]='-';
 8001558:	4b2b      	ldr	r3, [pc, #172]	; (8001608 <HAL_GPIO_EXTI_Callback+0x10f4>)
 800155a:	681b      	ldr	r3, [r3, #0]
 800155c:	3303      	adds	r3, #3
 800155e:	4a2b      	ldr	r2, [pc, #172]	; (800160c <HAL_GPIO_EXTI_Callback+0x10f8>)
 8001560:	212d      	movs	r1, #45	; 0x2d
 8001562:	54d1      	strb	r1, [r2, r3]
     	 	        	    	uRx_Data2[h+4]='/';
 8001564:	4b28      	ldr	r3, [pc, #160]	; (8001608 <HAL_GPIO_EXTI_Callback+0x10f4>)
 8001566:	681b      	ldr	r3, [r3, #0]
 8001568:	3304      	adds	r3, #4
 800156a:	4a28      	ldr	r2, [pc, #160]	; (800160c <HAL_GPIO_EXTI_Callback+0x10f8>)
 800156c:	212f      	movs	r1, #47	; 0x2f
 800156e:	54d1      	strb	r1, [r2, r3]
       	 	        	    	//k=k+5;
       	 	        	        uLength2+=5;
 8001570:	4b27      	ldr	r3, [pc, #156]	; (8001610 <HAL_GPIO_EXTI_Callback+0x10fc>)
 8001572:	781b      	ldrb	r3, [r3, #0]
 8001574:	3305      	adds	r3, #5
 8001576:	b2da      	uxtb	r2, r3
 8001578:	4b25      	ldr	r3, [pc, #148]	; (8001610 <HAL_GPIO_EXTI_Callback+0x10fc>)
 800157a:	701a      	strb	r2, [r3, #0]
 800157c:	e00c      	b.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
	        				   }

      				   }
      				 else if (uRx_Data[k+2]=='-') {
 800157e:	4b1e      	ldr	r3, [pc, #120]	; (80015f8 <HAL_GPIO_EXTI_Callback+0x10e4>)
 8001580:	681b      	ldr	r3, [r3, #0]
 8001582:	3302      	adds	r3, #2
 8001584:	4a1d      	ldr	r2, [pc, #116]	; (80015fc <HAL_GPIO_EXTI_Callback+0x10e8>)
 8001586:	5cd3      	ldrb	r3, [r2, r3]
 8001588:	2b2d      	cmp	r3, #45	; 0x2d
 800158a:	d105      	bne.n	8001598 <HAL_GPIO_EXTI_Callback+0x1084>
      					 if (uRx_Data[k+3]=='.') {
 800158c:	4b1a      	ldr	r3, [pc, #104]	; (80015f8 <HAL_GPIO_EXTI_Callback+0x10e4>)
 800158e:	681b      	ldr	r3, [r3, #0]
 8001590:	3303      	adds	r3, #3
 8001592:	4a1a      	ldr	r2, [pc, #104]	; (80015fc <HAL_GPIO_EXTI_Callback+0x10e8>)
 8001594:	5cd3      	ldrb	r3, [r2, r3]
 8001596:	2b2e      	cmp	r3, #46	; 0x2e
  for (int i=0;i<uLength;i++){
 8001598:	697b      	ldr	r3, [r7, #20]
 800159a:	3301      	adds	r3, #1
 800159c:	617b      	str	r3, [r7, #20]
 800159e:	4b1d      	ldr	r3, [pc, #116]	; (8001614 <HAL_GPIO_EXTI_Callback+0x1100>)
 80015a0:	781b      	ldrb	r3, [r3, #0]
 80015a2:	461a      	mov	r2, r3
 80015a4:	697b      	ldr	r3, [r7, #20]
 80015a6:	4293      	cmp	r3, r2
 80015a8:	f6ff a86b 	blt.w	8000682 <HAL_GPIO_EXTI_Callback+0x16e>
                              	 	        	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
                              	 	        	//HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
                              	 	        	 //h=uLength2;
      }

    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
 80015ac:	2201      	movs	r2, #1
 80015ae:	f44f 7180 	mov.w	r1, #256	; 0x100
 80015b2:	4819      	ldr	r0, [pc, #100]	; (8001618 <HAL_GPIO_EXTI_Callback+0x1104>)
 80015b4:	f004 fa7d 	bl	8005ab2 <HAL_GPIO_WritePin>
   	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
 80015b8:	2201      	movs	r2, #1
 80015ba:	2104      	movs	r1, #4
 80015bc:	4817      	ldr	r0, [pc, #92]	; (800161c <HAL_GPIO_EXTI_Callback+0x1108>)
 80015be:	f004 fa78 	bl	8005ab2 <HAL_GPIO_WritePin>

     HAL_UART_RxCpltCallback(&huart1);
 80015c2:	4817      	ldr	r0, [pc, #92]	; (8001620 <HAL_GPIO_EXTI_Callback+0x110c>)
 80015c4:	f000 f830 	bl	8001628 <HAL_UART_RxCpltCallback>
	 //HAL_UART_Transmit(&huart1, uRx_Data1, uLength1, 0xffff);
	 uLength = 0;
 80015c8:	4b12      	ldr	r3, [pc, #72]	; (8001614 <HAL_GPIO_EXTI_Callback+0x1100>)
 80015ca:	2200      	movs	r2, #0
 80015cc:	701a      	strb	r2, [r3, #0]
	 uLength1 = 0;
 80015ce:	4b0c      	ldr	r3, [pc, #48]	; (8001600 <HAL_GPIO_EXTI_Callback+0x10ec>)
 80015d0:	2200      	movs	r2, #0
 80015d2:	701a      	strb	r2, [r3, #0]
	 uLength2 = 0;
 80015d4:	4b0e      	ldr	r3, [pc, #56]	; (8001610 <HAL_GPIO_EXTI_Callback+0x10fc>)
 80015d6:	2200      	movs	r2, #0
 80015d8:	701a      	strb	r2, [r3, #0]
	 mode=0;
 80015da:	4b12      	ldr	r3, [pc, #72]	; (8001624 <HAL_GPIO_EXTI_Callback+0x1110>)
 80015dc:	2200      	movs	r2, #0
 80015de:	601a      	str	r2, [r3, #0]

}
break;
 80015e0:	e005      	b.n	80015ee <HAL_GPIO_EXTI_Callback+0x10da>
default:
break;
 80015e2:	bf00      	nop
 80015e4:	e004      	b.n	80015f0 <HAL_GPIO_EXTI_Callback+0x10dc>
break;
 80015e6:	bf00      	nop
 80015e8:	e002      	b.n	80015f0 <HAL_GPIO_EXTI_Callback+0x10dc>
	break;
 80015ea:	bf00      	nop
 80015ec:	e000      	b.n	80015f0 <HAL_GPIO_EXTI_Callback+0x10dc>
break;
 80015ee:	bf00      	nop
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);


}

}
 80015f0:	bf00      	nop
 80015f2:	3718      	adds	r7, #24
 80015f4:	46bd      	mov	sp, r7
 80015f6:	bd80      	pop	{r7, pc}
 80015f8:	20001434 	.word	0x20001434
 80015fc:	2000042c 	.word	0x2000042c
 8001600:	2000142d 	.word	0x2000142d
 8001604:	2000082c 	.word	0x2000082c
 8001608:	20001438 	.word	0x20001438
 800160c:	20000c2c 	.word	0x20000c2c
 8001610:	2000142e 	.word	0x2000142e
 8001614:	2000142c 	.word	0x2000142c
 8001618:	40010800 	.word	0x40010800
 800161c:	40011400 	.word	0x40011400
 8001620:	2000143c 	.word	0x2000143c
 8001624:	20001430 	.word	0x20001430

08001628 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8001628:	b580      	push	{r7, lr}
 800162a:	b094      	sub	sp, #80	; 0x50
 800162c:	af00      	add	r7, sp, #0
 800162e:	6078      	str	r0, [r7, #4]
            if(huart->Instance==USART1){
 8001630:	687b      	ldr	r3, [r7, #4]
 8001632:	681b      	ldr	r3, [r3, #0]
 8001634:	4ab0      	ldr	r2, [pc, #704]	; (80018f8 <HAL_UART_RxCpltCallback+0x2d0>)
 8001636:	4293      	cmp	r3, r2
 8001638:	f043 84f5 	bne.w	8005026 <HAL_UART_RxCpltCallback+0x39fe>
                       k=0;
 800163c:	4baf      	ldr	r3, [pc, #700]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 800163e:	2200      	movs	r2, #0
 8001640:	601a      	str	r2, [r3, #0]
                       h=0;
 8001642:	4baf      	ldr	r3, [pc, #700]	; (8001900 <HAL_UART_RxCpltCallback+0x2d8>)
 8001644:	2200      	movs	r2, #0
 8001646:	601a      	str	r2, [r3, #0]

                       if(rxBuffer[0] == '\n'){
 8001648:	4bae      	ldr	r3, [pc, #696]	; (8001904 <HAL_UART_RxCpltCallback+0x2dc>)
 800164a:	781b      	ldrb	r3, [r3, #0]
 800164c:	2b0a      	cmp	r3, #10
 800164e:	f043 84dd 	bne.w	800500c <HAL_UART_RxCpltCallback+0x39e4>
                    	   if (mode==0){
 8001652:	4bad      	ldr	r3, [pc, #692]	; (8001908 <HAL_UART_RxCpltCallback+0x2e0>)
 8001654:	681b      	ldr	r3, [r3, #0]
 8001656:	2b00      	cmp	r3, #0
 8001658:	f043 82f9 	bne.w	8004c4e <HAL_UART_RxCpltCallback+0x3626>
                    	   if (uLength==2){
 800165c:	4bab      	ldr	r3, [pc, #684]	; (800190c <HAL_UART_RxCpltCallback+0x2e4>)
 800165e:	781b      	ldrb	r3, [r3, #0]
 8001660:	2b02      	cmp	r3, #2
 8001662:	f041 85a1 	bne.w	80031a8 <HAL_UART_RxCpltCallback+0x1b80>
                    		   if(uRx_Data[0]=='1'){
 8001666:	4baa      	ldr	r3, [pc, #680]	; (8001910 <HAL_UART_RxCpltCallback+0x2e8>)
 8001668:	781b      	ldrb	r3, [r3, #0]
 800166a:	2b31      	cmp	r3, #49	; 0x31
 800166c:	d12e      	bne.n	80016cc <HAL_UART_RxCpltCallback+0xa4>
                    			   uRx_Data0[0]=1;
 800166e:	4ba9      	ldr	r3, [pc, #676]	; (8001914 <HAL_UART_RxCpltCallback+0x2ec>)
 8001670:	2201      	movs	r2, #1
 8001672:	701a      	strb	r2, [r3, #0]
                    			   uRx_Data1[0]='E';
 8001674:	4ba8      	ldr	r3, [pc, #672]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001676:	2245      	movs	r2, #69	; 0x45
 8001678:	701a      	strb	r2, [r3, #0]
                    			   uRx_Data1[1]='n';
 800167a:	4ba7      	ldr	r3, [pc, #668]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 800167c:	226e      	movs	r2, #110	; 0x6e
 800167e:	705a      	strb	r2, [r3, #1]
                    			   uRx_Data1[2]='c';
 8001680:	4ba5      	ldr	r3, [pc, #660]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001682:	2263      	movs	r2, #99	; 0x63
 8001684:	709a      	strb	r2, [r3, #2]
                    			   uRx_Data1[3]='o';
 8001686:	4ba4      	ldr	r3, [pc, #656]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001688:	226f      	movs	r2, #111	; 0x6f
 800168a:	70da      	strb	r2, [r3, #3]
                    			   uRx_Data1[4]='d';
 800168c:	4ba2      	ldr	r3, [pc, #648]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 800168e:	2264      	movs	r2, #100	; 0x64
 8001690:	711a      	strb	r2, [r3, #4]
                    			   uRx_Data1[5]='e';
 8001692:	4ba1      	ldr	r3, [pc, #644]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001694:	2265      	movs	r2, #101	; 0x65
 8001696:	715a      	strb	r2, [r3, #5]
                    			   uRx_Data1[6]=' ';
 8001698:	4b9f      	ldr	r3, [pc, #636]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 800169a:	2220      	movs	r2, #32
 800169c:	719a      	strb	r2, [r3, #6]
                    			   uRx_Data1[7]='S';
 800169e:	4b9e      	ldr	r3, [pc, #632]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80016a0:	2253      	movs	r2, #83	; 0x53
 80016a2:	71da      	strb	r2, [r3, #7]
                    			   uRx_Data1[8]='t';
 80016a4:	4b9c      	ldr	r3, [pc, #624]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80016a6:	2274      	movs	r2, #116	; 0x74
 80016a8:	721a      	strb	r2, [r3, #8]
                    			   uRx_Data1[9]='a';
 80016aa:	4b9b      	ldr	r3, [pc, #620]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80016ac:	2261      	movs	r2, #97	; 0x61
 80016ae:	725a      	strb	r2, [r3, #9]
                    			   uRx_Data1[10]='t';
 80016b0:	4b99      	ldr	r3, [pc, #612]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80016b2:	2274      	movs	r2, #116	; 0x74
 80016b4:	729a      	strb	r2, [r3, #10]
                    			   uRx_Data1[11]='e';
 80016b6:	4b98      	ldr	r3, [pc, #608]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80016b8:	2265      	movs	r2, #101	; 0x65
 80016ba:	72da      	strb	r2, [r3, #11]
                    			   uRx_Data1[12]=':';
 80016bc:	4b96      	ldr	r3, [pc, #600]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80016be:	223a      	movs	r2, #58	; 0x3a
 80016c0:	731a      	strb	r2, [r3, #12]
                    			   uLength1=13;
 80016c2:	4b96      	ldr	r3, [pc, #600]	; (800191c <HAL_UART_RxCpltCallback+0x2f4>)
 80016c4:	220d      	movs	r2, #13
 80016c6:	701a      	strb	r2, [r3, #0]
 80016c8:	f003 baa3 	b.w	8004c12 <HAL_UART_RxCpltCallback+0x35ea>


                    		   }
                    		   else if(uRx_Data[0]=='0'){
 80016cc:	4b90      	ldr	r3, [pc, #576]	; (8001910 <HAL_UART_RxCpltCallback+0x2e8>)
 80016ce:	781b      	ldrb	r3, [r3, #0]
 80016d0:	2b30      	cmp	r3, #48	; 0x30
 80016d2:	d12e      	bne.n	8001732 <HAL_UART_RxCpltCallback+0x10a>
                    			   uRx_Data0[0]=0;
 80016d4:	4b8f      	ldr	r3, [pc, #572]	; (8001914 <HAL_UART_RxCpltCallback+0x2ec>)
 80016d6:	2200      	movs	r2, #0
 80016d8:	701a      	strb	r2, [r3, #0]
                    			   uRx_Data1[0]='D';
 80016da:	4b8f      	ldr	r3, [pc, #572]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80016dc:	2244      	movs	r2, #68	; 0x44
 80016de:	701a      	strb	r2, [r3, #0]
                    			   uRx_Data1[1]='e';
 80016e0:	4b8d      	ldr	r3, [pc, #564]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80016e2:	2265      	movs	r2, #101	; 0x65
 80016e4:	705a      	strb	r2, [r3, #1]
                    			   uRx_Data1[2]='c';
 80016e6:	4b8c      	ldr	r3, [pc, #560]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80016e8:	2263      	movs	r2, #99	; 0x63
 80016ea:	709a      	strb	r2, [r3, #2]
                    			   uRx_Data1[3]='o';
 80016ec:	4b8a      	ldr	r3, [pc, #552]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80016ee:	226f      	movs	r2, #111	; 0x6f
 80016f0:	70da      	strb	r2, [r3, #3]
                    			   uRx_Data1[4]='d';
 80016f2:	4b89      	ldr	r3, [pc, #548]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80016f4:	2264      	movs	r2, #100	; 0x64
 80016f6:	711a      	strb	r2, [r3, #4]
                    			   uRx_Data1[5]='e';
 80016f8:	4b87      	ldr	r3, [pc, #540]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80016fa:	2265      	movs	r2, #101	; 0x65
 80016fc:	715a      	strb	r2, [r3, #5]
                    			   uRx_Data1[6]=' ';
 80016fe:	4b86      	ldr	r3, [pc, #536]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001700:	2220      	movs	r2, #32
 8001702:	719a      	strb	r2, [r3, #6]
                    			   uRx_Data1[7]='S';
 8001704:	4b84      	ldr	r3, [pc, #528]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001706:	2253      	movs	r2, #83	; 0x53
 8001708:	71da      	strb	r2, [r3, #7]
                    			   uRx_Data1[8]='t';
 800170a:	4b83      	ldr	r3, [pc, #524]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 800170c:	2274      	movs	r2, #116	; 0x74
 800170e:	721a      	strb	r2, [r3, #8]
                    			   uRx_Data1[9]='a';
 8001710:	4b81      	ldr	r3, [pc, #516]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001712:	2261      	movs	r2, #97	; 0x61
 8001714:	725a      	strb	r2, [r3, #9]
                    			   uRx_Data1[10]='t';
 8001716:	4b80      	ldr	r3, [pc, #512]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001718:	2274      	movs	r2, #116	; 0x74
 800171a:	729a      	strb	r2, [r3, #10]
                    			   uRx_Data1[11]='e';
 800171c:	4b7e      	ldr	r3, [pc, #504]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 800171e:	2265      	movs	r2, #101	; 0x65
 8001720:	72da      	strb	r2, [r3, #11]
                    			   uRx_Data1[12]=':';
 8001722:	4b7d      	ldr	r3, [pc, #500]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001724:	223a      	movs	r2, #58	; 0x3a
 8001726:	731a      	strb	r2, [r3, #12]
                    			   uLength1=13;
 8001728:	4b7c      	ldr	r3, [pc, #496]	; (800191c <HAL_UART_RxCpltCallback+0x2f4>)
 800172a:	220d      	movs	r2, #13
 800172c:	701a      	strb	r2, [r3, #0]
 800172e:	f003 ba70 	b.w	8004c12 <HAL_UART_RxCpltCallback+0x35ea>

                    		   }
                    		   else{
                    			   if (uRx_Data0[0]==1){
 8001732:	4b78      	ldr	r3, [pc, #480]	; (8001914 <HAL_UART_RxCpltCallback+0x2ec>)
 8001734:	781b      	ldrb	r3, [r3, #0]
 8001736:	2b01      	cmp	r3, #1
 8001738:	f040 84bf 	bne.w	80020ba <HAL_UART_RxCpltCallback+0xa92>
                    				   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
 800173c:	2201      	movs	r2, #1
 800173e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001742:	4877      	ldr	r0, [pc, #476]	; (8001920 <HAL_UART_RxCpltCallback+0x2f8>)
 8001744:	f004 f9b5 	bl	8005ab2 <HAL_GPIO_WritePin>
                    				   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
 8001748:	2201      	movs	r2, #1
 800174a:	2104      	movs	r1, #4
 800174c:	4875      	ldr	r0, [pc, #468]	; (8001924 <HAL_UART_RxCpltCallback+0x2fc>)
 800174e:	f004 f9b0 	bl	8005ab2 <HAL_GPIO_WritePin>
                    				   for (int i=0;i<uLength-1;i++){
 8001752:	2300      	movs	r3, #0
 8001754:	64fb      	str	r3, [r7, #76]	; 0x4c
 8001756:	f000 bca7 	b.w	80020a8 <HAL_UART_RxCpltCallback+0xa80>
                                           {
                            	 	        	 switch (uRx_Data[i]){
 800175a:	4a6d      	ldr	r2, [pc, #436]	; (8001910 <HAL_UART_RxCpltCallback+0x2e8>)
 800175c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800175e:	4413      	add	r3, r2
 8001760:	781b      	ldrb	r3, [r3, #0]
 8001762:	3b41      	subs	r3, #65	; 0x41
 8001764:	2b19      	cmp	r3, #25
 8001766:	f200 837f 	bhi.w	8001e68 <HAL_UART_RxCpltCallback+0x840>
 800176a:	a201      	add	r2, pc, #4	; (adr r2, 8001770 <HAL_UART_RxCpltCallback+0x148>)
 800176c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001770:	080017d9 	.word	0x080017d9
 8001774:	08001809 	.word	0x08001809
 8001778:	08001851 	.word	0x08001851
 800177c:	08001899 	.word	0x08001899
 8001780:	080018d5 	.word	0x080018d5
 8001784:	08001929 	.word	0x08001929
 8001788:	08001971 	.word	0x08001971
 800178c:	080019ad 	.word	0x080019ad
 8001790:	080019f5 	.word	0x080019f5
 8001794:	08001a25 	.word	0x08001a25
 8001798:	08001a6d 	.word	0x08001a6d
 800179c:	08001aa9 	.word	0x08001aa9
 80017a0:	08001af1 	.word	0x08001af1
 80017a4:	08001b21 	.word	0x08001b21
 80017a8:	08001b51 	.word	0x08001b51
 80017ac:	08001b99 	.word	0x08001b99
 80017b0:	08001be1 	.word	0x08001be1
 80017b4:	08001c29 	.word	0x08001c29
 80017b8:	08001c65 	.word	0x08001c65
 80017bc:	08001ca1 	.word	0x08001ca1
 80017c0:	08001cc5 	.word	0x08001cc5
 80017c4:	08001d01 	.word	0x08001d01
 80017c8:	08001d49 	.word	0x08001d49
 80017cc:	08001d85 	.word	0x08001d85
 80017d0:	08001dcd 	.word	0x08001dcd
 80017d4:	08001e21 	.word	0x08001e21
                            	 	        	     case 'A':
                            	 	        	    	uRx_Data1[k]='.';
 80017d8:	4b48      	ldr	r3, [pc, #288]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 80017da:	681b      	ldr	r3, [r3, #0]
 80017dc:	4a4e      	ldr	r2, [pc, #312]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80017de:	212e      	movs	r1, #46	; 0x2e
 80017e0:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+1]='-';
 80017e2:	4b46      	ldr	r3, [pc, #280]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	3301      	adds	r3, #1
 80017e8:	4a4b      	ldr	r2, [pc, #300]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80017ea:	212d      	movs	r1, #45	; 0x2d
 80017ec:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+2]='/';
 80017ee:	4b43      	ldr	r3, [pc, #268]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 80017f0:	681b      	ldr	r3, [r3, #0]
 80017f2:	3302      	adds	r3, #2
 80017f4:	4a48      	ldr	r2, [pc, #288]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80017f6:	212f      	movs	r1, #47	; 0x2f
 80017f8:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	//k=k+3;
                            	 	        	        uLength1+=3;
 80017fa:	4b48      	ldr	r3, [pc, #288]	; (800191c <HAL_UART_RxCpltCallback+0x2f4>)
 80017fc:	781b      	ldrb	r3, [r3, #0]
 80017fe:	3303      	adds	r3, #3
 8001800:	b2da      	uxtb	r2, r3
 8001802:	4b46      	ldr	r3, [pc, #280]	; (800191c <HAL_UART_RxCpltCallback+0x2f4>)
 8001804:	701a      	strb	r2, [r3, #0]
                            	 	        		 break;
 8001806:	e391      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                            	 	        		 case 'B':
                             	 	        	    	uRx_Data1[k]='-';
 8001808:	4b3c      	ldr	r3, [pc, #240]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	4a42      	ldr	r2, [pc, #264]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 800180e:	212d      	movs	r1, #45	; 0x2d
 8001810:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data1[k+1]='.';
 8001812:	4b3a      	ldr	r3, [pc, #232]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 8001814:	681b      	ldr	r3, [r3, #0]
 8001816:	3301      	adds	r3, #1
 8001818:	4a3f      	ldr	r2, [pc, #252]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 800181a:	212e      	movs	r1, #46	; 0x2e
 800181c:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data1[k+2]='.';
 800181e:	4b37      	ldr	r3, [pc, #220]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	3302      	adds	r3, #2
 8001824:	4a3c      	ldr	r2, [pc, #240]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001826:	212e      	movs	r1, #46	; 0x2e
 8001828:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data1[k+3]='.';
 800182a:	4b34      	ldr	r3, [pc, #208]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 800182c:	681b      	ldr	r3, [r3, #0]
 800182e:	3303      	adds	r3, #3
 8001830:	4a39      	ldr	r2, [pc, #228]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001832:	212e      	movs	r1, #46	; 0x2e
 8001834:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data1[k+4]='/';
 8001836:	4b31      	ldr	r3, [pc, #196]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 8001838:	681b      	ldr	r3, [r3, #0]
 800183a:	3304      	adds	r3, #4
 800183c:	4a36      	ldr	r2, [pc, #216]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 800183e:	212f      	movs	r1, #47	; 0x2f
 8001840:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+5;
                             	 	        	        uLength1+=5;
 8001842:	4b36      	ldr	r3, [pc, #216]	; (800191c <HAL_UART_RxCpltCallback+0x2f4>)
 8001844:	781b      	ldrb	r3, [r3, #0]
 8001846:	3305      	adds	r3, #5
 8001848:	b2da      	uxtb	r2, r3
 800184a:	4b34      	ldr	r3, [pc, #208]	; (800191c <HAL_UART_RxCpltCallback+0x2f4>)
 800184c:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 800184e:	e36d      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'C':
                             	 	        			 uRx_Data1[k]='-';
 8001850:	4b2a      	ldr	r3, [pc, #168]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	4a30      	ldr	r2, [pc, #192]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001856:	212d      	movs	r1, #45	; 0x2d
 8001858:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	     uRx_Data1[k+1]='.';
 800185a:	4b28      	ldr	r3, [pc, #160]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 800185c:	681b      	ldr	r3, [r3, #0]
 800185e:	3301      	adds	r3, #1
 8001860:	4a2d      	ldr	r2, [pc, #180]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001862:	212e      	movs	r1, #46	; 0x2e
 8001864:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	     uRx_Data1[k+2]='-';
 8001866:	4b25      	ldr	r3, [pc, #148]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	3302      	adds	r3, #2
 800186c:	4a2a      	ldr	r2, [pc, #168]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 800186e:	212d      	movs	r1, #45	; 0x2d
 8001870:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	     uRx_Data1[k+3]='.';
 8001872:	4b22      	ldr	r3, [pc, #136]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 8001874:	681b      	ldr	r3, [r3, #0]
 8001876:	3303      	adds	r3, #3
 8001878:	4a27      	ldr	r2, [pc, #156]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 800187a:	212e      	movs	r1, #46	; 0x2e
 800187c:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	     uRx_Data1[k+4]='/';
 800187e:	4b1f      	ldr	r3, [pc, #124]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	3304      	adds	r3, #4
 8001884:	4a24      	ldr	r2, [pc, #144]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 8001886:	212f      	movs	r1, #47	; 0x2f
 8001888:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+5;
                             	 	        	        uLength1+=5;
 800188a:	4b24      	ldr	r3, [pc, #144]	; (800191c <HAL_UART_RxCpltCallback+0x2f4>)
 800188c:	781b      	ldrb	r3, [r3, #0]
 800188e:	3305      	adds	r3, #5
 8001890:	b2da      	uxtb	r2, r3
 8001892:	4b22      	ldr	r3, [pc, #136]	; (800191c <HAL_UART_RxCpltCallback+0x2f4>)
 8001894:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001896:	e349      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'D':
                             	 	        	    uRx_Data1[k]='-';
 8001898:	4b18      	ldr	r3, [pc, #96]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	4a1e      	ldr	r2, [pc, #120]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 800189e:	212d      	movs	r1, #45	; 0x2d
 80018a0:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+1]='.';
 80018a2:	4b16      	ldr	r3, [pc, #88]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 80018a4:	681b      	ldr	r3, [r3, #0]
 80018a6:	3301      	adds	r3, #1
 80018a8:	4a1b      	ldr	r2, [pc, #108]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80018aa:	212e      	movs	r1, #46	; 0x2e
 80018ac:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+2]='.';
 80018ae:	4b13      	ldr	r3, [pc, #76]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	3302      	adds	r3, #2
 80018b4:	4a18      	ldr	r2, [pc, #96]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80018b6:	212e      	movs	r1, #46	; 0x2e
 80018b8:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+3]='/';
 80018ba:	4b10      	ldr	r3, [pc, #64]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 80018bc:	681b      	ldr	r3, [r3, #0]
 80018be:	3303      	adds	r3, #3
 80018c0:	4a15      	ldr	r2, [pc, #84]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80018c2:	212f      	movs	r1, #47	; 0x2f
 80018c4:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+4;
                             	 	        	        uLength1+=4;
 80018c6:	4b15      	ldr	r3, [pc, #84]	; (800191c <HAL_UART_RxCpltCallback+0x2f4>)
 80018c8:	781b      	ldrb	r3, [r3, #0]
 80018ca:	3304      	adds	r3, #4
 80018cc:	b2da      	uxtb	r2, r3
 80018ce:	4b13      	ldr	r3, [pc, #76]	; (800191c <HAL_UART_RxCpltCallback+0x2f4>)
 80018d0:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 80018d2:	e32b      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'E':
                             	 	        			 uRx_Data1[k]='.';
 80018d4:	4b09      	ldr	r3, [pc, #36]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 80018d6:	681b      	ldr	r3, [r3, #0]
 80018d8:	4a0f      	ldr	r2, [pc, #60]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80018da:	212e      	movs	r1, #46	; 0x2e
 80018dc:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+1]='/';
 80018de:	4b07      	ldr	r3, [pc, #28]	; (80018fc <HAL_UART_RxCpltCallback+0x2d4>)
 80018e0:	681b      	ldr	r3, [r3, #0]
 80018e2:	3301      	adds	r3, #1
 80018e4:	4a0c      	ldr	r2, [pc, #48]	; (8001918 <HAL_UART_RxCpltCallback+0x2f0>)
 80018e6:	212f      	movs	r1, #47	; 0x2f
 80018e8:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+2;
                             	 	        	        uLength1+=2;
 80018ea:	4b0c      	ldr	r3, [pc, #48]	; (800191c <HAL_UART_RxCpltCallback+0x2f4>)
 80018ec:	781b      	ldrb	r3, [r3, #0]
 80018ee:	3302      	adds	r3, #2
 80018f0:	b2da      	uxtb	r2, r3
 80018f2:	4b0a      	ldr	r3, [pc, #40]	; (800191c <HAL_UART_RxCpltCallback+0x2f4>)
 80018f4:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 80018f6:	e319      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
 80018f8:	40013800 	.word	0x40013800
 80018fc:	20001434 	.word	0x20001434
 8001900:	20001438 	.word	0x20001438
 8001904:	20000028 	.word	0x20000028
 8001908:	20001430 	.word	0x20001430
 800190c:	2000142c 	.word	0x2000142c
 8001910:	2000042c 	.word	0x2000042c
 8001914:	20000428 	.word	0x20000428
 8001918:	2000082c 	.word	0x2000082c
 800191c:	2000142d 	.word	0x2000142d
 8001920:	40010800 	.word	0x40010800
 8001924:	40011400 	.word	0x40011400
                             	 	        		 case 'F':
                             	 	        			 uRx_Data1[k]='.';
 8001928:	4b98      	ldr	r3, [pc, #608]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 800192a:	681b      	ldr	r3, [r3, #0]
 800192c:	4a98      	ldr	r2, [pc, #608]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 800192e:	212e      	movs	r1, #46	; 0x2e
 8001930:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+1]='.';
 8001932:	4b96      	ldr	r3, [pc, #600]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001934:	681b      	ldr	r3, [r3, #0]
 8001936:	3301      	adds	r3, #1
 8001938:	4a95      	ldr	r2, [pc, #596]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 800193a:	212e      	movs	r1, #46	; 0x2e
 800193c:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+2]='-';
 800193e:	4b93      	ldr	r3, [pc, #588]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001940:	681b      	ldr	r3, [r3, #0]
 8001942:	3302      	adds	r3, #2
 8001944:	4a92      	ldr	r2, [pc, #584]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001946:	212d      	movs	r1, #45	; 0x2d
 8001948:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+3]='.';
 800194a:	4b90      	ldr	r3, [pc, #576]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 800194c:	681b      	ldr	r3, [r3, #0]
 800194e:	3303      	adds	r3, #3
 8001950:	4a8f      	ldr	r2, [pc, #572]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001952:	212e      	movs	r1, #46	; 0x2e
 8001954:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+4]='/';
 8001956:	4b8d      	ldr	r3, [pc, #564]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001958:	681b      	ldr	r3, [r3, #0]
 800195a:	3304      	adds	r3, #4
 800195c:	4a8c      	ldr	r2, [pc, #560]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 800195e:	212f      	movs	r1, #47	; 0x2f
 8001960:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+5;
                             	 	        	        uLength1+=5;
 8001962:	4b8c      	ldr	r3, [pc, #560]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001964:	781b      	ldrb	r3, [r3, #0]
 8001966:	3305      	adds	r3, #5
 8001968:	b2da      	uxtb	r2, r3
 800196a:	4b8a      	ldr	r3, [pc, #552]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 800196c:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 800196e:	e2dd      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'G':
                             	 	        			 uRx_Data1[k]='-';
 8001970:	4b86      	ldr	r3, [pc, #536]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001972:	681b      	ldr	r3, [r3, #0]
 8001974:	4a86      	ldr	r2, [pc, #536]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001976:	212d      	movs	r1, #45	; 0x2d
 8001978:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+1]='-';
 800197a:	4b84      	ldr	r3, [pc, #528]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 800197c:	681b      	ldr	r3, [r3, #0]
 800197e:	3301      	adds	r3, #1
 8001980:	4a83      	ldr	r2, [pc, #524]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001982:	212d      	movs	r1, #45	; 0x2d
 8001984:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+2]='.';
 8001986:	4b81      	ldr	r3, [pc, #516]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001988:	681b      	ldr	r3, [r3, #0]
 800198a:	3302      	adds	r3, #2
 800198c:	4a80      	ldr	r2, [pc, #512]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 800198e:	212e      	movs	r1, #46	; 0x2e
 8001990:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+3]='/';
 8001992:	4b7e      	ldr	r3, [pc, #504]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	3303      	adds	r3, #3
 8001998:	4a7d      	ldr	r2, [pc, #500]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 800199a:	212f      	movs	r1, #47	; 0x2f
 800199c:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+4;
                             	 	        	        uLength1+=4;
 800199e:	4b7d      	ldr	r3, [pc, #500]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 80019a0:	781b      	ldrb	r3, [r3, #0]
 80019a2:	3304      	adds	r3, #4
 80019a4:	b2da      	uxtb	r2, r3
 80019a6:	4b7b      	ldr	r3, [pc, #492]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 80019a8:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 80019aa:	e2bf      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'H':
                             	 	        			 uRx_Data1[k]='.';
 80019ac:	4b77      	ldr	r3, [pc, #476]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 80019ae:	681b      	ldr	r3, [r3, #0]
 80019b0:	4a77      	ldr	r2, [pc, #476]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 80019b2:	212e      	movs	r1, #46	; 0x2e
 80019b4:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+1]='.';
 80019b6:	4b75      	ldr	r3, [pc, #468]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 80019b8:	681b      	ldr	r3, [r3, #0]
 80019ba:	3301      	adds	r3, #1
 80019bc:	4a74      	ldr	r2, [pc, #464]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 80019be:	212e      	movs	r1, #46	; 0x2e
 80019c0:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+2]='.';
 80019c2:	4b72      	ldr	r3, [pc, #456]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 80019c4:	681b      	ldr	r3, [r3, #0]
 80019c6:	3302      	adds	r3, #2
 80019c8:	4a71      	ldr	r2, [pc, #452]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 80019ca:	212e      	movs	r1, #46	; 0x2e
 80019cc:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+3]='.';
 80019ce:	4b6f      	ldr	r3, [pc, #444]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	3303      	adds	r3, #3
 80019d4:	4a6e      	ldr	r2, [pc, #440]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 80019d6:	212e      	movs	r1, #46	; 0x2e
 80019d8:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+4]='/';
 80019da:	4b6c      	ldr	r3, [pc, #432]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 80019dc:	681b      	ldr	r3, [r3, #0]
 80019de:	3304      	adds	r3, #4
 80019e0:	4a6b      	ldr	r2, [pc, #428]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 80019e2:	212f      	movs	r1, #47	; 0x2f
 80019e4:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+5;
                             	 	        	        uLength1+=5;
 80019e6:	4b6b      	ldr	r3, [pc, #428]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 80019e8:	781b      	ldrb	r3, [r3, #0]
 80019ea:	3305      	adds	r3, #5
 80019ec:	b2da      	uxtb	r2, r3
 80019ee:	4b69      	ldr	r3, [pc, #420]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 80019f0:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 80019f2:	e29b      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'I':
                             	 	        			 uRx_Data1[k]='.';
 80019f4:	4b65      	ldr	r3, [pc, #404]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 80019f6:	681b      	ldr	r3, [r3, #0]
 80019f8:	4a65      	ldr	r2, [pc, #404]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 80019fa:	212e      	movs	r1, #46	; 0x2e
 80019fc:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+1]='.';
 80019fe:	4b63      	ldr	r3, [pc, #396]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001a00:	681b      	ldr	r3, [r3, #0]
 8001a02:	3301      	adds	r3, #1
 8001a04:	4a62      	ldr	r2, [pc, #392]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001a06:	212e      	movs	r1, #46	; 0x2e
 8001a08:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+2]='/';
 8001a0a:	4b60      	ldr	r3, [pc, #384]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	3302      	adds	r3, #2
 8001a10:	4a5f      	ldr	r2, [pc, #380]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001a12:	212f      	movs	r1, #47	; 0x2f
 8001a14:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+3;
                             	 	        	        uLength1+=3;
 8001a16:	4b5f      	ldr	r3, [pc, #380]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001a18:	781b      	ldrb	r3, [r3, #0]
 8001a1a:	3303      	adds	r3, #3
 8001a1c:	b2da      	uxtb	r2, r3
 8001a1e:	4b5d      	ldr	r3, [pc, #372]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001a20:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001a22:	e283      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'J':uRx_Data1[k]='.';
 8001a24:	4b59      	ldr	r3, [pc, #356]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001a26:	681b      	ldr	r3, [r3, #0]
 8001a28:	4a59      	ldr	r2, [pc, #356]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001a2a:	212e      	movs	r1, #46	; 0x2e
 8001a2c:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+1]='-';
 8001a2e:	4b57      	ldr	r3, [pc, #348]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001a30:	681b      	ldr	r3, [r3, #0]
 8001a32:	3301      	adds	r3, #1
 8001a34:	4a56      	ldr	r2, [pc, #344]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001a36:	212d      	movs	r1, #45	; 0x2d
 8001a38:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+2]='-';
 8001a3a:	4b54      	ldr	r3, [pc, #336]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001a3c:	681b      	ldr	r3, [r3, #0]
 8001a3e:	3302      	adds	r3, #2
 8001a40:	4a53      	ldr	r2, [pc, #332]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001a42:	212d      	movs	r1, #45	; 0x2d
 8001a44:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+3]='-';
 8001a46:	4b51      	ldr	r3, [pc, #324]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001a48:	681b      	ldr	r3, [r3, #0]
 8001a4a:	3303      	adds	r3, #3
 8001a4c:	4a50      	ldr	r2, [pc, #320]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001a4e:	212d      	movs	r1, #45	; 0x2d
 8001a50:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+4]='/';
 8001a52:	4b4e      	ldr	r3, [pc, #312]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001a54:	681b      	ldr	r3, [r3, #0]
 8001a56:	3304      	adds	r3, #4
 8001a58:	4a4d      	ldr	r2, [pc, #308]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001a5a:	212f      	movs	r1, #47	; 0x2f
 8001a5c:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+5;
                             	 	        	        uLength1+=5;
 8001a5e:	4b4d      	ldr	r3, [pc, #308]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001a60:	781b      	ldrb	r3, [r3, #0]
 8001a62:	3305      	adds	r3, #5
 8001a64:	b2da      	uxtb	r2, r3
 8001a66:	4b4b      	ldr	r3, [pc, #300]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001a68:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001a6a:	e25f      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'K':
                             	 	        			 uRx_Data1[k]='-';
 8001a6c:	4b47      	ldr	r3, [pc, #284]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001a6e:	681b      	ldr	r3, [r3, #0]
 8001a70:	4a47      	ldr	r2, [pc, #284]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001a72:	212d      	movs	r1, #45	; 0x2d
 8001a74:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+1]='.';
 8001a76:	4b45      	ldr	r3, [pc, #276]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001a78:	681b      	ldr	r3, [r3, #0]
 8001a7a:	3301      	adds	r3, #1
 8001a7c:	4a44      	ldr	r2, [pc, #272]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001a7e:	212e      	movs	r1, #46	; 0x2e
 8001a80:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+2]='-';
 8001a82:	4b42      	ldr	r3, [pc, #264]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001a84:	681b      	ldr	r3, [r3, #0]
 8001a86:	3302      	adds	r3, #2
 8001a88:	4a41      	ldr	r2, [pc, #260]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001a8a:	212d      	movs	r1, #45	; 0x2d
 8001a8c:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+3]='/';
 8001a8e:	4b3f      	ldr	r3, [pc, #252]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001a90:	681b      	ldr	r3, [r3, #0]
 8001a92:	3303      	adds	r3, #3
 8001a94:	4a3e      	ldr	r2, [pc, #248]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001a96:	212f      	movs	r1, #47	; 0x2f
 8001a98:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+4;
                             	 	        	        uLength1+=4;
 8001a9a:	4b3e      	ldr	r3, [pc, #248]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001a9c:	781b      	ldrb	r3, [r3, #0]
 8001a9e:	3304      	adds	r3, #4
 8001aa0:	b2da      	uxtb	r2, r3
 8001aa2:	4b3c      	ldr	r3, [pc, #240]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001aa4:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001aa6:	e241      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'L':
                             	 	        			 uRx_Data1[k]='.';
 8001aa8:	4b38      	ldr	r3, [pc, #224]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001aaa:	681b      	ldr	r3, [r3, #0]
 8001aac:	4a38      	ldr	r2, [pc, #224]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001aae:	212e      	movs	r1, #46	; 0x2e
 8001ab0:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+1]='-';
 8001ab2:	4b36      	ldr	r3, [pc, #216]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001ab4:	681b      	ldr	r3, [r3, #0]
 8001ab6:	3301      	adds	r3, #1
 8001ab8:	4a35      	ldr	r2, [pc, #212]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001aba:	212d      	movs	r1, #45	; 0x2d
 8001abc:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+2]='.';
 8001abe:	4b33      	ldr	r3, [pc, #204]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001ac0:	681b      	ldr	r3, [r3, #0]
 8001ac2:	3302      	adds	r3, #2
 8001ac4:	4a32      	ldr	r2, [pc, #200]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001ac6:	212e      	movs	r1, #46	; 0x2e
 8001ac8:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+3]='.';
 8001aca:	4b30      	ldr	r3, [pc, #192]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001acc:	681b      	ldr	r3, [r3, #0]
 8001ace:	3303      	adds	r3, #3
 8001ad0:	4a2f      	ldr	r2, [pc, #188]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001ad2:	212e      	movs	r1, #46	; 0x2e
 8001ad4:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+4]='/';
 8001ad6:	4b2d      	ldr	r3, [pc, #180]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001ad8:	681b      	ldr	r3, [r3, #0]
 8001ada:	3304      	adds	r3, #4
 8001adc:	4a2c      	ldr	r2, [pc, #176]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001ade:	212f      	movs	r1, #47	; 0x2f
 8001ae0:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+5;
                             	 	        	        uLength1+=5;
 8001ae2:	4b2c      	ldr	r3, [pc, #176]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001ae4:	781b      	ldrb	r3, [r3, #0]
 8001ae6:	3305      	adds	r3, #5
 8001ae8:	b2da      	uxtb	r2, r3
 8001aea:	4b2a      	ldr	r3, [pc, #168]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001aec:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001aee:	e21d      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'M':
                             	 	        			 uRx_Data1[k]='-';
 8001af0:	4b26      	ldr	r3, [pc, #152]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001af2:	681b      	ldr	r3, [r3, #0]
 8001af4:	4a26      	ldr	r2, [pc, #152]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001af6:	212d      	movs	r1, #45	; 0x2d
 8001af8:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+1]='-';
 8001afa:	4b24      	ldr	r3, [pc, #144]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001afc:	681b      	ldr	r3, [r3, #0]
 8001afe:	3301      	adds	r3, #1
 8001b00:	4a23      	ldr	r2, [pc, #140]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001b02:	212d      	movs	r1, #45	; 0x2d
 8001b04:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+2]='/';
 8001b06:	4b21      	ldr	r3, [pc, #132]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001b08:	681b      	ldr	r3, [r3, #0]
 8001b0a:	3302      	adds	r3, #2
 8001b0c:	4a20      	ldr	r2, [pc, #128]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001b0e:	212f      	movs	r1, #47	; 0x2f
 8001b10:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+3;
                             	 	        	        uLength1+=3;
 8001b12:	4b20      	ldr	r3, [pc, #128]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001b14:	781b      	ldrb	r3, [r3, #0]
 8001b16:	3303      	adds	r3, #3
 8001b18:	b2da      	uxtb	r2, r3
 8001b1a:	4b1e      	ldr	r3, [pc, #120]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001b1c:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001b1e:	e205      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'N':
                             	 	        			 uRx_Data1[k]='-';
 8001b20:	4b1a      	ldr	r3, [pc, #104]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001b22:	681b      	ldr	r3, [r3, #0]
 8001b24:	4a1a      	ldr	r2, [pc, #104]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001b26:	212d      	movs	r1, #45	; 0x2d
 8001b28:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+1]='.';
 8001b2a:	4b18      	ldr	r3, [pc, #96]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001b2c:	681b      	ldr	r3, [r3, #0]
 8001b2e:	3301      	adds	r3, #1
 8001b30:	4a17      	ldr	r2, [pc, #92]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001b32:	212e      	movs	r1, #46	; 0x2e
 8001b34:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data1[k+2]='/';
 8001b36:	4b15      	ldr	r3, [pc, #84]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001b38:	681b      	ldr	r3, [r3, #0]
 8001b3a:	3302      	adds	r3, #2
 8001b3c:	4a14      	ldr	r2, [pc, #80]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001b3e:	212f      	movs	r1, #47	; 0x2f
 8001b40:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+3;
                             	 	        	        uLength1+=3;
 8001b42:	4b14      	ldr	r3, [pc, #80]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001b44:	781b      	ldrb	r3, [r3, #0]
 8001b46:	3303      	adds	r3, #3
 8001b48:	b2da      	uxtb	r2, r3
 8001b4a:	4b12      	ldr	r3, [pc, #72]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001b4c:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001b4e:	e1ed      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'O':
                             	 	        			 uRx_Data1[k]='-';
 8001b50:	4b0e      	ldr	r3, [pc, #56]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001b52:	681b      	ldr	r3, [r3, #0]
 8001b54:	4a0e      	ldr	r2, [pc, #56]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001b56:	212d      	movs	r1, #45	; 0x2d
 8001b58:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+1]='-';
 8001b5a:	4b0c      	ldr	r3, [pc, #48]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001b5c:	681b      	ldr	r3, [r3, #0]
 8001b5e:	3301      	adds	r3, #1
 8001b60:	4a0b      	ldr	r2, [pc, #44]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001b62:	212d      	movs	r1, #45	; 0x2d
 8001b64:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+2]='-';
 8001b66:	4b09      	ldr	r3, [pc, #36]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001b68:	681b      	ldr	r3, [r3, #0]
 8001b6a:	3302      	adds	r3, #2
 8001b6c:	4a08      	ldr	r2, [pc, #32]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001b6e:	212d      	movs	r1, #45	; 0x2d
 8001b70:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+3]='/';
 8001b72:	4b06      	ldr	r3, [pc, #24]	; (8001b8c <HAL_UART_RxCpltCallback+0x564>)
 8001b74:	681b      	ldr	r3, [r3, #0]
 8001b76:	3303      	adds	r3, #3
 8001b78:	4a05      	ldr	r2, [pc, #20]	; (8001b90 <HAL_UART_RxCpltCallback+0x568>)
 8001b7a:	212f      	movs	r1, #47	; 0x2f
 8001b7c:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+4;
                             	 	        	        uLength1+=4;
 8001b7e:	4b05      	ldr	r3, [pc, #20]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001b80:	781b      	ldrb	r3, [r3, #0]
 8001b82:	3304      	adds	r3, #4
 8001b84:	b2da      	uxtb	r2, r3
 8001b86:	4b03      	ldr	r3, [pc, #12]	; (8001b94 <HAL_UART_RxCpltCallback+0x56c>)
 8001b88:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001b8a:	e1cf      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
 8001b8c:	20001434 	.word	0x20001434
 8001b90:	2000082c 	.word	0x2000082c
 8001b94:	2000142d 	.word	0x2000142d
                             	 	        		 case 'P':
                             	 	        			 uRx_Data1[k]='.';
 8001b98:	4b9e      	ldr	r3, [pc, #632]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001b9a:	681b      	ldr	r3, [r3, #0]
 8001b9c:	4a9e      	ldr	r2, [pc, #632]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001b9e:	212e      	movs	r1, #46	; 0x2e
 8001ba0:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+1]='-';
 8001ba2:	4b9c      	ldr	r3, [pc, #624]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001ba4:	681b      	ldr	r3, [r3, #0]
 8001ba6:	3301      	adds	r3, #1
 8001ba8:	4a9b      	ldr	r2, [pc, #620]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001baa:	212d      	movs	r1, #45	; 0x2d
 8001bac:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+2]='-';
 8001bae:	4b99      	ldr	r3, [pc, #612]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001bb0:	681b      	ldr	r3, [r3, #0]
 8001bb2:	3302      	adds	r3, #2
 8001bb4:	4a98      	ldr	r2, [pc, #608]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001bb6:	212d      	movs	r1, #45	; 0x2d
 8001bb8:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+3]='.';
 8001bba:	4b96      	ldr	r3, [pc, #600]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001bbc:	681b      	ldr	r3, [r3, #0]
 8001bbe:	3303      	adds	r3, #3
 8001bc0:	4a95      	ldr	r2, [pc, #596]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001bc2:	212e      	movs	r1, #46	; 0x2e
 8001bc4:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+4]='/';
 8001bc6:	4b93      	ldr	r3, [pc, #588]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001bc8:	681b      	ldr	r3, [r3, #0]
 8001bca:	3304      	adds	r3, #4
 8001bcc:	4a92      	ldr	r2, [pc, #584]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001bce:	212f      	movs	r1, #47	; 0x2f
 8001bd0:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+5;
                             	 	        	        uLength1+=5;
 8001bd2:	4b92      	ldr	r3, [pc, #584]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001bd4:	781b      	ldrb	r3, [r3, #0]
 8001bd6:	3305      	adds	r3, #5
 8001bd8:	b2da      	uxtb	r2, r3
 8001bda:	4b90      	ldr	r3, [pc, #576]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001bdc:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001bde:	e1a5      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'Q':
                             	 	        			 uRx_Data1[k]='-';
 8001be0:	4b8c      	ldr	r3, [pc, #560]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001be2:	681b      	ldr	r3, [r3, #0]
 8001be4:	4a8c      	ldr	r2, [pc, #560]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001be6:	212d      	movs	r1, #45	; 0x2d
 8001be8:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+1]='-';
 8001bea:	4b8a      	ldr	r3, [pc, #552]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001bec:	681b      	ldr	r3, [r3, #0]
 8001bee:	3301      	adds	r3, #1
 8001bf0:	4a89      	ldr	r2, [pc, #548]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001bf2:	212d      	movs	r1, #45	; 0x2d
 8001bf4:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+2]='.';
 8001bf6:	4b87      	ldr	r3, [pc, #540]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001bf8:	681b      	ldr	r3, [r3, #0]
 8001bfa:	3302      	adds	r3, #2
 8001bfc:	4a86      	ldr	r2, [pc, #536]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001bfe:	212e      	movs	r1, #46	; 0x2e
 8001c00:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+3]='-';
 8001c02:	4b84      	ldr	r3, [pc, #528]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001c04:	681b      	ldr	r3, [r3, #0]
 8001c06:	3303      	adds	r3, #3
 8001c08:	4a83      	ldr	r2, [pc, #524]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001c0a:	212d      	movs	r1, #45	; 0x2d
 8001c0c:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+4]='/';
 8001c0e:	4b81      	ldr	r3, [pc, #516]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001c10:	681b      	ldr	r3, [r3, #0]
 8001c12:	3304      	adds	r3, #4
 8001c14:	4a80      	ldr	r2, [pc, #512]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001c16:	212f      	movs	r1, #47	; 0x2f
 8001c18:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+5;
                             	 	        	        uLength1+=5;
 8001c1a:	4b80      	ldr	r3, [pc, #512]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001c1c:	781b      	ldrb	r3, [r3, #0]
 8001c1e:	3305      	adds	r3, #5
 8001c20:	b2da      	uxtb	r2, r3
 8001c22:	4b7e      	ldr	r3, [pc, #504]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001c24:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001c26:	e181      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'R':
                             	 	        			 uRx_Data1[k]='.';
 8001c28:	4b7a      	ldr	r3, [pc, #488]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001c2a:	681b      	ldr	r3, [r3, #0]
 8001c2c:	4a7a      	ldr	r2, [pc, #488]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001c2e:	212e      	movs	r1, #46	; 0x2e
 8001c30:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+1]='-';
 8001c32:	4b78      	ldr	r3, [pc, #480]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	3301      	adds	r3, #1
 8001c38:	4a77      	ldr	r2, [pc, #476]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001c3a:	212d      	movs	r1, #45	; 0x2d
 8001c3c:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+2]='.';
 8001c3e:	4b75      	ldr	r3, [pc, #468]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001c40:	681b      	ldr	r3, [r3, #0]
 8001c42:	3302      	adds	r3, #2
 8001c44:	4a74      	ldr	r2, [pc, #464]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001c46:	212e      	movs	r1, #46	; 0x2e
 8001c48:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+3]='/';
 8001c4a:	4b72      	ldr	r3, [pc, #456]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001c4c:	681b      	ldr	r3, [r3, #0]
 8001c4e:	3303      	adds	r3, #3
 8001c50:	4a71      	ldr	r2, [pc, #452]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001c52:	212f      	movs	r1, #47	; 0x2f
 8001c54:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+4;
                             	 	        	        uLength1+=4;
 8001c56:	4b71      	ldr	r3, [pc, #452]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001c58:	781b      	ldrb	r3, [r3, #0]
 8001c5a:	3304      	adds	r3, #4
 8001c5c:	b2da      	uxtb	r2, r3
 8001c5e:	4b6f      	ldr	r3, [pc, #444]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001c60:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001c62:	e163      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'S':
                             	 	        			 uRx_Data1[k]='.';
 8001c64:	4b6b      	ldr	r3, [pc, #428]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001c66:	681b      	ldr	r3, [r3, #0]
 8001c68:	4a6b      	ldr	r2, [pc, #428]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001c6a:	212e      	movs	r1, #46	; 0x2e
 8001c6c:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+1]='.';
 8001c6e:	4b69      	ldr	r3, [pc, #420]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001c70:	681b      	ldr	r3, [r3, #0]
 8001c72:	3301      	adds	r3, #1
 8001c74:	4a68      	ldr	r2, [pc, #416]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001c76:	212e      	movs	r1, #46	; 0x2e
 8001c78:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+2]='.';
 8001c7a:	4b66      	ldr	r3, [pc, #408]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001c7c:	681b      	ldr	r3, [r3, #0]
 8001c7e:	3302      	adds	r3, #2
 8001c80:	4a65      	ldr	r2, [pc, #404]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001c82:	212e      	movs	r1, #46	; 0x2e
 8001c84:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+3]='/';
 8001c86:	4b63      	ldr	r3, [pc, #396]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001c88:	681b      	ldr	r3, [r3, #0]
 8001c8a:	3303      	adds	r3, #3
 8001c8c:	4a62      	ldr	r2, [pc, #392]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001c8e:	212f      	movs	r1, #47	; 0x2f
 8001c90:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+4;
                             	 	        	        uLength1+=4;
 8001c92:	4b62      	ldr	r3, [pc, #392]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001c94:	781b      	ldrb	r3, [r3, #0]
 8001c96:	3304      	adds	r3, #4
 8001c98:	b2da      	uxtb	r2, r3
 8001c9a:	4b60      	ldr	r3, [pc, #384]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001c9c:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001c9e:	e145      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'T':
                             	 	        			 uRx_Data1[k]='-';
 8001ca0:	4b5c      	ldr	r3, [pc, #368]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001ca2:	681b      	ldr	r3, [r3, #0]
 8001ca4:	4a5c      	ldr	r2, [pc, #368]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001ca6:	212d      	movs	r1, #45	; 0x2d
 8001ca8:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+1]='/';
 8001caa:	4b5a      	ldr	r3, [pc, #360]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001cac:	681b      	ldr	r3, [r3, #0]
 8001cae:	3301      	adds	r3, #1
 8001cb0:	4a59      	ldr	r2, [pc, #356]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001cb2:	212f      	movs	r1, #47	; 0x2f
 8001cb4:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+2;
                             	 	        	        uLength1+=2;
 8001cb6:	4b59      	ldr	r3, [pc, #356]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001cb8:	781b      	ldrb	r3, [r3, #0]
 8001cba:	3302      	adds	r3, #2
 8001cbc:	b2da      	uxtb	r2, r3
 8001cbe:	4b57      	ldr	r3, [pc, #348]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001cc0:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001cc2:	e133      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'U':
                             	 	        			 uRx_Data1[k]='.';
 8001cc4:	4b53      	ldr	r3, [pc, #332]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001cc6:	681b      	ldr	r3, [r3, #0]
 8001cc8:	4a53      	ldr	r2, [pc, #332]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001cca:	212e      	movs	r1, #46	; 0x2e
 8001ccc:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+1]='.';
 8001cce:	4b51      	ldr	r3, [pc, #324]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001cd0:	681b      	ldr	r3, [r3, #0]
 8001cd2:	3301      	adds	r3, #1
 8001cd4:	4a50      	ldr	r2, [pc, #320]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001cd6:	212e      	movs	r1, #46	; 0x2e
 8001cd8:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+2]='-';
 8001cda:	4b4e      	ldr	r3, [pc, #312]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001cdc:	681b      	ldr	r3, [r3, #0]
 8001cde:	3302      	adds	r3, #2
 8001ce0:	4a4d      	ldr	r2, [pc, #308]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001ce2:	212d      	movs	r1, #45	; 0x2d
 8001ce4:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+3]='/';
 8001ce6:	4b4b      	ldr	r3, [pc, #300]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001ce8:	681b      	ldr	r3, [r3, #0]
 8001cea:	3303      	adds	r3, #3
 8001cec:	4a4a      	ldr	r2, [pc, #296]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001cee:	212f      	movs	r1, #47	; 0x2f
 8001cf0:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+4;
                             	 	        	        uLength1+=4;
 8001cf2:	4b4a      	ldr	r3, [pc, #296]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001cf4:	781b      	ldrb	r3, [r3, #0]
 8001cf6:	3304      	adds	r3, #4
 8001cf8:	b2da      	uxtb	r2, r3
 8001cfa:	4b48      	ldr	r3, [pc, #288]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001cfc:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001cfe:	e115      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'V':
                             	 	        			 uRx_Data1[k]='.';
 8001d00:	4b44      	ldr	r3, [pc, #272]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001d02:	681b      	ldr	r3, [r3, #0]
 8001d04:	4a44      	ldr	r2, [pc, #272]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001d06:	212e      	movs	r1, #46	; 0x2e
 8001d08:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+1]='.';
 8001d0a:	4b42      	ldr	r3, [pc, #264]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	3301      	adds	r3, #1
 8001d10:	4a41      	ldr	r2, [pc, #260]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001d12:	212e      	movs	r1, #46	; 0x2e
 8001d14:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+2]='.';
 8001d16:	4b3f      	ldr	r3, [pc, #252]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001d18:	681b      	ldr	r3, [r3, #0]
 8001d1a:	3302      	adds	r3, #2
 8001d1c:	4a3e      	ldr	r2, [pc, #248]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001d1e:	212e      	movs	r1, #46	; 0x2e
 8001d20:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+3]='-';
 8001d22:	4b3c      	ldr	r3, [pc, #240]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001d24:	681b      	ldr	r3, [r3, #0]
 8001d26:	3303      	adds	r3, #3
 8001d28:	4a3b      	ldr	r2, [pc, #236]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001d2a:	212d      	movs	r1, #45	; 0x2d
 8001d2c:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+4]='/';
 8001d2e:	4b39      	ldr	r3, [pc, #228]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001d30:	681b      	ldr	r3, [r3, #0]
 8001d32:	3304      	adds	r3, #4
 8001d34:	4a38      	ldr	r2, [pc, #224]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001d36:	212f      	movs	r1, #47	; 0x2f
 8001d38:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+5;
                             	 	        	        uLength1+=5;
 8001d3a:	4b38      	ldr	r3, [pc, #224]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001d3c:	781b      	ldrb	r3, [r3, #0]
 8001d3e:	3305      	adds	r3, #5
 8001d40:	b2da      	uxtb	r2, r3
 8001d42:	4b36      	ldr	r3, [pc, #216]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001d44:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001d46:	e0f1      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'W':
                             	 	        			 uRx_Data1[k]='.';
 8001d48:	4b32      	ldr	r3, [pc, #200]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001d4a:	681b      	ldr	r3, [r3, #0]
 8001d4c:	4a32      	ldr	r2, [pc, #200]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001d4e:	212e      	movs	r1, #46	; 0x2e
 8001d50:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+1]='-';
 8001d52:	4b30      	ldr	r3, [pc, #192]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001d54:	681b      	ldr	r3, [r3, #0]
 8001d56:	3301      	adds	r3, #1
 8001d58:	4a2f      	ldr	r2, [pc, #188]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001d5a:	212d      	movs	r1, #45	; 0x2d
 8001d5c:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+2]='-';
 8001d5e:	4b2d      	ldr	r3, [pc, #180]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001d60:	681b      	ldr	r3, [r3, #0]
 8001d62:	3302      	adds	r3, #2
 8001d64:	4a2c      	ldr	r2, [pc, #176]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001d66:	212d      	movs	r1, #45	; 0x2d
 8001d68:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+3]='/';
 8001d6a:	4b2a      	ldr	r3, [pc, #168]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	3303      	adds	r3, #3
 8001d70:	4a29      	ldr	r2, [pc, #164]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001d72:	212f      	movs	r1, #47	; 0x2f
 8001d74:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+4;
                             	 	        	        uLength1+=4;
 8001d76:	4b29      	ldr	r3, [pc, #164]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001d78:	781b      	ldrb	r3, [r3, #0]
 8001d7a:	3304      	adds	r3, #4
 8001d7c:	b2da      	uxtb	r2, r3
 8001d7e:	4b27      	ldr	r3, [pc, #156]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001d80:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001d82:	e0d3      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'X':
                             	 	        			 uRx_Data1[k]='-';
 8001d84:	4b23      	ldr	r3, [pc, #140]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001d86:	681b      	ldr	r3, [r3, #0]
 8001d88:	4a23      	ldr	r2, [pc, #140]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001d8a:	212d      	movs	r1, #45	; 0x2d
 8001d8c:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+1]='.';
 8001d8e:	4b21      	ldr	r3, [pc, #132]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	3301      	adds	r3, #1
 8001d94:	4a20      	ldr	r2, [pc, #128]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001d96:	212e      	movs	r1, #46	; 0x2e
 8001d98:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+2]='.';
 8001d9a:	4b1e      	ldr	r3, [pc, #120]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001d9c:	681b      	ldr	r3, [r3, #0]
 8001d9e:	3302      	adds	r3, #2
 8001da0:	4a1d      	ldr	r2, [pc, #116]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001da2:	212e      	movs	r1, #46	; 0x2e
 8001da4:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+3]='-';
 8001da6:	4b1b      	ldr	r3, [pc, #108]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	3303      	adds	r3, #3
 8001dac:	4a1a      	ldr	r2, [pc, #104]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001dae:	212d      	movs	r1, #45	; 0x2d
 8001db0:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+4]='/';
 8001db2:	4b18      	ldr	r3, [pc, #96]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001db4:	681b      	ldr	r3, [r3, #0]
 8001db6:	3304      	adds	r3, #4
 8001db8:	4a17      	ldr	r2, [pc, #92]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001dba:	212f      	movs	r1, #47	; 0x2f
 8001dbc:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+5;
                             	 	        	        uLength1+=5;
 8001dbe:	4b17      	ldr	r3, [pc, #92]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001dc0:	781b      	ldrb	r3, [r3, #0]
 8001dc2:	3305      	adds	r3, #5
 8001dc4:	b2da      	uxtb	r2, r3
 8001dc6:	4b15      	ldr	r3, [pc, #84]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001dc8:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001dca:	e0af      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
                             	 	        		 case 'Y':
                             	 	        			 uRx_Data1[k]='-';
 8001dcc:	4b11      	ldr	r3, [pc, #68]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001dce:	681b      	ldr	r3, [r3, #0]
 8001dd0:	4a11      	ldr	r2, [pc, #68]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001dd2:	212d      	movs	r1, #45	; 0x2d
 8001dd4:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+1]='.';
 8001dd6:	4b0f      	ldr	r3, [pc, #60]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001dd8:	681b      	ldr	r3, [r3, #0]
 8001dda:	3301      	adds	r3, #1
 8001ddc:	4a0e      	ldr	r2, [pc, #56]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001dde:	212e      	movs	r1, #46	; 0x2e
 8001de0:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+2]='-';
 8001de2:	4b0c      	ldr	r3, [pc, #48]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001de4:	681b      	ldr	r3, [r3, #0]
 8001de6:	3302      	adds	r3, #2
 8001de8:	4a0b      	ldr	r2, [pc, #44]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001dea:	212d      	movs	r1, #45	; 0x2d
 8001dec:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+3]='-';
 8001dee:	4b09      	ldr	r3, [pc, #36]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001df0:	681b      	ldr	r3, [r3, #0]
 8001df2:	3303      	adds	r3, #3
 8001df4:	4a08      	ldr	r2, [pc, #32]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001df6:	212d      	movs	r1, #45	; 0x2d
 8001df8:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+4]='/';
 8001dfa:	4b06      	ldr	r3, [pc, #24]	; (8001e14 <HAL_UART_RxCpltCallback+0x7ec>)
 8001dfc:	681b      	ldr	r3, [r3, #0]
 8001dfe:	3304      	adds	r3, #4
 8001e00:	4a05      	ldr	r2, [pc, #20]	; (8001e18 <HAL_UART_RxCpltCallback+0x7f0>)
 8001e02:	212f      	movs	r1, #47	; 0x2f
 8001e04:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+5;
                             	 	        	        uLength1+=5;
 8001e06:	4b05      	ldr	r3, [pc, #20]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001e08:	781b      	ldrb	r3, [r3, #0]
 8001e0a:	3305      	adds	r3, #5
 8001e0c:	b2da      	uxtb	r2, r3
 8001e0e:	4b03      	ldr	r3, [pc, #12]	; (8001e1c <HAL_UART_RxCpltCallback+0x7f4>)
 8001e10:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001e12:	e08b      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>
 8001e14:	20001434 	.word	0x20001434
 8001e18:	2000082c 	.word	0x2000082c
 8001e1c:	2000142d 	.word	0x2000142d
                             	 	        		 case 'Z':
                             	 	        			 uRx_Data1[k]='-';
 8001e20:	4bb0      	ldr	r3, [pc, #704]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	4ab0      	ldr	r2, [pc, #704]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001e26:	212d      	movs	r1, #45	; 0x2d
 8001e28:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+1]='-';
 8001e2a:	4bae      	ldr	r3, [pc, #696]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	3301      	adds	r3, #1
 8001e30:	4aad      	ldr	r2, [pc, #692]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001e32:	212d      	movs	r1, #45	; 0x2d
 8001e34:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+2]='.';
 8001e36:	4bab      	ldr	r3, [pc, #684]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001e38:	681b      	ldr	r3, [r3, #0]
 8001e3a:	3302      	adds	r3, #2
 8001e3c:	4aaa      	ldr	r2, [pc, #680]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001e3e:	212e      	movs	r1, #46	; 0x2e
 8001e40:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+3]='.';
 8001e42:	4ba8      	ldr	r3, [pc, #672]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001e44:	681b      	ldr	r3, [r3, #0]
 8001e46:	3303      	adds	r3, #3
 8001e48:	4aa7      	ldr	r2, [pc, #668]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001e4a:	212e      	movs	r1, #46	; 0x2e
 8001e4c:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[k+4]='/';
 8001e4e:	4ba5      	ldr	r3, [pc, #660]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	3304      	adds	r3, #4
 8001e54:	4aa4      	ldr	r2, [pc, #656]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001e56:	212f      	movs	r1, #47	; 0x2f
 8001e58:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	//k=k+5;
                             	 	        	        uLength1+=5;
 8001e5a:	4ba4      	ldr	r3, [pc, #656]	; (80020ec <HAL_UART_RxCpltCallback+0xac4>)
 8001e5c:	781b      	ldrb	r3, [r3, #0]
 8001e5e:	3305      	adds	r3, #5
 8001e60:	b2da      	uxtb	r2, r3
 8001e62:	4ba2      	ldr	r3, [pc, #648]	; (80020ec <HAL_UART_RxCpltCallback+0xac4>)
 8001e64:	701a      	strb	r2, [r3, #0]
                             	 	        		 break;
 8001e66:	e061      	b.n	8001f2c <HAL_UART_RxCpltCallback+0x904>

                             	 	        		 default:
                             	 	        			uRx_Data1[k]='E';
 8001e68:	4b9e      	ldr	r3, [pc, #632]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001e6a:	681b      	ldr	r3, [r3, #0]
 8001e6c:	4a9e      	ldr	r2, [pc, #632]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001e6e:	2145      	movs	r1, #69	; 0x45
 8001e70:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+1]='n';
 8001e72:	4b9c      	ldr	r3, [pc, #624]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001e74:	681b      	ldr	r3, [r3, #0]
 8001e76:	3301      	adds	r3, #1
 8001e78:	4a9b      	ldr	r2, [pc, #620]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001e7a:	216e      	movs	r1, #110	; 0x6e
 8001e7c:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+2]='c';
 8001e7e:	4b99      	ldr	r3, [pc, #612]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001e80:	681b      	ldr	r3, [r3, #0]
 8001e82:	3302      	adds	r3, #2
 8001e84:	4a98      	ldr	r2, [pc, #608]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001e86:	2163      	movs	r1, #99	; 0x63
 8001e88:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+3]='o';
 8001e8a:	4b96      	ldr	r3, [pc, #600]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001e8c:	681b      	ldr	r3, [r3, #0]
 8001e8e:	3303      	adds	r3, #3
 8001e90:	4a95      	ldr	r2, [pc, #596]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001e92:	216f      	movs	r1, #111	; 0x6f
 8001e94:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+4]='d';
 8001e96:	4b93      	ldr	r3, [pc, #588]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001e98:	681b      	ldr	r3, [r3, #0]
 8001e9a:	3304      	adds	r3, #4
 8001e9c:	4a92      	ldr	r2, [pc, #584]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001e9e:	2164      	movs	r1, #100	; 0x64
 8001ea0:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+5]='e';
 8001ea2:	4b90      	ldr	r3, [pc, #576]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001ea4:	681b      	ldr	r3, [r3, #0]
 8001ea6:	3305      	adds	r3, #5
 8001ea8:	4a8f      	ldr	r2, [pc, #572]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001eaa:	2165      	movs	r1, #101	; 0x65
 8001eac:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+6]=' ';
 8001eae:	4b8d      	ldr	r3, [pc, #564]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001eb0:	681b      	ldr	r3, [r3, #0]
 8001eb2:	3306      	adds	r3, #6
 8001eb4:	4a8c      	ldr	r2, [pc, #560]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001eb6:	2120      	movs	r1, #32
 8001eb8:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+7]='E';
 8001eba:	4b8a      	ldr	r3, [pc, #552]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001ebc:	681b      	ldr	r3, [r3, #0]
 8001ebe:	3307      	adds	r3, #7
 8001ec0:	4a89      	ldr	r2, [pc, #548]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001ec2:	2145      	movs	r1, #69	; 0x45
 8001ec4:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+8]='r';
 8001ec6:	4b87      	ldr	r3, [pc, #540]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001ec8:	681b      	ldr	r3, [r3, #0]
 8001eca:	3308      	adds	r3, #8
 8001ecc:	4a86      	ldr	r2, [pc, #536]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001ece:	2172      	movs	r1, #114	; 0x72
 8001ed0:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+9]='r';
 8001ed2:	4b84      	ldr	r3, [pc, #528]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	3309      	adds	r3, #9
 8001ed8:	4a83      	ldr	r2, [pc, #524]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001eda:	2172      	movs	r1, #114	; 0x72
 8001edc:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+10]='o';
 8001ede:	4b81      	ldr	r3, [pc, #516]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001ee0:	681b      	ldr	r3, [r3, #0]
 8001ee2:	330a      	adds	r3, #10
 8001ee4:	4a80      	ldr	r2, [pc, #512]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001ee6:	216f      	movs	r1, #111	; 0x6f
 8001ee8:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+11]='r';
 8001eea:	4b7e      	ldr	r3, [pc, #504]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001eec:	681b      	ldr	r3, [r3, #0]
 8001eee:	330b      	adds	r3, #11
 8001ef0:	4a7d      	ldr	r2, [pc, #500]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001ef2:	2172      	movs	r1, #114	; 0x72
 8001ef4:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+12]=':';
 8001ef6:	4b7b      	ldr	r3, [pc, #492]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001ef8:	681b      	ldr	r3, [r3, #0]
 8001efa:	330c      	adds	r3, #12
 8001efc:	4a7a      	ldr	r2, [pc, #488]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001efe:	213a      	movs	r1, #58	; 0x3a
 8001f00:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+13]=' ';
 8001f02:	4b78      	ldr	r3, [pc, #480]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	330d      	adds	r3, #13
 8001f08:	4a77      	ldr	r2, [pc, #476]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001f0a:	2120      	movs	r1, #32
 8001f0c:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data1[k+14]=uRx_Data[i];
 8001f0e:	4b75      	ldr	r3, [pc, #468]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001f10:	681b      	ldr	r3, [r3, #0]
 8001f12:	330e      	adds	r3, #14
 8001f14:	4976      	ldr	r1, [pc, #472]	; (80020f0 <HAL_UART_RxCpltCallback+0xac8>)
 8001f16:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8001f18:	440a      	add	r2, r1
 8001f1a:	7811      	ldrb	r1, [r2, #0]
 8001f1c:	4a72      	ldr	r2, [pc, #456]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001f1e:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uLength1+=15;
 8001f20:	4b72      	ldr	r3, [pc, #456]	; (80020ec <HAL_UART_RxCpltCallback+0xac4>)
 8001f22:	781b      	ldrb	r3, [r3, #0]
 8001f24:	330f      	adds	r3, #15
 8001f26:	b2da      	uxtb	r2, r3
 8001f28:	4b70      	ldr	r3, [pc, #448]	; (80020ec <HAL_UART_RxCpltCallback+0xac4>)
 8001f2a:	701a      	strb	r2, [r3, #0]

                            	 	        	 }
                            	 	        	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
                            	 	        	//HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
                            	 	        	 for (int j=k;j<=uLength1-1;j++){
 8001f2c:	4b6d      	ldr	r3, [pc, #436]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 8001f2e:	681b      	ldr	r3, [r3, #0]
 8001f30:	64bb      	str	r3, [r7, #72]	; 0x48
 8001f32:	e0aa      	b.n	800208a <HAL_UART_RxCpltCallback+0xa62>
                            	 	        		 if (uRx_Data1[j]=='.'){
 8001f34:	4a6c      	ldr	r2, [pc, #432]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001f36:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8001f38:	4413      	add	r3, r2
 8001f3a:	781b      	ldrb	r3, [r3, #0]
 8001f3c:	2b2e      	cmp	r3, #46	; 0x2e
 8001f3e:	d112      	bne.n	8001f66 <HAL_UART_RxCpltCallback+0x93e>
                                 	 	            HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8001f40:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001f44:	486b      	ldr	r0, [pc, #428]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 8001f46:	f003 fdcc 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                 	 	            HAL_Delay(500);
 8001f4a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001f4e:	f003 f991 	bl	8005274 <HAL_Delay>
                                 	 	            HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8001f52:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001f56:	4867      	ldr	r0, [pc, #412]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 8001f58:	f003 fdc3 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                 	 	            HAL_Delay(500);
 8001f5c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001f60:	f003 f988 	bl	8005274 <HAL_Delay>
 8001f64:	e08e      	b.n	8002084 <HAL_UART_RxCpltCallback+0xa5c>
                                 	 	          }
                                 	 	         else  if (uRx_Data1[j]=='-'){
 8001f66:	4a60      	ldr	r2, [pc, #384]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001f68:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8001f6a:	4413      	add	r3, r2
 8001f6c:	781b      	ldrb	r3, [r3, #0]
 8001f6e:	2b2d      	cmp	r3, #45	; 0x2d
 8001f70:	d110      	bne.n	8001f94 <HAL_UART_RxCpltCallback+0x96c>
                                 	 	            HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8001f72:	2104      	movs	r1, #4
 8001f74:	4860      	ldr	r0, [pc, #384]	; (80020f8 <HAL_UART_RxCpltCallback+0xad0>)
 8001f76:	f003 fdb4 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                 	 	            HAL_Delay(500);
 8001f7a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001f7e:	f003 f979 	bl	8005274 <HAL_Delay>
                                 	 	            HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8001f82:	2104      	movs	r1, #4
 8001f84:	485c      	ldr	r0, [pc, #368]	; (80020f8 <HAL_UART_RxCpltCallback+0xad0>)
 8001f86:	f003 fdac 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                 	 	            HAL_Delay(500);
 8001f8a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001f8e:	f003 f971 	bl	8005274 <HAL_Delay>
 8001f92:	e077      	b.n	8002084 <HAL_UART_RxCpltCallback+0xa5c>

                                 	 	       }
                                 	 	         else if (uRx_Data1[j]=='/'){
 8001f94:	4a54      	ldr	r2, [pc, #336]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8001f96:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8001f98:	4413      	add	r3, r2
 8001f9a:	781b      	ldrb	r3, [r3, #0]
 8001f9c:	2b2f      	cmp	r3, #47	; 0x2f
 8001f9e:	d130      	bne.n	8002002 <HAL_UART_RxCpltCallback+0x9da>
                                 	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8001fa0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001fa4:	4853      	ldr	r0, [pc, #332]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 8001fa6:	f003 fd9c 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                 	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8001faa:	2104      	movs	r1, #4
 8001fac:	4852      	ldr	r0, [pc, #328]	; (80020f8 <HAL_UART_RxCpltCallback+0xad0>)
 8001fae:	f003 fd98 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                 	 	        	  HAL_Delay(250);
 8001fb2:	20fa      	movs	r0, #250	; 0xfa
 8001fb4:	f003 f95e 	bl	8005274 <HAL_Delay>
                                 	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8001fb8:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001fbc:	484d      	ldr	r0, [pc, #308]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 8001fbe:	f003 fd90 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                 	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8001fc2:	2104      	movs	r1, #4
 8001fc4:	484c      	ldr	r0, [pc, #304]	; (80020f8 <HAL_UART_RxCpltCallback+0xad0>)
 8001fc6:	f003 fd8c 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                 	 	        	  HAL_Delay(250);
 8001fca:	20fa      	movs	r0, #250	; 0xfa
 8001fcc:	f003 f952 	bl	8005274 <HAL_Delay>
                                 	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8001fd0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001fd4:	4847      	ldr	r0, [pc, #284]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 8001fd6:	f003 fd84 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                 	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8001fda:	2104      	movs	r1, #4
 8001fdc:	4846      	ldr	r0, [pc, #280]	; (80020f8 <HAL_UART_RxCpltCallback+0xad0>)
 8001fde:	f003 fd80 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                 	 	        	  HAL_Delay(250);
 8001fe2:	20fa      	movs	r0, #250	; 0xfa
 8001fe4:	f003 f946 	bl	8005274 <HAL_Delay>
                                 	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8001fe8:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001fec:	4841      	ldr	r0, [pc, #260]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 8001fee:	f003 fd78 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                 	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8001ff2:	2104      	movs	r1, #4
 8001ff4:	4840      	ldr	r0, [pc, #256]	; (80020f8 <HAL_UART_RxCpltCallback+0xad0>)
 8001ff6:	f003 fd74 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                 	 	        	  HAL_Delay(250);
 8001ffa:	20fa      	movs	r0, #250	; 0xfa
 8001ffc:	f003 f93a 	bl	8005274 <HAL_Delay>
 8002000:	e040      	b.n	8002084 <HAL_UART_RxCpltCallback+0xa5c>
                                 	 	            }
                                 	 	         else if (uRx_Data1[j]=='E'){
 8002002:	4a39      	ldr	r2, [pc, #228]	; (80020e8 <HAL_UART_RxCpltCallback+0xac0>)
 8002004:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002006:	4413      	add	r3, r2
 8002008:	781b      	ldrb	r3, [r3, #0]
 800200a:	2b45      	cmp	r3, #69	; 0x45
 800200c:	d13a      	bne.n	8002084 <HAL_UART_RxCpltCallback+0xa5c>
                                 	 	        	 j=uLength1;
 800200e:	4b37      	ldr	r3, [pc, #220]	; (80020ec <HAL_UART_RxCpltCallback+0xac4>)
 8002010:	781b      	ldrb	r3, [r3, #0]
 8002012:	64bb      	str	r3, [r7, #72]	; 0x48
                                 	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8002014:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002018:	4836      	ldr	r0, [pc, #216]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 800201a:	f003 fd62 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 800201e:	2104      	movs	r1, #4
 8002020:	4835      	ldr	r0, [pc, #212]	; (80020f8 <HAL_UART_RxCpltCallback+0xad0>)
 8002022:	f003 fd5e 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                	 	        	  HAL_Delay(166);
 8002026:	20a6      	movs	r0, #166	; 0xa6
 8002028:	f003 f924 	bl	8005274 <HAL_Delay>
                                	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 800202c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002030:	4830      	ldr	r0, [pc, #192]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 8002032:	f003 fd56 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                	 	        	  HAL_Delay(167);
 8002036:	20a7      	movs	r0, #167	; 0xa7
 8002038:	f003 f91c 	bl	8005274 <HAL_Delay>
                                	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 800203c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002040:	482c      	ldr	r0, [pc, #176]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 8002042:	f003 fd4e 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                	 	        	  HAL_Delay(166);
 8002046:	20a6      	movs	r0, #166	; 0xa6
 8002048:	f003 f914 	bl	8005274 <HAL_Delay>
                                	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 800204c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002050:	4828      	ldr	r0, [pc, #160]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 8002052:	f003 fd46 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                	 	        	  HAL_Delay(167);
 8002056:	20a7      	movs	r0, #167	; 0xa7
 8002058:	f003 f90c 	bl	8005274 <HAL_Delay>
                                	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 800205c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002060:	4824      	ldr	r0, [pc, #144]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 8002062:	f003 fd3e 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                	 	        	  HAL_Delay(166);
 8002066:	20a6      	movs	r0, #166	; 0xa6
 8002068:	f003 f904 	bl	8005274 <HAL_Delay>
                                	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 800206c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002070:	4820      	ldr	r0, [pc, #128]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 8002072:	f003 fd36 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8002076:	2104      	movs	r1, #4
 8002078:	481f      	ldr	r0, [pc, #124]	; (80020f8 <HAL_UART_RxCpltCallback+0xad0>)
 800207a:	f003 fd32 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                	 	        	  HAL_Delay(168);
 800207e:	20a8      	movs	r0, #168	; 0xa8
 8002080:	f003 f8f8 	bl	8005274 <HAL_Delay>
                            	 	        	 for (int j=k;j<=uLength1-1;j++){
 8002084:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002086:	3301      	adds	r3, #1
 8002088:	64bb      	str	r3, [r7, #72]	; 0x48
 800208a:	4b18      	ldr	r3, [pc, #96]	; (80020ec <HAL_UART_RxCpltCallback+0xac4>)
 800208c:	781b      	ldrb	r3, [r3, #0]
 800208e:	461a      	mov	r2, r3
 8002090:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002092:	4293      	cmp	r3, r2
 8002094:	f6ff af4e 	blt.w	8001f34 <HAL_UART_RxCpltCallback+0x90c>
                                 	 	         }
                            	 	        	 }
                            	 	        	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
                            	 	        	//HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
                            	 	        	 k=uLength1;
 8002098:	4b14      	ldr	r3, [pc, #80]	; (80020ec <HAL_UART_RxCpltCallback+0xac4>)
 800209a:	781b      	ldrb	r3, [r3, #0]
 800209c:	461a      	mov	r2, r3
 800209e:	4b11      	ldr	r3, [pc, #68]	; (80020e4 <HAL_UART_RxCpltCallback+0xabc>)
 80020a0:	601a      	str	r2, [r3, #0]
                    				   for (int i=0;i<uLength-1;i++){
 80020a2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80020a4:	3301      	adds	r3, #1
 80020a6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80020a8:	4b14      	ldr	r3, [pc, #80]	; (80020fc <HAL_UART_RxCpltCallback+0xad4>)
 80020aa:	781b      	ldrb	r3, [r3, #0]
 80020ac:	3b01      	subs	r3, #1
 80020ae:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80020b0:	429a      	cmp	r2, r3
 80020b2:	f6ff ab52 	blt.w	800175a <HAL_UART_RxCpltCallback+0x132>
 80020b6:	f002 bdac 	b.w	8004c12 <HAL_UART_RxCpltCallback+0x35ea>

                            	 	         }
                                           }
                    			   }
                    			   else if (uRx_Data0[0]==0){
 80020ba:	4b11      	ldr	r3, [pc, #68]	; (8002100 <HAL_UART_RxCpltCallback+0xad8>)
 80020bc:	781b      	ldrb	r3, [r3, #0]
 80020be:	2b00      	cmp	r3, #0
 80020c0:	f042 85a7 	bne.w	8004c12 <HAL_UART_RxCpltCallback+0x35ea>
                            		   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
 80020c4:	2201      	movs	r2, #1
 80020c6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80020ca:	480a      	ldr	r0, [pc, #40]	; (80020f4 <HAL_UART_RxCpltCallback+0xacc>)
 80020cc:	f003 fcf1 	bl	8005ab2 <HAL_GPIO_WritePin>
                                       HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
 80020d0:	2201      	movs	r2, #1
 80020d2:	2104      	movs	r1, #4
 80020d4:	4808      	ldr	r0, [pc, #32]	; (80020f8 <HAL_UART_RxCpltCallback+0xad0>)
 80020d6:	f003 fcec 	bl	8005ab2 <HAL_GPIO_WritePin>
                                       for (int i=0;i<uLength-1;i++){
 80020da:	2300      	movs	r3, #0
 80020dc:	647b      	str	r3, [r7, #68]	; 0x44
 80020de:	f001 b846 	b.w	800316e <HAL_UART_RxCpltCallback+0x1b46>
 80020e2:	bf00      	nop
 80020e4:	20001434 	.word	0x20001434
 80020e8:	2000082c 	.word	0x2000082c
 80020ec:	2000142d 	.word	0x2000142d
 80020f0:	2000042c 	.word	0x2000042c
 80020f4:	40010800 	.word	0x40010800
 80020f8:	40011400 	.word	0x40011400
 80020fc:	2000142c 	.word	0x2000142c
 8002100:	20000428 	.word	0x20000428
                                       if (uRx_Data[i]=='.'){
 8002104:	4a84      	ldr	r2, [pc, #528]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 8002106:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002108:	4413      	add	r3, r2
 800210a:	781b      	ldrb	r3, [r3, #0]
 800210c:	2b2e      	cmp	r3, #46	; 0x2e
 800210e:	f000 8777 	beq.w	8003000 <HAL_UART_RxCpltCallback+0x19d8>
                        	 	          }
                        	 	         else  if (uRx_Data[i]=='-'){
 8002112:	4a81      	ldr	r2, [pc, #516]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 8002114:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002116:	4413      	add	r3, r2
 8002118:	781b      	ldrb	r3, [r3, #0]
 800211a:	2b2d      	cmp	r3, #45	; 0x2d
 800211c:	f000 8770 	beq.w	8003000 <HAL_UART_RxCpltCallback+0x19d8>

                        	 	       }
                        	 	         else if (uRx_Data[i]=='/'){
 8002120:	4a7d      	ldr	r2, [pc, #500]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 8002122:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002124:	4413      	add	r3, r2
 8002126:	781b      	ldrb	r3, [r3, #0]
 8002128:	2b2f      	cmp	r3, #47	; 0x2f
 800212a:	f040 8769 	bne.w	8003000 <HAL_UART_RxCpltCallback+0x19d8>
                        	 	        	   int f=0;
 800212e:	2300      	movs	r3, #0
 8002130:	643b      	str	r3, [r7, #64]	; 0x40
                        	 	        	   for (int j=k;j<=i-1;j++){
 8002132:	4b7a      	ldr	r3, [pc, #488]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002138:	e011      	b.n	800215e <HAL_UART_RxCpltCallback+0xb36>
                        	 	        		   if (uRx_Data[j]!='.'&&uRx_Data[j]!='-'){
 800213a:	4a77      	ldr	r2, [pc, #476]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 800213c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800213e:	4413      	add	r3, r2
 8002140:	781b      	ldrb	r3, [r3, #0]
 8002142:	2b2e      	cmp	r3, #46	; 0x2e
 8002144:	d008      	beq.n	8002158 <HAL_UART_RxCpltCallback+0xb30>
 8002146:	4a74      	ldr	r2, [pc, #464]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 8002148:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800214a:	4413      	add	r3, r2
 800214c:	781b      	ldrb	r3, [r3, #0]
 800214e:	2b2d      	cmp	r3, #45	; 0x2d
 8002150:	d002      	beq.n	8002158 <HAL_UART_RxCpltCallback+0xb30>
                        	 	        			   f=1;
 8002152:	2301      	movs	r3, #1
 8002154:	643b      	str	r3, [r7, #64]	; 0x40
                        	 	        			   break;
 8002156:	e006      	b.n	8002166 <HAL_UART_RxCpltCallback+0xb3e>
                        	 	        	   for (int j=k;j<=i-1;j++){
 8002158:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800215a:	3301      	adds	r3, #1
 800215c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800215e:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8002160:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002162:	429a      	cmp	r2, r3
 8002164:	dce9      	bgt.n	800213a <HAL_UART_RxCpltCallback+0xb12>
                        	 	        		   }
                        	 	        	   }
                        	 	        	   if (f==1||i-k>4||(i-k==4&&((uRx_Data[k]=='.'&&uRx_Data[k+1]=='.'&&uRx_Data[k+2]=='-'&&uRx_Data[k+3]=='-')
 8002166:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002168:	2b01      	cmp	r3, #1
 800216a:	d07c      	beq.n	8002266 <HAL_UART_RxCpltCallback+0xc3e>
 800216c:	4b6b      	ldr	r3, [pc, #428]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 800216e:	681b      	ldr	r3, [r3, #0]
 8002170:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8002172:	1ad3      	subs	r3, r2, r3
 8002174:	2b04      	cmp	r3, #4
 8002176:	dc76      	bgt.n	8002266 <HAL_UART_RxCpltCallback+0xc3e>
 8002178:	4b68      	ldr	r3, [pc, #416]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800217e:	1ad3      	subs	r3, r2, r3
 8002180:	2b04      	cmp	r3, #4
 8002182:	f040 8108 	bne.w	8002396 <HAL_UART_RxCpltCallback+0xd6e>
 8002186:	4b65      	ldr	r3, [pc, #404]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 8002188:	681b      	ldr	r3, [r3, #0]
 800218a:	4a63      	ldr	r2, [pc, #396]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 800218c:	5cd3      	ldrb	r3, [r2, r3]
 800218e:	2b2e      	cmp	r3, #46	; 0x2e
 8002190:	d114      	bne.n	80021bc <HAL_UART_RxCpltCallback+0xb94>
 8002192:	4b62      	ldr	r3, [pc, #392]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 8002194:	681b      	ldr	r3, [r3, #0]
 8002196:	3301      	adds	r3, #1
 8002198:	4a5f      	ldr	r2, [pc, #380]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 800219a:	5cd3      	ldrb	r3, [r2, r3]
 800219c:	2b2e      	cmp	r3, #46	; 0x2e
 800219e:	d10d      	bne.n	80021bc <HAL_UART_RxCpltCallback+0xb94>
 80021a0:	4b5e      	ldr	r3, [pc, #376]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	3302      	adds	r3, #2
 80021a6:	4a5c      	ldr	r2, [pc, #368]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 80021a8:	5cd3      	ldrb	r3, [r2, r3]
 80021aa:	2b2d      	cmp	r3, #45	; 0x2d
 80021ac:	d106      	bne.n	80021bc <HAL_UART_RxCpltCallback+0xb94>
 80021ae:	4b5b      	ldr	r3, [pc, #364]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 80021b0:	681b      	ldr	r3, [r3, #0]
 80021b2:	3303      	adds	r3, #3
 80021b4:	4a58      	ldr	r2, [pc, #352]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 80021b6:	5cd3      	ldrb	r3, [r2, r3]
 80021b8:	2b2d      	cmp	r3, #45	; 0x2d
 80021ba:	d054      	beq.n	8002266 <HAL_UART_RxCpltCallback+0xc3e>
                        	 	        			   ||(uRx_Data[k]=='.'&&uRx_Data[k+1]=='-'&&uRx_Data[k+2]=='.'&&uRx_Data[k+3]=='-')
 80021bc:	4b57      	ldr	r3, [pc, #348]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	4a55      	ldr	r2, [pc, #340]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 80021c2:	5cd3      	ldrb	r3, [r2, r3]
 80021c4:	2b2e      	cmp	r3, #46	; 0x2e
 80021c6:	d114      	bne.n	80021f2 <HAL_UART_RxCpltCallback+0xbca>
 80021c8:	4b54      	ldr	r3, [pc, #336]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	3301      	adds	r3, #1
 80021ce:	4a52      	ldr	r2, [pc, #328]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 80021d0:	5cd3      	ldrb	r3, [r2, r3]
 80021d2:	2b2d      	cmp	r3, #45	; 0x2d
 80021d4:	d10d      	bne.n	80021f2 <HAL_UART_RxCpltCallback+0xbca>
 80021d6:	4b51      	ldr	r3, [pc, #324]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 80021d8:	681b      	ldr	r3, [r3, #0]
 80021da:	3302      	adds	r3, #2
 80021dc:	4a4e      	ldr	r2, [pc, #312]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 80021de:	5cd3      	ldrb	r3, [r2, r3]
 80021e0:	2b2e      	cmp	r3, #46	; 0x2e
 80021e2:	d106      	bne.n	80021f2 <HAL_UART_RxCpltCallback+0xbca>
 80021e4:	4b4d      	ldr	r3, [pc, #308]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 80021e6:	681b      	ldr	r3, [r3, #0]
 80021e8:	3303      	adds	r3, #3
 80021ea:	4a4b      	ldr	r2, [pc, #300]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 80021ec:	5cd3      	ldrb	r3, [r2, r3]
 80021ee:	2b2d      	cmp	r3, #45	; 0x2d
 80021f0:	d039      	beq.n	8002266 <HAL_UART_RxCpltCallback+0xc3e>
        											   ||(uRx_Data[k]=='-'&&uRx_Data[k+1]=='-'&&uRx_Data[k+2]=='-'&&uRx_Data[k+3]=='.')
 80021f2:	4b4a      	ldr	r3, [pc, #296]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 80021f4:	681b      	ldr	r3, [r3, #0]
 80021f6:	4a48      	ldr	r2, [pc, #288]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 80021f8:	5cd3      	ldrb	r3, [r2, r3]
 80021fa:	2b2d      	cmp	r3, #45	; 0x2d
 80021fc:	d114      	bne.n	8002228 <HAL_UART_RxCpltCallback+0xc00>
 80021fe:	4b47      	ldr	r3, [pc, #284]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 8002200:	681b      	ldr	r3, [r3, #0]
 8002202:	3301      	adds	r3, #1
 8002204:	4a44      	ldr	r2, [pc, #272]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 8002206:	5cd3      	ldrb	r3, [r2, r3]
 8002208:	2b2d      	cmp	r3, #45	; 0x2d
 800220a:	d10d      	bne.n	8002228 <HAL_UART_RxCpltCallback+0xc00>
 800220c:	4b43      	ldr	r3, [pc, #268]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 800220e:	681b      	ldr	r3, [r3, #0]
 8002210:	3302      	adds	r3, #2
 8002212:	4a41      	ldr	r2, [pc, #260]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 8002214:	5cd3      	ldrb	r3, [r2, r3]
 8002216:	2b2d      	cmp	r3, #45	; 0x2d
 8002218:	d106      	bne.n	8002228 <HAL_UART_RxCpltCallback+0xc00>
 800221a:	4b40      	ldr	r3, [pc, #256]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	3303      	adds	r3, #3
 8002220:	4a3d      	ldr	r2, [pc, #244]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 8002222:	5cd3      	ldrb	r3, [r2, r3]
 8002224:	2b2e      	cmp	r3, #46	; 0x2e
 8002226:	d01e      	beq.n	8002266 <HAL_UART_RxCpltCallback+0xc3e>
        											   ||(uRx_Data[k]=='-'&&uRx_Data[k+1]=='-'&&uRx_Data[k+2]=='-'&&uRx_Data[k+3]=='-')))){
 8002228:	4b3c      	ldr	r3, [pc, #240]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	4a3a      	ldr	r2, [pc, #232]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 800222e:	5cd3      	ldrb	r3, [r2, r3]
 8002230:	2b2d      	cmp	r3, #45	; 0x2d
 8002232:	f040 80b0 	bne.w	8002396 <HAL_UART_RxCpltCallback+0xd6e>
 8002236:	4b39      	ldr	r3, [pc, #228]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	3301      	adds	r3, #1
 800223c:	4a36      	ldr	r2, [pc, #216]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 800223e:	5cd3      	ldrb	r3, [r2, r3]
 8002240:	2b2d      	cmp	r3, #45	; 0x2d
 8002242:	f040 80a8 	bne.w	8002396 <HAL_UART_RxCpltCallback+0xd6e>
 8002246:	4b35      	ldr	r3, [pc, #212]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 8002248:	681b      	ldr	r3, [r3, #0]
 800224a:	3302      	adds	r3, #2
 800224c:	4a32      	ldr	r2, [pc, #200]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 800224e:	5cd3      	ldrb	r3, [r2, r3]
 8002250:	2b2d      	cmp	r3, #45	; 0x2d
 8002252:	f040 80a0 	bne.w	8002396 <HAL_UART_RxCpltCallback+0xd6e>
 8002256:	4b31      	ldr	r3, [pc, #196]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 8002258:	681b      	ldr	r3, [r3, #0]
 800225a:	3303      	adds	r3, #3
 800225c:	4a2e      	ldr	r2, [pc, #184]	; (8002318 <HAL_UART_RxCpltCallback+0xcf0>)
 800225e:	5cd3      	ldrb	r3, [r2, r3]
 8002260:	2b2d      	cmp	r3, #45	; 0x2d
 8002262:	f040 8098 	bne.w	8002396 <HAL_UART_RxCpltCallback+0xd6e>
                        	 	        		    uRx_Data1[uLength1]='d';
 8002266:	4b2e      	ldr	r3, [pc, #184]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 8002268:	781b      	ldrb	r3, [r3, #0]
 800226a:	461a      	mov	r2, r3
 800226c:	4b2d      	ldr	r3, [pc, #180]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 800226e:	2164      	movs	r1, #100	; 0x64
 8002270:	5499      	strb	r1, [r3, r2]
                           	 	        	    	uRx_Data1[uLength1+1]='e';
 8002272:	4b2b      	ldr	r3, [pc, #172]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 8002274:	781b      	ldrb	r3, [r3, #0]
 8002276:	3301      	adds	r3, #1
 8002278:	4a2a      	ldr	r2, [pc, #168]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 800227a:	2165      	movs	r1, #101	; 0x65
 800227c:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[uLength1+2]='c';
 800227e:	4b28      	ldr	r3, [pc, #160]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 8002280:	781b      	ldrb	r3, [r3, #0]
 8002282:	3302      	adds	r3, #2
 8002284:	4a27      	ldr	r2, [pc, #156]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 8002286:	2163      	movs	r1, #99	; 0x63
 8002288:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[uLength1+3]='o';
 800228a:	4b25      	ldr	r3, [pc, #148]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 800228c:	781b      	ldrb	r3, [r3, #0]
 800228e:	3303      	adds	r3, #3
 8002290:	4a24      	ldr	r2, [pc, #144]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 8002292:	216f      	movs	r1, #111	; 0x6f
 8002294:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[uLength1+4]='d';
 8002296:	4b22      	ldr	r3, [pc, #136]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 8002298:	781b      	ldrb	r3, [r3, #0]
 800229a:	3304      	adds	r3, #4
 800229c:	4a21      	ldr	r2, [pc, #132]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 800229e:	2164      	movs	r1, #100	; 0x64
 80022a0:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[uLength1+5]='e';
 80022a2:	4b1f      	ldr	r3, [pc, #124]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 80022a4:	781b      	ldrb	r3, [r3, #0]
 80022a6:	3305      	adds	r3, #5
 80022a8:	4a1e      	ldr	r2, [pc, #120]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 80022aa:	2165      	movs	r1, #101	; 0x65
 80022ac:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[uLength1+6]=' ';
 80022ae:	4b1c      	ldr	r3, [pc, #112]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 80022b0:	781b      	ldrb	r3, [r3, #0]
 80022b2:	3306      	adds	r3, #6
 80022b4:	4a1b      	ldr	r2, [pc, #108]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 80022b6:	2120      	movs	r1, #32
 80022b8:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[uLength1+7]='E';
 80022ba:	4b19      	ldr	r3, [pc, #100]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 80022bc:	781b      	ldrb	r3, [r3, #0]
 80022be:	3307      	adds	r3, #7
 80022c0:	4a18      	ldr	r2, [pc, #96]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 80022c2:	2145      	movs	r1, #69	; 0x45
 80022c4:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[uLength1+8]='r';
 80022c6:	4b16      	ldr	r3, [pc, #88]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 80022c8:	781b      	ldrb	r3, [r3, #0]
 80022ca:	3308      	adds	r3, #8
 80022cc:	4a15      	ldr	r2, [pc, #84]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 80022ce:	2172      	movs	r1, #114	; 0x72
 80022d0:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[uLength1+9]='r';
 80022d2:	4b13      	ldr	r3, [pc, #76]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 80022d4:	781b      	ldrb	r3, [r3, #0]
 80022d6:	3309      	adds	r3, #9
 80022d8:	4a12      	ldr	r2, [pc, #72]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 80022da:	2172      	movs	r1, #114	; 0x72
 80022dc:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[uLength1+10]='o';
 80022de:	4b10      	ldr	r3, [pc, #64]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 80022e0:	781b      	ldrb	r3, [r3, #0]
 80022e2:	330a      	adds	r3, #10
 80022e4:	4a0f      	ldr	r2, [pc, #60]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 80022e6:	216f      	movs	r1, #111	; 0x6f
 80022e8:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[uLength1+11]='r';
 80022ea:	4b0d      	ldr	r3, [pc, #52]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 80022ec:	781b      	ldrb	r3, [r3, #0]
 80022ee:	330b      	adds	r3, #11
 80022f0:	4a0c      	ldr	r2, [pc, #48]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 80022f2:	2172      	movs	r1, #114	; 0x72
 80022f4:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[uLength1+12]=':';
 80022f6:	4b0a      	ldr	r3, [pc, #40]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 80022f8:	781b      	ldrb	r3, [r3, #0]
 80022fa:	330c      	adds	r3, #12
 80022fc:	4a09      	ldr	r2, [pc, #36]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 80022fe:	213a      	movs	r1, #58	; 0x3a
 8002300:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	uRx_Data1[uLength1+13]=' ';
 8002302:	4b07      	ldr	r3, [pc, #28]	; (8002320 <HAL_UART_RxCpltCallback+0xcf8>)
 8002304:	781b      	ldrb	r3, [r3, #0]
 8002306:	330d      	adds	r3, #13
 8002308:	4a06      	ldr	r2, [pc, #24]	; (8002324 <HAL_UART_RxCpltCallback+0xcfc>)
 800230a:	2120      	movs	r1, #32
 800230c:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	for (int j=k;j<=i-1;j++){
 800230e:	4b03      	ldr	r3, [pc, #12]	; (800231c <HAL_UART_RxCpltCallback+0xcf4>)
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	63bb      	str	r3, [r7, #56]	; 0x38
 8002314:	e01b      	b.n	800234e <HAL_UART_RxCpltCallback+0xd26>
 8002316:	bf00      	nop
 8002318:	2000042c 	.word	0x2000042c
 800231c:	20001434 	.word	0x20001434
 8002320:	2000142d 	.word	0x2000142d
 8002324:	2000082c 	.word	0x2000082c
                             	 	        		  	uRx_Data1[uLength1+13+j-k+1]=uRx_Data[j];
 8002328:	4b90      	ldr	r3, [pc, #576]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 800232a:	781b      	ldrb	r3, [r3, #0]
 800232c:	f103 020d 	add.w	r2, r3, #13
 8002330:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002332:	441a      	add	r2, r3
 8002334:	4b8e      	ldr	r3, [pc, #568]	; (8002570 <HAL_UART_RxCpltCallback+0xf48>)
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	1ad3      	subs	r3, r2, r3
 800233a:	3301      	adds	r3, #1
 800233c:	498d      	ldr	r1, [pc, #564]	; (8002574 <HAL_UART_RxCpltCallback+0xf4c>)
 800233e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8002340:	440a      	add	r2, r1
 8002342:	7811      	ldrb	r1, [r2, #0]
 8002344:	4a8c      	ldr	r2, [pc, #560]	; (8002578 <HAL_UART_RxCpltCallback+0xf50>)
 8002346:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	for (int j=k;j<=i-1;j++){
 8002348:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800234a:	3301      	adds	r3, #1
 800234c:	63bb      	str	r3, [r7, #56]	; 0x38
 800234e:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8002350:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002352:	429a      	cmp	r2, r3
 8002354:	dce8      	bgt.n	8002328 <HAL_UART_RxCpltCallback+0xd00>
                             	 	        	   }
                           	 	        	    	uLength1+=13+i-k+1;
 8002356:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002358:	b2da      	uxtb	r2, r3
 800235a:	4b85      	ldr	r3, [pc, #532]	; (8002570 <HAL_UART_RxCpltCallback+0xf48>)
 800235c:	681b      	ldr	r3, [r3, #0]
 800235e:	b2db      	uxtb	r3, r3
 8002360:	1ad3      	subs	r3, r2, r3
 8002362:	b2da      	uxtb	r2, r3
 8002364:	4b81      	ldr	r3, [pc, #516]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 8002366:	781b      	ldrb	r3, [r3, #0]
 8002368:	4413      	add	r3, r2
 800236a:	b2db      	uxtb	r3, r3
 800236c:	330e      	adds	r3, #14
 800236e:	b2da      	uxtb	r2, r3
 8002370:	4b7e      	ldr	r3, [pc, #504]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 8002372:	701a      	strb	r2, [r3, #0]
                           	 	        	    	k=i+1;
 8002374:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002376:	3301      	adds	r3, #1
 8002378:	4a7d      	ldr	r2, [pc, #500]	; (8002570 <HAL_UART_RxCpltCallback+0xf48>)
 800237a:	6013      	str	r3, [r2, #0]
                           	 	        	    uRx_Data2[h]='d';
 800237c:	4b7f      	ldr	r3, [pc, #508]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 800237e:	681b      	ldr	r3, [r3, #0]
 8002380:	4a7f      	ldr	r2, [pc, #508]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 8002382:	2164      	movs	r1, #100	; 0x64
 8002384:	54d1      	strb	r1, [r2, r3]
                           	 	        	    uLength2+=1;
 8002386:	4b7f      	ldr	r3, [pc, #508]	; (8002584 <HAL_UART_RxCpltCallback+0xf5c>)
 8002388:	781b      	ldrb	r3, [r3, #0]
 800238a:	3301      	adds	r3, #1
 800238c:	b2da      	uxtb	r2, r3
 800238e:	4b7d      	ldr	r3, [pc, #500]	; (8002584 <HAL_UART_RxCpltCallback+0xf5c>)
 8002390:	701a      	strb	r2, [r3, #0]
 8002392:	f000 be35 	b.w	8003000 <HAL_UART_RxCpltCallback+0x19d8>
                        	 	        	   }
                        	 	        	   else {
                        	 	        		   if (i-k==1){
 8002396:	4b76      	ldr	r3, [pc, #472]	; (8002570 <HAL_UART_RxCpltCallback+0xf48>)
 8002398:	681b      	ldr	r3, [r3, #0]
 800239a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800239c:	1ad3      	subs	r3, r2, r3
 800239e:	2b01      	cmp	r3, #1
 80023a0:	d14a      	bne.n	8002438 <HAL_UART_RxCpltCallback+0xe10>
                        	 	        			  if (uRx_Data[k]=='.') {
 80023a2:	4b73      	ldr	r3, [pc, #460]	; (8002570 <HAL_UART_RxCpltCallback+0xf48>)
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	4a73      	ldr	r2, [pc, #460]	; (8002574 <HAL_UART_RxCpltCallback+0xf4c>)
 80023a8:	5cd3      	ldrb	r3, [r2, r3]
 80023aa:	2b2e      	cmp	r3, #46	; 0x2e
 80023ac:	d11e      	bne.n	80023ec <HAL_UART_RxCpltCallback+0xdc4>
                        	 	        				  uRx_Data1[uLength1]='E';
 80023ae:	4b6f      	ldr	r3, [pc, #444]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 80023b0:	781b      	ldrb	r3, [r3, #0]
 80023b2:	461a      	mov	r2, r3
 80023b4:	4b70      	ldr	r3, [pc, #448]	; (8002578 <HAL_UART_RxCpltCallback+0xf50>)
 80023b6:	2145      	movs	r1, #69	; 0x45
 80023b8:	5499      	strb	r1, [r3, r2]
                        	 	        				  uLength1++; uRx_Data2[h]='.';
 80023ba:	4b6c      	ldr	r3, [pc, #432]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 80023bc:	781b      	ldrb	r3, [r3, #0]
 80023be:	3301      	adds	r3, #1
 80023c0:	b2da      	uxtb	r2, r3
 80023c2:	4b6a      	ldr	r3, [pc, #424]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 80023c4:	701a      	strb	r2, [r3, #0]
 80023c6:	4b6d      	ldr	r3, [pc, #436]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 80023c8:	681b      	ldr	r3, [r3, #0]
 80023ca:	4a6d      	ldr	r2, [pc, #436]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 80023cc:	212e      	movs	r1, #46	; 0x2e
 80023ce:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	uRx_Data2[h+1]='/';
 80023d0:	4b6a      	ldr	r3, [pc, #424]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 80023d2:	681b      	ldr	r3, [r3, #0]
 80023d4:	3301      	adds	r3, #1
 80023d6:	4a6a      	ldr	r2, [pc, #424]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 80023d8:	212f      	movs	r1, #47	; 0x2f
 80023da:	54d1      	strb	r1, [r2, r3]
                                   	 	        	    	//k=k+2;
                                   	 	        	        uLength2+=2;
 80023dc:	4b69      	ldr	r3, [pc, #420]	; (8002584 <HAL_UART_RxCpltCallback+0xf5c>)
 80023de:	781b      	ldrb	r3, [r3, #0]
 80023e0:	3302      	adds	r3, #2
 80023e2:	b2da      	uxtb	r2, r3
 80023e4:	4b67      	ldr	r3, [pc, #412]	; (8002584 <HAL_UART_RxCpltCallback+0xf5c>)
 80023e6:	701a      	strb	r2, [r3, #0]
 80023e8:	f000 be06 	b.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>

                        	 	        			  }
                        	 	        			  else if (uRx_Data[k]=='-') {
 80023ec:	4b60      	ldr	r3, [pc, #384]	; (8002570 <HAL_UART_RxCpltCallback+0xf48>)
 80023ee:	681b      	ldr	r3, [r3, #0]
 80023f0:	4a60      	ldr	r2, [pc, #384]	; (8002574 <HAL_UART_RxCpltCallback+0xf4c>)
 80023f2:	5cd3      	ldrb	r3, [r2, r3]
 80023f4:	2b2d      	cmp	r3, #45	; 0x2d
 80023f6:	f040 85ff 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                        	 	        				  uRx_Data1[uLength1]='T';
 80023fa:	4b5c      	ldr	r3, [pc, #368]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 80023fc:	781b      	ldrb	r3, [r3, #0]
 80023fe:	461a      	mov	r2, r3
 8002400:	4b5d      	ldr	r3, [pc, #372]	; (8002578 <HAL_UART_RxCpltCallback+0xf50>)
 8002402:	2154      	movs	r1, #84	; 0x54
 8002404:	5499      	strb	r1, [r3, r2]
                        	 	        				  uLength1++;uRx_Data2[h]='-';
 8002406:	4b59      	ldr	r3, [pc, #356]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 8002408:	781b      	ldrb	r3, [r3, #0]
 800240a:	3301      	adds	r3, #1
 800240c:	b2da      	uxtb	r2, r3
 800240e:	4b57      	ldr	r3, [pc, #348]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 8002410:	701a      	strb	r2, [r3, #0]
 8002412:	4b5a      	ldr	r3, [pc, #360]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	4a5a      	ldr	r2, [pc, #360]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 8002418:	212d      	movs	r1, #45	; 0x2d
 800241a:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+1]='/';
 800241c:	4b57      	ldr	r3, [pc, #348]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 800241e:	681b      	ldr	r3, [r3, #0]
 8002420:	3301      	adds	r3, #1
 8002422:	4a57      	ldr	r2, [pc, #348]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 8002424:	212f      	movs	r1, #47	; 0x2f
 8002426:	54d1      	strb	r1, [r2, r3]
                                   	 	        	    	//k=k+2;
                                   	 	        	        uLength2+=2;
 8002428:	4b56      	ldr	r3, [pc, #344]	; (8002584 <HAL_UART_RxCpltCallback+0xf5c>)
 800242a:	781b      	ldrb	r3, [r3, #0]
 800242c:	3302      	adds	r3, #2
 800242e:	b2da      	uxtb	r2, r3
 8002430:	4b54      	ldr	r3, [pc, #336]	; (8002584 <HAL_UART_RxCpltCallback+0xf5c>)
 8002432:	701a      	strb	r2, [r3, #0]
 8002434:	f000 bde0 	b.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                        	 	        			  }
                        	 	        		  }else if(i-k==2) {
 8002438:	4b4d      	ldr	r3, [pc, #308]	; (8002570 <HAL_UART_RxCpltCallback+0xf48>)
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800243e:	1ad3      	subs	r3, r2, r3
 8002440:	2b02      	cmp	r3, #2
 8002442:	f040 80ce 	bne.w	80025e2 <HAL_UART_RxCpltCallback+0xfba>
                        	 	        			 if (uRx_Data[k]=='.') {
 8002446:	4b4a      	ldr	r3, [pc, #296]	; (8002570 <HAL_UART_RxCpltCallback+0xf48>)
 8002448:	681b      	ldr	r3, [r3, #0]
 800244a:	4a4a      	ldr	r2, [pc, #296]	; (8002574 <HAL_UART_RxCpltCallback+0xf4c>)
 800244c:	5cd3      	ldrb	r3, [r2, r3]
 800244e:	2b2e      	cmp	r3, #46	; 0x2e
 8002450:	d158      	bne.n	8002504 <HAL_UART_RxCpltCallback+0xedc>
                        	 	        				  if (uRx_Data[k+1]=='.') {
 8002452:	4b47      	ldr	r3, [pc, #284]	; (8002570 <HAL_UART_RxCpltCallback+0xf48>)
 8002454:	681b      	ldr	r3, [r3, #0]
 8002456:	3301      	adds	r3, #1
 8002458:	4a46      	ldr	r2, [pc, #280]	; (8002574 <HAL_UART_RxCpltCallback+0xf4c>)
 800245a:	5cd3      	ldrb	r3, [r2, r3]
 800245c:	2b2e      	cmp	r3, #46	; 0x2e
 800245e:	d124      	bne.n	80024aa <HAL_UART_RxCpltCallback+0xe82>
                        	 	        				       uRx_Data1[uLength1]='I';
 8002460:	4b42      	ldr	r3, [pc, #264]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 8002462:	781b      	ldrb	r3, [r3, #0]
 8002464:	461a      	mov	r2, r3
 8002466:	4b44      	ldr	r3, [pc, #272]	; (8002578 <HAL_UART_RxCpltCallback+0xf50>)
 8002468:	2149      	movs	r1, #73	; 0x49
 800246a:	5499      	strb	r1, [r3, r2]
                        	 	        				       uLength1++;uRx_Data2[h]='.';
 800246c:	4b3f      	ldr	r3, [pc, #252]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 800246e:	781b      	ldrb	r3, [r3, #0]
 8002470:	3301      	adds	r3, #1
 8002472:	b2da      	uxtb	r2, r3
 8002474:	4b3d      	ldr	r3, [pc, #244]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 8002476:	701a      	strb	r2, [r3, #0]
 8002478:	4b40      	ldr	r3, [pc, #256]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	4a40      	ldr	r2, [pc, #256]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 800247e:	212e      	movs	r1, #46	; 0x2e
 8002480:	54d1      	strb	r1, [r2, r3]
                                     	 	        	    	uRx_Data2[h+1]='.';
 8002482:	4b3e      	ldr	r3, [pc, #248]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 8002484:	681b      	ldr	r3, [r3, #0]
 8002486:	3301      	adds	r3, #1
 8002488:	4a3d      	ldr	r2, [pc, #244]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 800248a:	212e      	movs	r1, #46	; 0x2e
 800248c:	54d1      	strb	r1, [r2, r3]
                                     	 	        	    	uRx_Data2[h+2]='/';
 800248e:	4b3b      	ldr	r3, [pc, #236]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 8002490:	681b      	ldr	r3, [r3, #0]
 8002492:	3302      	adds	r3, #2
 8002494:	4a3a      	ldr	r2, [pc, #232]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 8002496:	212f      	movs	r1, #47	; 0x2f
 8002498:	54d1      	strb	r1, [r2, r3]
                                        	 	        	    	//k=k+3;
                                        	 	        	        uLength2+=3;
 800249a:	4b3a      	ldr	r3, [pc, #232]	; (8002584 <HAL_UART_RxCpltCallback+0xf5c>)
 800249c:	781b      	ldrb	r3, [r3, #0]
 800249e:	3303      	adds	r3, #3
 80024a0:	b2da      	uxtb	r2, r3
 80024a2:	4b38      	ldr	r3, [pc, #224]	; (8002584 <HAL_UART_RxCpltCallback+0xf5c>)
 80024a4:	701a      	strb	r2, [r3, #0]
 80024a6:	f000 bda7 	b.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                        	 	        				   }
                        	 	        				 else if (uRx_Data[k+1]=='-') {
 80024aa:	4b31      	ldr	r3, [pc, #196]	; (8002570 <HAL_UART_RxCpltCallback+0xf48>)
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	3301      	adds	r3, #1
 80024b0:	4a30      	ldr	r2, [pc, #192]	; (8002574 <HAL_UART_RxCpltCallback+0xf4c>)
 80024b2:	5cd3      	ldrb	r3, [r2, r3]
 80024b4:	2b2d      	cmp	r3, #45	; 0x2d
 80024b6:	f040 859f 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                        	 	        				       uRx_Data1[uLength1]='A';
 80024ba:	4b2c      	ldr	r3, [pc, #176]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 80024bc:	781b      	ldrb	r3, [r3, #0]
 80024be:	461a      	mov	r2, r3
 80024c0:	4b2d      	ldr	r3, [pc, #180]	; (8002578 <HAL_UART_RxCpltCallback+0xf50>)
 80024c2:	2141      	movs	r1, #65	; 0x41
 80024c4:	5499      	strb	r1, [r3, r2]
                        	 	        				       uLength1++;
 80024c6:	4b29      	ldr	r3, [pc, #164]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 80024c8:	781b      	ldrb	r3, [r3, #0]
 80024ca:	3301      	adds	r3, #1
 80024cc:	b2da      	uxtb	r2, r3
 80024ce:	4b27      	ldr	r3, [pc, #156]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 80024d0:	701a      	strb	r2, [r3, #0]
                        	 	        				       uRx_Data2[h]='.';
 80024d2:	4b2a      	ldr	r3, [pc, #168]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	4a2a      	ldr	r2, [pc, #168]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 80024d8:	212e      	movs	r1, #46	; 0x2e
 80024da:	54d1      	strb	r1, [r2, r3]
                                   	 	        	    	  uRx_Data2[h+1]='-';
 80024dc:	4b27      	ldr	r3, [pc, #156]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	3301      	adds	r3, #1
 80024e2:	4a27      	ldr	r2, [pc, #156]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 80024e4:	212d      	movs	r1, #45	; 0x2d
 80024e6:	54d1      	strb	r1, [r2, r3]
                                   	 	        	    	  uRx_Data2[h+2]='/';
 80024e8:	4b24      	ldr	r3, [pc, #144]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	3302      	adds	r3, #2
 80024ee:	4a24      	ldr	r2, [pc, #144]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 80024f0:	212f      	movs	r1, #47	; 0x2f
 80024f2:	54d1      	strb	r1, [r2, r3]
                                   	 	        	    	//k=k+3;
                                   	 	        	        uLength2+=3;
 80024f4:	4b23      	ldr	r3, [pc, #140]	; (8002584 <HAL_UART_RxCpltCallback+0xf5c>)
 80024f6:	781b      	ldrb	r3, [r3, #0]
 80024f8:	3303      	adds	r3, #3
 80024fa:	b2da      	uxtb	r2, r3
 80024fc:	4b21      	ldr	r3, [pc, #132]	; (8002584 <HAL_UART_RxCpltCallback+0xf5c>)
 80024fe:	701a      	strb	r2, [r3, #0]
 8002500:	f000 bd7a 	b.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>

                        	 	        				   }

                        	 	        			  }
                        	 	        			 else if (uRx_Data[k]=='-') {
 8002504:	4b1a      	ldr	r3, [pc, #104]	; (8002570 <HAL_UART_RxCpltCallback+0xf48>)
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	4a1a      	ldr	r2, [pc, #104]	; (8002574 <HAL_UART_RxCpltCallback+0xf4c>)
 800250a:	5cd3      	ldrb	r3, [r2, r3]
 800250c:	2b2d      	cmp	r3, #45	; 0x2d
 800250e:	f040 8573 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                        	 	        				  if (uRx_Data[k+1]=='.') {
 8002512:	4b17      	ldr	r3, [pc, #92]	; (8002570 <HAL_UART_RxCpltCallback+0xf48>)
 8002514:	681b      	ldr	r3, [r3, #0]
 8002516:	3301      	adds	r3, #1
 8002518:	4a16      	ldr	r2, [pc, #88]	; (8002574 <HAL_UART_RxCpltCallback+0xf4c>)
 800251a:	5cd3      	ldrb	r3, [r2, r3]
 800251c:	2b2e      	cmp	r3, #46	; 0x2e
 800251e:	d133      	bne.n	8002588 <HAL_UART_RxCpltCallback+0xf60>
                        	 	        				        uRx_Data1[uLength1]='N';
 8002520:	4b12      	ldr	r3, [pc, #72]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 8002522:	781b      	ldrb	r3, [r3, #0]
 8002524:	461a      	mov	r2, r3
 8002526:	4b14      	ldr	r3, [pc, #80]	; (8002578 <HAL_UART_RxCpltCallback+0xf50>)
 8002528:	214e      	movs	r1, #78	; 0x4e
 800252a:	5499      	strb	r1, [r3, r2]
                        	 	        				        uLength1++;uRx_Data2[h]='-';
 800252c:	4b0f      	ldr	r3, [pc, #60]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 800252e:	781b      	ldrb	r3, [r3, #0]
 8002530:	3301      	adds	r3, #1
 8002532:	b2da      	uxtb	r2, r3
 8002534:	4b0d      	ldr	r3, [pc, #52]	; (800256c <HAL_UART_RxCpltCallback+0xf44>)
 8002536:	701a      	strb	r2, [r3, #0]
 8002538:	4b10      	ldr	r3, [pc, #64]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	4a10      	ldr	r2, [pc, #64]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 800253e:	212d      	movs	r1, #45	; 0x2d
 8002540:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+1]='.';
 8002542:	4b0e      	ldr	r3, [pc, #56]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	3301      	adds	r3, #1
 8002548:	4a0d      	ldr	r2, [pc, #52]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 800254a:	212e      	movs	r1, #46	; 0x2e
 800254c:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+2]='/';
 800254e:	4b0b      	ldr	r3, [pc, #44]	; (800257c <HAL_UART_RxCpltCallback+0xf54>)
 8002550:	681b      	ldr	r3, [r3, #0]
 8002552:	3302      	adds	r3, #2
 8002554:	4a0a      	ldr	r2, [pc, #40]	; (8002580 <HAL_UART_RxCpltCallback+0xf58>)
 8002556:	212f      	movs	r1, #47	; 0x2f
 8002558:	54d1      	strb	r1, [r2, r3]
                                         	 	        	    	//k=k+3;
                                         	 	        	        uLength2+=3;
 800255a:	4b0a      	ldr	r3, [pc, #40]	; (8002584 <HAL_UART_RxCpltCallback+0xf5c>)
 800255c:	781b      	ldrb	r3, [r3, #0]
 800255e:	3303      	adds	r3, #3
 8002560:	b2da      	uxtb	r2, r3
 8002562:	4b08      	ldr	r3, [pc, #32]	; (8002584 <HAL_UART_RxCpltCallback+0xf5c>)
 8002564:	701a      	strb	r2, [r3, #0]
 8002566:	f000 bd47 	b.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
 800256a:	bf00      	nop
 800256c:	2000142d 	.word	0x2000142d
 8002570:	20001434 	.word	0x20001434
 8002574:	2000042c 	.word	0x2000042c
 8002578:	2000082c 	.word	0x2000082c
 800257c:	20001438 	.word	0x20001438
 8002580:	20000c2c 	.word	0x20000c2c
 8002584:	2000142e 	.word	0x2000142e
                        	 	        				  }
                        	 	        				  else if (uRx_Data[k+1]=='-') {
 8002588:	4b89      	ldr	r3, [pc, #548]	; (80027b0 <HAL_UART_RxCpltCallback+0x1188>)
 800258a:	681b      	ldr	r3, [r3, #0]
 800258c:	3301      	adds	r3, #1
 800258e:	4a89      	ldr	r2, [pc, #548]	; (80027b4 <HAL_UART_RxCpltCallback+0x118c>)
 8002590:	5cd3      	ldrb	r3, [r2, r3]
 8002592:	2b2d      	cmp	r3, #45	; 0x2d
 8002594:	f040 8530 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                        	 	        				        uRx_Data1[uLength1]='M';
 8002598:	4b87      	ldr	r3, [pc, #540]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 800259a:	781b      	ldrb	r3, [r3, #0]
 800259c:	461a      	mov	r2, r3
 800259e:	4b87      	ldr	r3, [pc, #540]	; (80027bc <HAL_UART_RxCpltCallback+0x1194>)
 80025a0:	214d      	movs	r1, #77	; 0x4d
 80025a2:	5499      	strb	r1, [r3, r2]
                        	 	        				        uLength1++;uRx_Data2[h]='-';
 80025a4:	4b84      	ldr	r3, [pc, #528]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 80025a6:	781b      	ldrb	r3, [r3, #0]
 80025a8:	3301      	adds	r3, #1
 80025aa:	b2da      	uxtb	r2, r3
 80025ac:	4b82      	ldr	r3, [pc, #520]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 80025ae:	701a      	strb	r2, [r3, #0]
 80025b0:	4b83      	ldr	r3, [pc, #524]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 80025b2:	681b      	ldr	r3, [r3, #0]
 80025b4:	4a83      	ldr	r2, [pc, #524]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 80025b6:	212d      	movs	r1, #45	; 0x2d
 80025b8:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+1]='-';
 80025ba:	4b81      	ldr	r3, [pc, #516]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 80025bc:	681b      	ldr	r3, [r3, #0]
 80025be:	3301      	adds	r3, #1
 80025c0:	4a80      	ldr	r2, [pc, #512]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 80025c2:	212d      	movs	r1, #45	; 0x2d
 80025c4:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+2]='/';
 80025c6:	4b7e      	ldr	r3, [pc, #504]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 80025c8:	681b      	ldr	r3, [r3, #0]
 80025ca:	3302      	adds	r3, #2
 80025cc:	4a7d      	ldr	r2, [pc, #500]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 80025ce:	212f      	movs	r1, #47	; 0x2f
 80025d0:	54d1      	strb	r1, [r2, r3]
                                         	 	        	    	//k=k+3;
                                         	 	        	        uLength2+=3;
 80025d2:	4b7d      	ldr	r3, [pc, #500]	; (80027c8 <HAL_UART_RxCpltCallback+0x11a0>)
 80025d4:	781b      	ldrb	r3, [r3, #0]
 80025d6:	3303      	adds	r3, #3
 80025d8:	b2da      	uxtb	r2, r3
 80025da:	4b7b      	ldr	r3, [pc, #492]	; (80027c8 <HAL_UART_RxCpltCallback+0x11a0>)
 80025dc:	701a      	strb	r2, [r3, #0]
 80025de:	f000 bd0b 	b.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                        	 	        				  }

                        	 	        			}

                        	 	        		  }else if (i-k==3){
 80025e2:	4b73      	ldr	r3, [pc, #460]	; (80027b0 <HAL_UART_RxCpltCallback+0x1188>)
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80025e8:	1ad3      	subs	r3, r2, r3
 80025ea:	2b03      	cmp	r3, #3
 80025ec:	f040 81ca 	bne.w	8002984 <HAL_UART_RxCpltCallback+0x135c>
                        	 	        	     if (uRx_Data[k]=='.') {
 80025f0:	4b6f      	ldr	r3, [pc, #444]	; (80027b0 <HAL_UART_RxCpltCallback+0x1188>)
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	4a6f      	ldr	r2, [pc, #444]	; (80027b4 <HAL_UART_RxCpltCallback+0x118c>)
 80025f6:	5cd3      	ldrb	r3, [r2, r3]
 80025f8:	2b2e      	cmp	r3, #46	; 0x2e
 80025fa:	f040 80e7 	bne.w	80027cc <HAL_UART_RxCpltCallback+0x11a4>
                    	 	        				  if (uRx_Data[k+1]=='.') {
 80025fe:	4b6c      	ldr	r3, [pc, #432]	; (80027b0 <HAL_UART_RxCpltCallback+0x1188>)
 8002600:	681b      	ldr	r3, [r3, #0]
 8002602:	3301      	adds	r3, #1
 8002604:	4a6b      	ldr	r2, [pc, #428]	; (80027b4 <HAL_UART_RxCpltCallback+0x118c>)
 8002606:	5cd3      	ldrb	r3, [r2, r3]
 8002608:	2b2e      	cmp	r3, #46	; 0x2e
 800260a:	d164      	bne.n	80026d6 <HAL_UART_RxCpltCallback+0x10ae>
                    	 	        					  if (uRx_Data[k+2]=='.') {
 800260c:	4b68      	ldr	r3, [pc, #416]	; (80027b0 <HAL_UART_RxCpltCallback+0x1188>)
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	3302      	adds	r3, #2
 8002612:	4a68      	ldr	r2, [pc, #416]	; (80027b4 <HAL_UART_RxCpltCallback+0x118c>)
 8002614:	5cd3      	ldrb	r3, [r2, r3]
 8002616:	2b2e      	cmp	r3, #46	; 0x2e
 8002618:	d12a      	bne.n	8002670 <HAL_UART_RxCpltCallback+0x1048>
                   	 	        				       uRx_Data1[uLength1]='S';
 800261a:	4b67      	ldr	r3, [pc, #412]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 800261c:	781b      	ldrb	r3, [r3, #0]
 800261e:	461a      	mov	r2, r3
 8002620:	4b66      	ldr	r3, [pc, #408]	; (80027bc <HAL_UART_RxCpltCallback+0x1194>)
 8002622:	2153      	movs	r1, #83	; 0x53
 8002624:	5499      	strb	r1, [r3, r2]
                   	 	        				       uLength1++; uRx_Data2[h]='.';
 8002626:	4b64      	ldr	r3, [pc, #400]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 8002628:	781b      	ldrb	r3, [r3, #0]
 800262a:	3301      	adds	r3, #1
 800262c:	b2da      	uxtb	r2, r3
 800262e:	4b62      	ldr	r3, [pc, #392]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 8002630:	701a      	strb	r2, [r3, #0]
 8002632:	4b63      	ldr	r3, [pc, #396]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	4a63      	ldr	r2, [pc, #396]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 8002638:	212e      	movs	r1, #46	; 0x2e
 800263a:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+1]='.';
 800263c:	4b60      	ldr	r3, [pc, #384]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	3301      	adds	r3, #1
 8002642:	4a60      	ldr	r2, [pc, #384]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 8002644:	212e      	movs	r1, #46	; 0x2e
 8002646:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+2]='.';
 8002648:	4b5d      	ldr	r3, [pc, #372]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	3302      	adds	r3, #2
 800264e:	4a5d      	ldr	r2, [pc, #372]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 8002650:	212e      	movs	r1, #46	; 0x2e
 8002652:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+3]='/';
 8002654:	4b5a      	ldr	r3, [pc, #360]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 8002656:	681b      	ldr	r3, [r3, #0]
 8002658:	3303      	adds	r3, #3
 800265a:	4a5a      	ldr	r2, [pc, #360]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 800265c:	212f      	movs	r1, #47	; 0x2f
 800265e:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+4;
                                	 	        	        uLength2+=4;
 8002660:	4b59      	ldr	r3, [pc, #356]	; (80027c8 <HAL_UART_RxCpltCallback+0x11a0>)
 8002662:	781b      	ldrb	r3, [r3, #0]
 8002664:	3304      	adds	r3, #4
 8002666:	b2da      	uxtb	r2, r3
 8002668:	4b57      	ldr	r3, [pc, #348]	; (80027c8 <HAL_UART_RxCpltCallback+0x11a0>)
 800266a:	701a      	strb	r2, [r3, #0]
 800266c:	f000 bcc4 	b.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                   	 	        				   }
                   	 	        				 else if (uRx_Data[k+2]=='-') {
 8002670:	4b4f      	ldr	r3, [pc, #316]	; (80027b0 <HAL_UART_RxCpltCallback+0x1188>)
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	3302      	adds	r3, #2
 8002676:	4a4f      	ldr	r2, [pc, #316]	; (80027b4 <HAL_UART_RxCpltCallback+0x118c>)
 8002678:	5cd3      	ldrb	r3, [r2, r3]
 800267a:	2b2d      	cmp	r3, #45	; 0x2d
 800267c:	f040 84bc 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                   	 	        				       uRx_Data1[uLength1]='U';
 8002680:	4b4d      	ldr	r3, [pc, #308]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 8002682:	781b      	ldrb	r3, [r3, #0]
 8002684:	461a      	mov	r2, r3
 8002686:	4b4d      	ldr	r3, [pc, #308]	; (80027bc <HAL_UART_RxCpltCallback+0x1194>)
 8002688:	2155      	movs	r1, #85	; 0x55
 800268a:	5499      	strb	r1, [r3, r2]
                   	 	        				       uLength1++;uRx_Data2[h]='.';
 800268c:	4b4a      	ldr	r3, [pc, #296]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 800268e:	781b      	ldrb	r3, [r3, #0]
 8002690:	3301      	adds	r3, #1
 8002692:	b2da      	uxtb	r2, r3
 8002694:	4b48      	ldr	r3, [pc, #288]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 8002696:	701a      	strb	r2, [r3, #0]
 8002698:	4b49      	ldr	r3, [pc, #292]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 800269a:	681b      	ldr	r3, [r3, #0]
 800269c:	4a49      	ldr	r2, [pc, #292]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 800269e:	212e      	movs	r1, #46	; 0x2e
 80026a0:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+1]='.';
 80026a2:	4b47      	ldr	r3, [pc, #284]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 80026a4:	681b      	ldr	r3, [r3, #0]
 80026a6:	3301      	adds	r3, #1
 80026a8:	4a46      	ldr	r2, [pc, #280]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 80026aa:	212e      	movs	r1, #46	; 0x2e
 80026ac:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+2]='-';
 80026ae:	4b44      	ldr	r3, [pc, #272]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 80026b0:	681b      	ldr	r3, [r3, #0]
 80026b2:	3302      	adds	r3, #2
 80026b4:	4a43      	ldr	r2, [pc, #268]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 80026b6:	212d      	movs	r1, #45	; 0x2d
 80026b8:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+3]='/';
 80026ba:	4b41      	ldr	r3, [pc, #260]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 80026bc:	681b      	ldr	r3, [r3, #0]
 80026be:	3303      	adds	r3, #3
 80026c0:	4a40      	ldr	r2, [pc, #256]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 80026c2:	212f      	movs	r1, #47	; 0x2f
 80026c4:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+4;
                                	 	        	        uLength2+=4;
 80026c6:	4b40      	ldr	r3, [pc, #256]	; (80027c8 <HAL_UART_RxCpltCallback+0x11a0>)
 80026c8:	781b      	ldrb	r3, [r3, #0]
 80026ca:	3304      	adds	r3, #4
 80026cc:	b2da      	uxtb	r2, r3
 80026ce:	4b3e      	ldr	r3, [pc, #248]	; (80027c8 <HAL_UART_RxCpltCallback+0x11a0>)
 80026d0:	701a      	strb	r2, [r3, #0]
 80026d2:	f000 bc91 	b.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                   	 	        				   }

                    	 	        				   }
                    	 	        				 else if (uRx_Data[k+1]=='-') {
 80026d6:	4b36      	ldr	r3, [pc, #216]	; (80027b0 <HAL_UART_RxCpltCallback+0x1188>)
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	3301      	adds	r3, #1
 80026dc:	4a35      	ldr	r2, [pc, #212]	; (80027b4 <HAL_UART_RxCpltCallback+0x118c>)
 80026de:	5cd3      	ldrb	r3, [r2, r3]
 80026e0:	2b2d      	cmp	r3, #45	; 0x2d
 80026e2:	f040 8489 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                    	 	        					 if (uRx_Data[k+2]=='.') {
 80026e6:	4b32      	ldr	r3, [pc, #200]	; (80027b0 <HAL_UART_RxCpltCallback+0x1188>)
 80026e8:	681b      	ldr	r3, [r3, #0]
 80026ea:	3302      	adds	r3, #2
 80026ec:	4a31      	ldr	r2, [pc, #196]	; (80027b4 <HAL_UART_RxCpltCallback+0x118c>)
 80026ee:	5cd3      	ldrb	r3, [r2, r3]
 80026f0:	2b2e      	cmp	r3, #46	; 0x2e
 80026f2:	d12a      	bne.n	800274a <HAL_UART_RxCpltCallback+0x1122>
                  	 	        				       uRx_Data1[uLength1]='R';
 80026f4:	4b30      	ldr	r3, [pc, #192]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 80026f6:	781b      	ldrb	r3, [r3, #0]
 80026f8:	461a      	mov	r2, r3
 80026fa:	4b30      	ldr	r3, [pc, #192]	; (80027bc <HAL_UART_RxCpltCallback+0x1194>)
 80026fc:	2152      	movs	r1, #82	; 0x52
 80026fe:	5499      	strb	r1, [r3, r2]
                  	 	        				       uLength1++;uRx_Data2[h]='.';
 8002700:	4b2d      	ldr	r3, [pc, #180]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 8002702:	781b      	ldrb	r3, [r3, #0]
 8002704:	3301      	adds	r3, #1
 8002706:	b2da      	uxtb	r2, r3
 8002708:	4b2b      	ldr	r3, [pc, #172]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 800270a:	701a      	strb	r2, [r3, #0]
 800270c:	4b2c      	ldr	r3, [pc, #176]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	4a2c      	ldr	r2, [pc, #176]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 8002712:	212e      	movs	r1, #46	; 0x2e
 8002714:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+1]='-';
 8002716:	4b2a      	ldr	r3, [pc, #168]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	3301      	adds	r3, #1
 800271c:	4a29      	ldr	r2, [pc, #164]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 800271e:	212d      	movs	r1, #45	; 0x2d
 8002720:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+2]='.';
 8002722:	4b27      	ldr	r3, [pc, #156]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 8002724:	681b      	ldr	r3, [r3, #0]
 8002726:	3302      	adds	r3, #2
 8002728:	4a26      	ldr	r2, [pc, #152]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 800272a:	212e      	movs	r1, #46	; 0x2e
 800272c:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+3]='/';
 800272e:	4b24      	ldr	r3, [pc, #144]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 8002730:	681b      	ldr	r3, [r3, #0]
 8002732:	3303      	adds	r3, #3
 8002734:	4a23      	ldr	r2, [pc, #140]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 8002736:	212f      	movs	r1, #47	; 0x2f
 8002738:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+4;
                                	 	        	        uLength2+=4;
 800273a:	4b23      	ldr	r3, [pc, #140]	; (80027c8 <HAL_UART_RxCpltCallback+0x11a0>)
 800273c:	781b      	ldrb	r3, [r3, #0]
 800273e:	3304      	adds	r3, #4
 8002740:	b2da      	uxtb	r2, r3
 8002742:	4b21      	ldr	r3, [pc, #132]	; (80027c8 <HAL_UART_RxCpltCallback+0x11a0>)
 8002744:	701a      	strb	r2, [r3, #0]
 8002746:	f000 bc57 	b.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                  	 	        				   }
                  	 	        				 else if (uRx_Data[k+2]=='-') {
 800274a:	4b19      	ldr	r3, [pc, #100]	; (80027b0 <HAL_UART_RxCpltCallback+0x1188>)
 800274c:	681b      	ldr	r3, [r3, #0]
 800274e:	3302      	adds	r3, #2
 8002750:	4a18      	ldr	r2, [pc, #96]	; (80027b4 <HAL_UART_RxCpltCallback+0x118c>)
 8002752:	5cd3      	ldrb	r3, [r2, r3]
 8002754:	2b2d      	cmp	r3, #45	; 0x2d
 8002756:	f040 844f 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                  	 	        				       uRx_Data1[uLength1]='W';
 800275a:	4b17      	ldr	r3, [pc, #92]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 800275c:	781b      	ldrb	r3, [r3, #0]
 800275e:	461a      	mov	r2, r3
 8002760:	4b16      	ldr	r3, [pc, #88]	; (80027bc <HAL_UART_RxCpltCallback+0x1194>)
 8002762:	2157      	movs	r1, #87	; 0x57
 8002764:	5499      	strb	r1, [r3, r2]
                  	 	        				       uLength1++;uRx_Data2[h]='.';
 8002766:	4b14      	ldr	r3, [pc, #80]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 8002768:	781b      	ldrb	r3, [r3, #0]
 800276a:	3301      	adds	r3, #1
 800276c:	b2da      	uxtb	r2, r3
 800276e:	4b12      	ldr	r3, [pc, #72]	; (80027b8 <HAL_UART_RxCpltCallback+0x1190>)
 8002770:	701a      	strb	r2, [r3, #0]
 8002772:	4b13      	ldr	r3, [pc, #76]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	4a13      	ldr	r2, [pc, #76]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 8002778:	212e      	movs	r1, #46	; 0x2e
 800277a:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+1]='-';
 800277c:	4b10      	ldr	r3, [pc, #64]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 800277e:	681b      	ldr	r3, [r3, #0]
 8002780:	3301      	adds	r3, #1
 8002782:	4a10      	ldr	r2, [pc, #64]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 8002784:	212d      	movs	r1, #45	; 0x2d
 8002786:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+2]='-';
 8002788:	4b0d      	ldr	r3, [pc, #52]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	3302      	adds	r3, #2
 800278e:	4a0d      	ldr	r2, [pc, #52]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 8002790:	212d      	movs	r1, #45	; 0x2d
 8002792:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+3]='/';
 8002794:	4b0a      	ldr	r3, [pc, #40]	; (80027c0 <HAL_UART_RxCpltCallback+0x1198>)
 8002796:	681b      	ldr	r3, [r3, #0]
 8002798:	3303      	adds	r3, #3
 800279a:	4a0a      	ldr	r2, [pc, #40]	; (80027c4 <HAL_UART_RxCpltCallback+0x119c>)
 800279c:	212f      	movs	r1, #47	; 0x2f
 800279e:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+4;
                                	 	        	        uLength2+=4;
 80027a0:	4b09      	ldr	r3, [pc, #36]	; (80027c8 <HAL_UART_RxCpltCallback+0x11a0>)
 80027a2:	781b      	ldrb	r3, [r3, #0]
 80027a4:	3304      	adds	r3, #4
 80027a6:	b2da      	uxtb	r2, r3
 80027a8:	4b07      	ldr	r3, [pc, #28]	; (80027c8 <HAL_UART_RxCpltCallback+0x11a0>)
 80027aa:	701a      	strb	r2, [r3, #0]
 80027ac:	f000 bc24 	b.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
 80027b0:	20001434 	.word	0x20001434
 80027b4:	2000042c 	.word	0x2000042c
 80027b8:	2000142d 	.word	0x2000142d
 80027bc:	2000082c 	.word	0x2000082c
 80027c0:	20001438 	.word	0x20001438
 80027c4:	20000c2c 	.word	0x20000c2c
 80027c8:	2000142e 	.word	0x2000142e
                  	 	        				   }

                    	 	        				   }

                    	 	        			  }
                    	 	        			 else if (uRx_Data[k]=='-') {
 80027cc:	4b97      	ldr	r3, [pc, #604]	; (8002a2c <HAL_UART_RxCpltCallback+0x1404>)
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	4a97      	ldr	r2, [pc, #604]	; (8002a30 <HAL_UART_RxCpltCallback+0x1408>)
 80027d2:	5cd3      	ldrb	r3, [r2, r3]
 80027d4:	2b2d      	cmp	r3, #45	; 0x2d
 80027d6:	f040 840f 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                    	 	        				  if (uRx_Data[k+1]=='.') {
 80027da:	4b94      	ldr	r3, [pc, #592]	; (8002a2c <HAL_UART_RxCpltCallback+0x1404>)
 80027dc:	681b      	ldr	r3, [r3, #0]
 80027de:	3301      	adds	r3, #1
 80027e0:	4a93      	ldr	r2, [pc, #588]	; (8002a30 <HAL_UART_RxCpltCallback+0x1408>)
 80027e2:	5cd3      	ldrb	r3, [r2, r3]
 80027e4:	2b2e      	cmp	r3, #46	; 0x2e
 80027e6:	d162      	bne.n	80028ae <HAL_UART_RxCpltCallback+0x1286>
                    	 	        					  if (uRx_Data[k+2]=='.') {
 80027e8:	4b90      	ldr	r3, [pc, #576]	; (8002a2c <HAL_UART_RxCpltCallback+0x1404>)
 80027ea:	681b      	ldr	r3, [r3, #0]
 80027ec:	3302      	adds	r3, #2
 80027ee:	4a90      	ldr	r2, [pc, #576]	; (8002a30 <HAL_UART_RxCpltCallback+0x1408>)
 80027f0:	5cd3      	ldrb	r3, [r2, r3]
 80027f2:	2b2e      	cmp	r3, #46	; 0x2e
 80027f4:	d129      	bne.n	800284a <HAL_UART_RxCpltCallback+0x1222>
                      	 	        				       uRx_Data1[uLength1]='D';
 80027f6:	4b8f      	ldr	r3, [pc, #572]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 80027f8:	781b      	ldrb	r3, [r3, #0]
 80027fa:	461a      	mov	r2, r3
 80027fc:	4b8e      	ldr	r3, [pc, #568]	; (8002a38 <HAL_UART_RxCpltCallback+0x1410>)
 80027fe:	2144      	movs	r1, #68	; 0x44
 8002800:	5499      	strb	r1, [r3, r2]
                      	 	        				       uLength1++;uRx_Data2[h]='-';
 8002802:	4b8c      	ldr	r3, [pc, #560]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 8002804:	781b      	ldrb	r3, [r3, #0]
 8002806:	3301      	adds	r3, #1
 8002808:	b2da      	uxtb	r2, r3
 800280a:	4b8a      	ldr	r3, [pc, #552]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 800280c:	701a      	strb	r2, [r3, #0]
 800280e:	4b8b      	ldr	r3, [pc, #556]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 8002810:	681b      	ldr	r3, [r3, #0]
 8002812:	4a8b      	ldr	r2, [pc, #556]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 8002814:	212d      	movs	r1, #45	; 0x2d
 8002816:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+1]='.';
 8002818:	4b88      	ldr	r3, [pc, #544]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	3301      	adds	r3, #1
 800281e:	4a88      	ldr	r2, [pc, #544]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 8002820:	212e      	movs	r1, #46	; 0x2e
 8002822:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+2]='.';
 8002824:	4b85      	ldr	r3, [pc, #532]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 8002826:	681b      	ldr	r3, [r3, #0]
 8002828:	3302      	adds	r3, #2
 800282a:	4a85      	ldr	r2, [pc, #532]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 800282c:	212e      	movs	r1, #46	; 0x2e
 800282e:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+3]='/';
 8002830:	4b82      	ldr	r3, [pc, #520]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	3303      	adds	r3, #3
 8002836:	4a82      	ldr	r2, [pc, #520]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 8002838:	212f      	movs	r1, #47	; 0x2f
 800283a:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+4;
                                    	 	        	        uLength2+=4;
 800283c:	4b81      	ldr	r3, [pc, #516]	; (8002a44 <HAL_UART_RxCpltCallback+0x141c>)
 800283e:	781b      	ldrb	r3, [r3, #0]
 8002840:	3304      	adds	r3, #4
 8002842:	b2da      	uxtb	r2, r3
 8002844:	4b7f      	ldr	r3, [pc, #508]	; (8002a44 <HAL_UART_RxCpltCallback+0x141c>)
 8002846:	701a      	strb	r2, [r3, #0]
 8002848:	e3d6      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                      	 	        				   }
                      	 	        				 else if (uRx_Data[k+2]=='-') {
 800284a:	4b78      	ldr	r3, [pc, #480]	; (8002a2c <HAL_UART_RxCpltCallback+0x1404>)
 800284c:	681b      	ldr	r3, [r3, #0]
 800284e:	3302      	adds	r3, #2
 8002850:	4a77      	ldr	r2, [pc, #476]	; (8002a30 <HAL_UART_RxCpltCallback+0x1408>)
 8002852:	5cd3      	ldrb	r3, [r2, r3]
 8002854:	2b2d      	cmp	r3, #45	; 0x2d
 8002856:	f040 83cf 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                      	 	        				       uRx_Data1[uLength1]='K';
 800285a:	4b76      	ldr	r3, [pc, #472]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 800285c:	781b      	ldrb	r3, [r3, #0]
 800285e:	461a      	mov	r2, r3
 8002860:	4b75      	ldr	r3, [pc, #468]	; (8002a38 <HAL_UART_RxCpltCallback+0x1410>)
 8002862:	214b      	movs	r1, #75	; 0x4b
 8002864:	5499      	strb	r1, [r3, r2]
                      	 	        				       uLength1++;uRx_Data2[h]='-';
 8002866:	4b73      	ldr	r3, [pc, #460]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 8002868:	781b      	ldrb	r3, [r3, #0]
 800286a:	3301      	adds	r3, #1
 800286c:	b2da      	uxtb	r2, r3
 800286e:	4b71      	ldr	r3, [pc, #452]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 8002870:	701a      	strb	r2, [r3, #0]
 8002872:	4b72      	ldr	r3, [pc, #456]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 8002874:	681b      	ldr	r3, [r3, #0]
 8002876:	4a72      	ldr	r2, [pc, #456]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 8002878:	212d      	movs	r1, #45	; 0x2d
 800287a:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+1]='.';
 800287c:	4b6f      	ldr	r3, [pc, #444]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 800287e:	681b      	ldr	r3, [r3, #0]
 8002880:	3301      	adds	r3, #1
 8002882:	4a6f      	ldr	r2, [pc, #444]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 8002884:	212e      	movs	r1, #46	; 0x2e
 8002886:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+2]='-';
 8002888:	4b6c      	ldr	r3, [pc, #432]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	3302      	adds	r3, #2
 800288e:	4a6c      	ldr	r2, [pc, #432]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 8002890:	212d      	movs	r1, #45	; 0x2d
 8002892:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+3]='/';
 8002894:	4b69      	ldr	r3, [pc, #420]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 8002896:	681b      	ldr	r3, [r3, #0]
 8002898:	3303      	adds	r3, #3
 800289a:	4a69      	ldr	r2, [pc, #420]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 800289c:	212f      	movs	r1, #47	; 0x2f
 800289e:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+4;
                                    	 	        	        uLength2+=4;
 80028a0:	4b68      	ldr	r3, [pc, #416]	; (8002a44 <HAL_UART_RxCpltCallback+0x141c>)
 80028a2:	781b      	ldrb	r3, [r3, #0]
 80028a4:	3304      	adds	r3, #4
 80028a6:	b2da      	uxtb	r2, r3
 80028a8:	4b66      	ldr	r3, [pc, #408]	; (8002a44 <HAL_UART_RxCpltCallback+0x141c>)
 80028aa:	701a      	strb	r2, [r3, #0]
 80028ac:	e3a4      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                      	 	        				   }

                    	 	        				  }
                    	 	        				  else if (uRx_Data[k+1]=='-') {
 80028ae:	4b5f      	ldr	r3, [pc, #380]	; (8002a2c <HAL_UART_RxCpltCallback+0x1404>)
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	3301      	adds	r3, #1
 80028b4:	4a5e      	ldr	r2, [pc, #376]	; (8002a30 <HAL_UART_RxCpltCallback+0x1408>)
 80028b6:	5cd3      	ldrb	r3, [r2, r3]
 80028b8:	2b2d      	cmp	r3, #45	; 0x2d
 80028ba:	f040 839d 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                    	 	        					  if (uRx_Data[k+2]=='.') {
 80028be:	4b5b      	ldr	r3, [pc, #364]	; (8002a2c <HAL_UART_RxCpltCallback+0x1404>)
 80028c0:	681b      	ldr	r3, [r3, #0]
 80028c2:	3302      	adds	r3, #2
 80028c4:	4a5a      	ldr	r2, [pc, #360]	; (8002a30 <HAL_UART_RxCpltCallback+0x1408>)
 80028c6:	5cd3      	ldrb	r3, [r2, r3]
 80028c8:	2b2e      	cmp	r3, #46	; 0x2e
 80028ca:	d129      	bne.n	8002920 <HAL_UART_RxCpltCallback+0x12f8>
                      	 	        				       uRx_Data1[uLength1]='G';
 80028cc:	4b59      	ldr	r3, [pc, #356]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 80028ce:	781b      	ldrb	r3, [r3, #0]
 80028d0:	461a      	mov	r2, r3
 80028d2:	4b59      	ldr	r3, [pc, #356]	; (8002a38 <HAL_UART_RxCpltCallback+0x1410>)
 80028d4:	2147      	movs	r1, #71	; 0x47
 80028d6:	5499      	strb	r1, [r3, r2]
                      	 	        				       uLength1++;uRx_Data2[h]='-';
 80028d8:	4b56      	ldr	r3, [pc, #344]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 80028da:	781b      	ldrb	r3, [r3, #0]
 80028dc:	3301      	adds	r3, #1
 80028de:	b2da      	uxtb	r2, r3
 80028e0:	4b54      	ldr	r3, [pc, #336]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 80028e2:	701a      	strb	r2, [r3, #0]
 80028e4:	4b55      	ldr	r3, [pc, #340]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 80028e6:	681b      	ldr	r3, [r3, #0]
 80028e8:	4a55      	ldr	r2, [pc, #340]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 80028ea:	212d      	movs	r1, #45	; 0x2d
 80028ec:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+1]='-';
 80028ee:	4b53      	ldr	r3, [pc, #332]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 80028f0:	681b      	ldr	r3, [r3, #0]
 80028f2:	3301      	adds	r3, #1
 80028f4:	4a52      	ldr	r2, [pc, #328]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 80028f6:	212d      	movs	r1, #45	; 0x2d
 80028f8:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+2]='.';
 80028fa:	4b50      	ldr	r3, [pc, #320]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 80028fc:	681b      	ldr	r3, [r3, #0]
 80028fe:	3302      	adds	r3, #2
 8002900:	4a4f      	ldr	r2, [pc, #316]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 8002902:	212e      	movs	r1, #46	; 0x2e
 8002904:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+3]='/';
 8002906:	4b4d      	ldr	r3, [pc, #308]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	3303      	adds	r3, #3
 800290c:	4a4c      	ldr	r2, [pc, #304]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 800290e:	212f      	movs	r1, #47	; 0x2f
 8002910:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+4;
                                    	 	        	        uLength2+=4;
 8002912:	4b4c      	ldr	r3, [pc, #304]	; (8002a44 <HAL_UART_RxCpltCallback+0x141c>)
 8002914:	781b      	ldrb	r3, [r3, #0]
 8002916:	3304      	adds	r3, #4
 8002918:	b2da      	uxtb	r2, r3
 800291a:	4b4a      	ldr	r3, [pc, #296]	; (8002a44 <HAL_UART_RxCpltCallback+0x141c>)
 800291c:	701a      	strb	r2, [r3, #0]
 800291e:	e36b      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                      	 	        				   }
                      	 	        				 else if (uRx_Data[k+2]=='-') {
 8002920:	4b42      	ldr	r3, [pc, #264]	; (8002a2c <HAL_UART_RxCpltCallback+0x1404>)
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	3302      	adds	r3, #2
 8002926:	4a42      	ldr	r2, [pc, #264]	; (8002a30 <HAL_UART_RxCpltCallback+0x1408>)
 8002928:	5cd3      	ldrb	r3, [r2, r3]
 800292a:	2b2d      	cmp	r3, #45	; 0x2d
 800292c:	f040 8364 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                      	 	        				       uRx_Data1[uLength1]='O';
 8002930:	4b40      	ldr	r3, [pc, #256]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 8002932:	781b      	ldrb	r3, [r3, #0]
 8002934:	461a      	mov	r2, r3
 8002936:	4b40      	ldr	r3, [pc, #256]	; (8002a38 <HAL_UART_RxCpltCallback+0x1410>)
 8002938:	214f      	movs	r1, #79	; 0x4f
 800293a:	5499      	strb	r1, [r3, r2]
                      	 	        				       uLength1++; uRx_Data2[h]='-';
 800293c:	4b3d      	ldr	r3, [pc, #244]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 800293e:	781b      	ldrb	r3, [r3, #0]
 8002940:	3301      	adds	r3, #1
 8002942:	b2da      	uxtb	r2, r3
 8002944:	4b3b      	ldr	r3, [pc, #236]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 8002946:	701a      	strb	r2, [r3, #0]
 8002948:	4b3c      	ldr	r3, [pc, #240]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	4a3c      	ldr	r2, [pc, #240]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 800294e:	212d      	movs	r1, #45	; 0x2d
 8002950:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+1]='-';
 8002952:	4b3a      	ldr	r3, [pc, #232]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	3301      	adds	r3, #1
 8002958:	4a39      	ldr	r2, [pc, #228]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 800295a:	212d      	movs	r1, #45	; 0x2d
 800295c:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+2]='-';
 800295e:	4b37      	ldr	r3, [pc, #220]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 8002960:	681b      	ldr	r3, [r3, #0]
 8002962:	3302      	adds	r3, #2
 8002964:	4a36      	ldr	r2, [pc, #216]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 8002966:	212d      	movs	r1, #45	; 0x2d
 8002968:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+3]='/';
 800296a:	4b34      	ldr	r3, [pc, #208]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 800296c:	681b      	ldr	r3, [r3, #0]
 800296e:	3303      	adds	r3, #3
 8002970:	4a33      	ldr	r2, [pc, #204]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 8002972:	212f      	movs	r1, #47	; 0x2f
 8002974:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+4;
                                    	 	        	        uLength2+=4;
 8002976:	4b33      	ldr	r3, [pc, #204]	; (8002a44 <HAL_UART_RxCpltCallback+0x141c>)
 8002978:	781b      	ldrb	r3, [r3, #0]
 800297a:	3304      	adds	r3, #4
 800297c:	b2da      	uxtb	r2, r3
 800297e:	4b31      	ldr	r3, [pc, #196]	; (8002a44 <HAL_UART_RxCpltCallback+0x141c>)
 8002980:	701a      	strb	r2, [r3, #0]
 8002982:	e339      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                    	 	        				  }

                    	 	        			}


                        	 	        		  }else if (i-k==4){
 8002984:	4b29      	ldr	r3, [pc, #164]	; (8002a2c <HAL_UART_RxCpltCallback+0x1404>)
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800298a:	1ad3      	subs	r3, r2, r3
 800298c:	2b04      	cmp	r3, #4
 800298e:	f040 8333 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>

                        	 	        		if (uRx_Data[k]=='.') {
 8002992:	4b26      	ldr	r3, [pc, #152]	; (8002a2c <HAL_UART_RxCpltCallback+0x1404>)
 8002994:	681b      	ldr	r3, [r3, #0]
 8002996:	4a26      	ldr	r2, [pc, #152]	; (8002a30 <HAL_UART_RxCpltCallback+0x1408>)
 8002998:	5cd3      	ldrb	r3, [r2, r3]
 800299a:	2b2e      	cmp	r3, #46	; 0x2e
 800299c:	f040 8198 	bne.w	8002cd0 <HAL_UART_RxCpltCallback+0x16a8>
                    	 	        				  if (uRx_Data[k+1]=='.') {
 80029a0:	4b22      	ldr	r3, [pc, #136]	; (8002a2c <HAL_UART_RxCpltCallback+0x1404>)
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	3301      	adds	r3, #1
 80029a6:	4a22      	ldr	r2, [pc, #136]	; (8002a30 <HAL_UART_RxCpltCallback+0x1408>)
 80029a8:	5cd3      	ldrb	r3, [r2, r3]
 80029aa:	2b2e      	cmp	r3, #46	; 0x2e
 80029ac:	f040 80c4 	bne.w	8002b38 <HAL_UART_RxCpltCallback+0x1510>
                    	 	        					  if (uRx_Data[k+2]=='.') {
 80029b0:	4b1e      	ldr	r3, [pc, #120]	; (8002a2c <HAL_UART_RxCpltCallback+0x1404>)
 80029b2:	681b      	ldr	r3, [r3, #0]
 80029b4:	3302      	adds	r3, #2
 80029b6:	4a1e      	ldr	r2, [pc, #120]	; (8002a30 <HAL_UART_RxCpltCallback+0x1408>)
 80029b8:	5cd3      	ldrb	r3, [r2, r3]
 80029ba:	2b2e      	cmp	r3, #46	; 0x2e
 80029bc:	d17c      	bne.n	8002ab8 <HAL_UART_RxCpltCallback+0x1490>
                    	 	        						  if (uRx_Data[k+3]=='.') {
 80029be:	4b1b      	ldr	r3, [pc, #108]	; (8002a2c <HAL_UART_RxCpltCallback+0x1404>)
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	3303      	adds	r3, #3
 80029c4:	4a1a      	ldr	r2, [pc, #104]	; (8002a30 <HAL_UART_RxCpltCallback+0x1408>)
 80029c6:	5cd3      	ldrb	r3, [r2, r3]
 80029c8:	2b2e      	cmp	r3, #46	; 0x2e
 80029ca:	d13d      	bne.n	8002a48 <HAL_UART_RxCpltCallback+0x1420>
                          	 	        				       uRx_Data1[uLength1]='H';
 80029cc:	4b19      	ldr	r3, [pc, #100]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 80029ce:	781b      	ldrb	r3, [r3, #0]
 80029d0:	461a      	mov	r2, r3
 80029d2:	4b19      	ldr	r3, [pc, #100]	; (8002a38 <HAL_UART_RxCpltCallback+0x1410>)
 80029d4:	2148      	movs	r1, #72	; 0x48
 80029d6:	5499      	strb	r1, [r3, r2]
                          	 	        				       uLength1++;uRx_Data2[h]='.';
 80029d8:	4b16      	ldr	r3, [pc, #88]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 80029da:	781b      	ldrb	r3, [r3, #0]
 80029dc:	3301      	adds	r3, #1
 80029de:	b2da      	uxtb	r2, r3
 80029e0:	4b14      	ldr	r3, [pc, #80]	; (8002a34 <HAL_UART_RxCpltCallback+0x140c>)
 80029e2:	701a      	strb	r2, [r3, #0]
 80029e4:	4b15      	ldr	r3, [pc, #84]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 80029e6:	681b      	ldr	r3, [r3, #0]
 80029e8:	4a15      	ldr	r2, [pc, #84]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 80029ea:	212e      	movs	r1, #46	; 0x2e
 80029ec:	54d1      	strb	r1, [r2, r3]
                                     	 	        	    	uRx_Data2[h+1]='.';
 80029ee:	4b13      	ldr	r3, [pc, #76]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 80029f0:	681b      	ldr	r3, [r3, #0]
 80029f2:	3301      	adds	r3, #1
 80029f4:	4a12      	ldr	r2, [pc, #72]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 80029f6:	212e      	movs	r1, #46	; 0x2e
 80029f8:	54d1      	strb	r1, [r2, r3]
                                     	 	        	    	uRx_Data2[h+2]='.';
 80029fa:	4b10      	ldr	r3, [pc, #64]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 80029fc:	681b      	ldr	r3, [r3, #0]
 80029fe:	3302      	adds	r3, #2
 8002a00:	4a0f      	ldr	r2, [pc, #60]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 8002a02:	212e      	movs	r1, #46	; 0x2e
 8002a04:	54d1      	strb	r1, [r2, r3]
                                     	 	        	    	uRx_Data2[h+3]='.';
 8002a06:	4b0d      	ldr	r3, [pc, #52]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 8002a08:	681b      	ldr	r3, [r3, #0]
 8002a0a:	3303      	adds	r3, #3
 8002a0c:	4a0c      	ldr	r2, [pc, #48]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 8002a0e:	212e      	movs	r1, #46	; 0x2e
 8002a10:	54d1      	strb	r1, [r2, r3]
                                     	 	        	    	uRx_Data2[h+4]='/';
 8002a12:	4b0a      	ldr	r3, [pc, #40]	; (8002a3c <HAL_UART_RxCpltCallback+0x1414>)
 8002a14:	681b      	ldr	r3, [r3, #0]
 8002a16:	3304      	adds	r3, #4
 8002a18:	4a09      	ldr	r2, [pc, #36]	; (8002a40 <HAL_UART_RxCpltCallback+0x1418>)
 8002a1a:	212f      	movs	r1, #47	; 0x2f
 8002a1c:	54d1      	strb	r1, [r2, r3]
                                        	 	        	    	//k=k+5;
                                        	 	        	        uLength2+=5;
 8002a1e:	4b09      	ldr	r3, [pc, #36]	; (8002a44 <HAL_UART_RxCpltCallback+0x141c>)
 8002a20:	781b      	ldrb	r3, [r3, #0]
 8002a22:	3305      	adds	r3, #5
 8002a24:	b2da      	uxtb	r2, r3
 8002a26:	4b07      	ldr	r3, [pc, #28]	; (8002a44 <HAL_UART_RxCpltCallback+0x141c>)
 8002a28:	701a      	strb	r2, [r3, #0]
 8002a2a:	e2e5      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
 8002a2c:	20001434 	.word	0x20001434
 8002a30:	2000042c 	.word	0x2000042c
 8002a34:	2000142d 	.word	0x2000142d
 8002a38:	2000082c 	.word	0x2000082c
 8002a3c:	20001438 	.word	0x20001438
 8002a40:	20000c2c 	.word	0x20000c2c
 8002a44:	2000142e 	.word	0x2000142e
                          	 	        				   }
                          	 	        				 else if (uRx_Data[k+3]=='-') {
 8002a48:	4b9a      	ldr	r3, [pc, #616]	; (8002cb4 <HAL_UART_RxCpltCallback+0x168c>)
 8002a4a:	681b      	ldr	r3, [r3, #0]
 8002a4c:	3303      	adds	r3, #3
 8002a4e:	4a9a      	ldr	r2, [pc, #616]	; (8002cb8 <HAL_UART_RxCpltCallback+0x1690>)
 8002a50:	5cd3      	ldrb	r3, [r2, r3]
 8002a52:	2b2d      	cmp	r3, #45	; 0x2d
 8002a54:	f040 82d0 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                          	 	        				       uRx_Data1[uLength1]='V';
 8002a58:	4b98      	ldr	r3, [pc, #608]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002a5a:	781b      	ldrb	r3, [r3, #0]
 8002a5c:	461a      	mov	r2, r3
 8002a5e:	4b98      	ldr	r3, [pc, #608]	; (8002cc0 <HAL_UART_RxCpltCallback+0x1698>)
 8002a60:	2156      	movs	r1, #86	; 0x56
 8002a62:	5499      	strb	r1, [r3, r2]
                          	 	        				       uLength1++;uRx_Data2[h]='.';
 8002a64:	4b95      	ldr	r3, [pc, #596]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002a66:	781b      	ldrb	r3, [r3, #0]
 8002a68:	3301      	adds	r3, #1
 8002a6a:	b2da      	uxtb	r2, r3
 8002a6c:	4b93      	ldr	r3, [pc, #588]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002a6e:	701a      	strb	r2, [r3, #0]
 8002a70:	4b94      	ldr	r3, [pc, #592]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002a72:	681b      	ldr	r3, [r3, #0]
 8002a74:	4a94      	ldr	r2, [pc, #592]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002a76:	212e      	movs	r1, #46	; 0x2e
 8002a78:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+1]='.';
 8002a7a:	4b92      	ldr	r3, [pc, #584]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002a7c:	681b      	ldr	r3, [r3, #0]
 8002a7e:	3301      	adds	r3, #1
 8002a80:	4a91      	ldr	r2, [pc, #580]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002a82:	212e      	movs	r1, #46	; 0x2e
 8002a84:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+2]='.';
 8002a86:	4b8f      	ldr	r3, [pc, #572]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002a88:	681b      	ldr	r3, [r3, #0]
 8002a8a:	3302      	adds	r3, #2
 8002a8c:	4a8e      	ldr	r2, [pc, #568]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002a8e:	212e      	movs	r1, #46	; 0x2e
 8002a90:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+3]='-';
 8002a92:	4b8c      	ldr	r3, [pc, #560]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002a94:	681b      	ldr	r3, [r3, #0]
 8002a96:	3303      	adds	r3, #3
 8002a98:	4a8b      	ldr	r2, [pc, #556]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002a9a:	212d      	movs	r1, #45	; 0x2d
 8002a9c:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+4]='/';
 8002a9e:	4b89      	ldr	r3, [pc, #548]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002aa0:	681b      	ldr	r3, [r3, #0]
 8002aa2:	3304      	adds	r3, #4
 8002aa4:	4a88      	ldr	r2, [pc, #544]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002aa6:	212f      	movs	r1, #47	; 0x2f
 8002aa8:	54d1      	strb	r1, [r2, r3]
                                        	 	        	    	//k=k+5;
                                        	 	        	        uLength2+=5;
 8002aaa:	4b88      	ldr	r3, [pc, #544]	; (8002ccc <HAL_UART_RxCpltCallback+0x16a4>)
 8002aac:	781b      	ldrb	r3, [r3, #0]
 8002aae:	3305      	adds	r3, #5
 8002ab0:	b2da      	uxtb	r2, r3
 8002ab2:	4b86      	ldr	r3, [pc, #536]	; (8002ccc <HAL_UART_RxCpltCallback+0x16a4>)
 8002ab4:	701a      	strb	r2, [r3, #0]
 8002ab6:	e29f      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                          	 	        				   }

                   	 	        				   }
                   	 	        				 else if (uRx_Data[k+2]=='-') {
 8002ab8:	4b7e      	ldr	r3, [pc, #504]	; (8002cb4 <HAL_UART_RxCpltCallback+0x168c>)
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	3302      	adds	r3, #2
 8002abe:	4a7e      	ldr	r2, [pc, #504]	; (8002cb8 <HAL_UART_RxCpltCallback+0x1690>)
 8002ac0:	5cd3      	ldrb	r3, [r2, r3]
 8002ac2:	2b2d      	cmp	r3, #45	; 0x2d
 8002ac4:	f040 8298 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                   	 	        					 if (uRx_Data[k+3]=='.') {
 8002ac8:	4b7a      	ldr	r3, [pc, #488]	; (8002cb4 <HAL_UART_RxCpltCallback+0x168c>)
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	3303      	adds	r3, #3
 8002ace:	4a7a      	ldr	r2, [pc, #488]	; (8002cb8 <HAL_UART_RxCpltCallback+0x1690>)
 8002ad0:	5cd3      	ldrb	r3, [r2, r3]
 8002ad2:	2b2e      	cmp	r3, #46	; 0x2e
 8002ad4:	f040 8290 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                	 	        				       uRx_Data1[uLength1]='F';
 8002ad8:	4b78      	ldr	r3, [pc, #480]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002ada:	781b      	ldrb	r3, [r3, #0]
 8002adc:	461a      	mov	r2, r3
 8002ade:	4b78      	ldr	r3, [pc, #480]	; (8002cc0 <HAL_UART_RxCpltCallback+0x1698>)
 8002ae0:	2146      	movs	r1, #70	; 0x46
 8002ae2:	5499      	strb	r1, [r3, r2]
                	 	        				       uLength1++;uRx_Data2[h]='.';
 8002ae4:	4b75      	ldr	r3, [pc, #468]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002ae6:	781b      	ldrb	r3, [r3, #0]
 8002ae8:	3301      	adds	r3, #1
 8002aea:	b2da      	uxtb	r2, r3
 8002aec:	4b73      	ldr	r3, [pc, #460]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002aee:	701a      	strb	r2, [r3, #0]
 8002af0:	4b74      	ldr	r3, [pc, #464]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	4a74      	ldr	r2, [pc, #464]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002af6:	212e      	movs	r1, #46	; 0x2e
 8002af8:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+1]='.';
 8002afa:	4b72      	ldr	r3, [pc, #456]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	3301      	adds	r3, #1
 8002b00:	4a71      	ldr	r2, [pc, #452]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002b02:	212e      	movs	r1, #46	; 0x2e
 8002b04:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+2]='-';
 8002b06:	4b6f      	ldr	r3, [pc, #444]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	3302      	adds	r3, #2
 8002b0c:	4a6e      	ldr	r2, [pc, #440]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002b0e:	212d      	movs	r1, #45	; 0x2d
 8002b10:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+3]='.';
 8002b12:	4b6c      	ldr	r3, [pc, #432]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002b14:	681b      	ldr	r3, [r3, #0]
 8002b16:	3303      	adds	r3, #3
 8002b18:	4a6b      	ldr	r2, [pc, #428]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002b1a:	212e      	movs	r1, #46	; 0x2e
 8002b1c:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+4]='/';
 8002b1e:	4b69      	ldr	r3, [pc, #420]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002b20:	681b      	ldr	r3, [r3, #0]
 8002b22:	3304      	adds	r3, #4
 8002b24:	4a68      	ldr	r2, [pc, #416]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002b26:	212f      	movs	r1, #47	; 0x2f
 8002b28:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+5;
                                	 	        	        uLength2+=5;
 8002b2a:	4b68      	ldr	r3, [pc, #416]	; (8002ccc <HAL_UART_RxCpltCallback+0x16a4>)
 8002b2c:	781b      	ldrb	r3, [r3, #0]
 8002b2e:	3305      	adds	r3, #5
 8002b30:	b2da      	uxtb	r2, r3
 8002b32:	4b66      	ldr	r3, [pc, #408]	; (8002ccc <HAL_UART_RxCpltCallback+0x16a4>)
 8002b34:	701a      	strb	r2, [r3, #0]
 8002b36:	e25f      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>

                	 	        				   }
                   	 	        				   }

                    	 	        				   }
                    	 	        				 else if (uRx_Data[k+1]=='-') {
 8002b38:	4b5e      	ldr	r3, [pc, #376]	; (8002cb4 <HAL_UART_RxCpltCallback+0x168c>)
 8002b3a:	681b      	ldr	r3, [r3, #0]
 8002b3c:	3301      	adds	r3, #1
 8002b3e:	4a5e      	ldr	r2, [pc, #376]	; (8002cb8 <HAL_UART_RxCpltCallback+0x1690>)
 8002b40:	5cd3      	ldrb	r3, [r2, r3]
 8002b42:	2b2d      	cmp	r3, #45	; 0x2d
 8002b44:	f040 8258 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                    	 	        					 if (uRx_Data[k+2]=='.') {
 8002b48:	4b5a      	ldr	r3, [pc, #360]	; (8002cb4 <HAL_UART_RxCpltCallback+0x168c>)
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	3302      	adds	r3, #2
 8002b4e:	4a5a      	ldr	r2, [pc, #360]	; (8002cb8 <HAL_UART_RxCpltCallback+0x1690>)
 8002b50:	5cd3      	ldrb	r3, [r2, r3]
 8002b52:	2b2e      	cmp	r3, #46	; 0x2e
 8002b54:	d137      	bne.n	8002bc6 <HAL_UART_RxCpltCallback+0x159e>
                    	 	        						 if (uRx_Data[k+3]=='.') {
 8002b56:	4b57      	ldr	r3, [pc, #348]	; (8002cb4 <HAL_UART_RxCpltCallback+0x168c>)
 8002b58:	681b      	ldr	r3, [r3, #0]
 8002b5a:	3303      	adds	r3, #3
 8002b5c:	4a56      	ldr	r2, [pc, #344]	; (8002cb8 <HAL_UART_RxCpltCallback+0x1690>)
 8002b5e:	5cd3      	ldrb	r3, [r2, r3]
 8002b60:	2b2e      	cmp	r3, #46	; 0x2e
 8002b62:	f040 8249 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                        	 	        				       uRx_Data1[uLength1]='L';
 8002b66:	4b55      	ldr	r3, [pc, #340]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002b68:	781b      	ldrb	r3, [r3, #0]
 8002b6a:	461a      	mov	r2, r3
 8002b6c:	4b54      	ldr	r3, [pc, #336]	; (8002cc0 <HAL_UART_RxCpltCallback+0x1698>)
 8002b6e:	214c      	movs	r1, #76	; 0x4c
 8002b70:	5499      	strb	r1, [r3, r2]
                        	 	        				       uLength1++;uRx_Data2[h]='.';
 8002b72:	4b52      	ldr	r3, [pc, #328]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002b74:	781b      	ldrb	r3, [r3, #0]
 8002b76:	3301      	adds	r3, #1
 8002b78:	b2da      	uxtb	r2, r3
 8002b7a:	4b50      	ldr	r3, [pc, #320]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002b7c:	701a      	strb	r2, [r3, #0]
 8002b7e:	4b51      	ldr	r3, [pc, #324]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	4a51      	ldr	r2, [pc, #324]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002b84:	212e      	movs	r1, #46	; 0x2e
 8002b86:	54d1      	strb	r1, [r2, r3]
                                     	 	        	    	uRx_Data2[h+1]='-';
 8002b88:	4b4e      	ldr	r3, [pc, #312]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002b8a:	681b      	ldr	r3, [r3, #0]
 8002b8c:	3301      	adds	r3, #1
 8002b8e:	4a4e      	ldr	r2, [pc, #312]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002b90:	212d      	movs	r1, #45	; 0x2d
 8002b92:	54d1      	strb	r1, [r2, r3]
                                     	 	        	    	uRx_Data2[h+2]='.';
 8002b94:	4b4b      	ldr	r3, [pc, #300]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	3302      	adds	r3, #2
 8002b9a:	4a4b      	ldr	r2, [pc, #300]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002b9c:	212e      	movs	r1, #46	; 0x2e
 8002b9e:	54d1      	strb	r1, [r2, r3]
                                     	 	        	    	uRx_Data2[h+3]='.';
 8002ba0:	4b48      	ldr	r3, [pc, #288]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002ba2:	681b      	ldr	r3, [r3, #0]
 8002ba4:	3303      	adds	r3, #3
 8002ba6:	4a48      	ldr	r2, [pc, #288]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002ba8:	212e      	movs	r1, #46	; 0x2e
 8002baa:	54d1      	strb	r1, [r2, r3]
                                     	 	        	    	uRx_Data2[h+4]='/';
 8002bac:	4b45      	ldr	r3, [pc, #276]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002bae:	681b      	ldr	r3, [r3, #0]
 8002bb0:	3304      	adds	r3, #4
 8002bb2:	4a45      	ldr	r2, [pc, #276]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002bb4:	212f      	movs	r1, #47	; 0x2f
 8002bb6:	54d1      	strb	r1, [r2, r3]
                                        	 	        	    	//k=k+5;
                                        	 	        	        uLength2+=5;
 8002bb8:	4b44      	ldr	r3, [pc, #272]	; (8002ccc <HAL_UART_RxCpltCallback+0x16a4>)
 8002bba:	781b      	ldrb	r3, [r3, #0]
 8002bbc:	3305      	adds	r3, #5
 8002bbe:	b2da      	uxtb	r2, r3
 8002bc0:	4b42      	ldr	r3, [pc, #264]	; (8002ccc <HAL_UART_RxCpltCallback+0x16a4>)
 8002bc2:	701a      	strb	r2, [r3, #0]
 8002bc4:	e218      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                        	 	        				 else if (uRx_Data[k+3]=='-') {

                        	 	        				   }

                  	 	        				   }
                  	 	        				 else if (uRx_Data[k+2]=='-') {
 8002bc6:	4b3b      	ldr	r3, [pc, #236]	; (8002cb4 <HAL_UART_RxCpltCallback+0x168c>)
 8002bc8:	681b      	ldr	r3, [r3, #0]
 8002bca:	3302      	adds	r3, #2
 8002bcc:	4a3a      	ldr	r2, [pc, #232]	; (8002cb8 <HAL_UART_RxCpltCallback+0x1690>)
 8002bce:	5cd3      	ldrb	r3, [r2, r3]
 8002bd0:	2b2d      	cmp	r3, #45	; 0x2d
 8002bd2:	f040 8211 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                  	 	        					 if (uRx_Data[k+3]=='.') {
 8002bd6:	4b37      	ldr	r3, [pc, #220]	; (8002cb4 <HAL_UART_RxCpltCallback+0x168c>)
 8002bd8:	681b      	ldr	r3, [r3, #0]
 8002bda:	3303      	adds	r3, #3
 8002bdc:	4a36      	ldr	r2, [pc, #216]	; (8002cb8 <HAL_UART_RxCpltCallback+0x1690>)
 8002bde:	5cd3      	ldrb	r3, [r2, r3]
 8002be0:	2b2e      	cmp	r3, #46	; 0x2e
 8002be2:	d12f      	bne.n	8002c44 <HAL_UART_RxCpltCallback+0x161c>
                	 	        				       uRx_Data1[uLength1]='P';
 8002be4:	4b35      	ldr	r3, [pc, #212]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002be6:	781b      	ldrb	r3, [r3, #0]
 8002be8:	461a      	mov	r2, r3
 8002bea:	4b35      	ldr	r3, [pc, #212]	; (8002cc0 <HAL_UART_RxCpltCallback+0x1698>)
 8002bec:	2150      	movs	r1, #80	; 0x50
 8002bee:	5499      	strb	r1, [r3, r2]
                	 	        				       uLength1++;uRx_Data2[h]='.';
 8002bf0:	4b32      	ldr	r3, [pc, #200]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002bf2:	781b      	ldrb	r3, [r3, #0]
 8002bf4:	3301      	adds	r3, #1
 8002bf6:	b2da      	uxtb	r2, r3
 8002bf8:	4b30      	ldr	r3, [pc, #192]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002bfa:	701a      	strb	r2, [r3, #0]
 8002bfc:	4b31      	ldr	r3, [pc, #196]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	4a31      	ldr	r2, [pc, #196]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002c02:	212e      	movs	r1, #46	; 0x2e
 8002c04:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+1]='-';
 8002c06:	4b2f      	ldr	r3, [pc, #188]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	3301      	adds	r3, #1
 8002c0c:	4a2e      	ldr	r2, [pc, #184]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002c0e:	212d      	movs	r1, #45	; 0x2d
 8002c10:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+2]='-';
 8002c12:	4b2c      	ldr	r3, [pc, #176]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	3302      	adds	r3, #2
 8002c18:	4a2b      	ldr	r2, [pc, #172]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002c1a:	212d      	movs	r1, #45	; 0x2d
 8002c1c:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+3]='.';
 8002c1e:	4b29      	ldr	r3, [pc, #164]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002c20:	681b      	ldr	r3, [r3, #0]
 8002c22:	3303      	adds	r3, #3
 8002c24:	4a28      	ldr	r2, [pc, #160]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002c26:	212e      	movs	r1, #46	; 0x2e
 8002c28:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+4]='/';
 8002c2a:	4b26      	ldr	r3, [pc, #152]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002c2c:	681b      	ldr	r3, [r3, #0]
 8002c2e:	3304      	adds	r3, #4
 8002c30:	4a25      	ldr	r2, [pc, #148]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002c32:	212f      	movs	r1, #47	; 0x2f
 8002c34:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+5;
                                	 	        	        uLength2+=5;
 8002c36:	4b25      	ldr	r3, [pc, #148]	; (8002ccc <HAL_UART_RxCpltCallback+0x16a4>)
 8002c38:	781b      	ldrb	r3, [r3, #0]
 8002c3a:	3305      	adds	r3, #5
 8002c3c:	b2da      	uxtb	r2, r3
 8002c3e:	4b23      	ldr	r3, [pc, #140]	; (8002ccc <HAL_UART_RxCpltCallback+0x16a4>)
 8002c40:	701a      	strb	r2, [r3, #0]
 8002c42:	e1d9      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                	 	        				   }
                	 	        				 else if (uRx_Data[k+3]=='-') {
 8002c44:	4b1b      	ldr	r3, [pc, #108]	; (8002cb4 <HAL_UART_RxCpltCallback+0x168c>)
 8002c46:	681b      	ldr	r3, [r3, #0]
 8002c48:	3303      	adds	r3, #3
 8002c4a:	4a1b      	ldr	r2, [pc, #108]	; (8002cb8 <HAL_UART_RxCpltCallback+0x1690>)
 8002c4c:	5cd3      	ldrb	r3, [r2, r3]
 8002c4e:	2b2d      	cmp	r3, #45	; 0x2d
 8002c50:	f040 81d2 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                	 	        				       uRx_Data1[uLength1]='J';
 8002c54:	4b19      	ldr	r3, [pc, #100]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002c56:	781b      	ldrb	r3, [r3, #0]
 8002c58:	461a      	mov	r2, r3
 8002c5a:	4b19      	ldr	r3, [pc, #100]	; (8002cc0 <HAL_UART_RxCpltCallback+0x1698>)
 8002c5c:	214a      	movs	r1, #74	; 0x4a
 8002c5e:	5499      	strb	r1, [r3, r2]
                	 	        				       uLength1++;uRx_Data2[h]='.';
 8002c60:	4b16      	ldr	r3, [pc, #88]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002c62:	781b      	ldrb	r3, [r3, #0]
 8002c64:	3301      	adds	r3, #1
 8002c66:	b2da      	uxtb	r2, r3
 8002c68:	4b14      	ldr	r3, [pc, #80]	; (8002cbc <HAL_UART_RxCpltCallback+0x1694>)
 8002c6a:	701a      	strb	r2, [r3, #0]
 8002c6c:	4b15      	ldr	r3, [pc, #84]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	4a15      	ldr	r2, [pc, #84]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002c72:	212e      	movs	r1, #46	; 0x2e
 8002c74:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+1]='-';
 8002c76:	4b13      	ldr	r3, [pc, #76]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002c78:	681b      	ldr	r3, [r3, #0]
 8002c7a:	3301      	adds	r3, #1
 8002c7c:	4a12      	ldr	r2, [pc, #72]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002c7e:	212d      	movs	r1, #45	; 0x2d
 8002c80:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+2]='-';
 8002c82:	4b10      	ldr	r3, [pc, #64]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002c84:	681b      	ldr	r3, [r3, #0]
 8002c86:	3302      	adds	r3, #2
 8002c88:	4a0f      	ldr	r2, [pc, #60]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002c8a:	212d      	movs	r1, #45	; 0x2d
 8002c8c:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+3]='-';
 8002c8e:	4b0d      	ldr	r3, [pc, #52]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002c90:	681b      	ldr	r3, [r3, #0]
 8002c92:	3303      	adds	r3, #3
 8002c94:	4a0c      	ldr	r2, [pc, #48]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002c96:	212d      	movs	r1, #45	; 0x2d
 8002c98:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+4]='/';
 8002c9a:	4b0a      	ldr	r3, [pc, #40]	; (8002cc4 <HAL_UART_RxCpltCallback+0x169c>)
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	3304      	adds	r3, #4
 8002ca0:	4a09      	ldr	r2, [pc, #36]	; (8002cc8 <HAL_UART_RxCpltCallback+0x16a0>)
 8002ca2:	212f      	movs	r1, #47	; 0x2f
 8002ca4:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+5;
                                	 	        	        uLength2+=5;
 8002ca6:	4b09      	ldr	r3, [pc, #36]	; (8002ccc <HAL_UART_RxCpltCallback+0x16a4>)
 8002ca8:	781b      	ldrb	r3, [r3, #0]
 8002caa:	3305      	adds	r3, #5
 8002cac:	b2da      	uxtb	r2, r3
 8002cae:	4b07      	ldr	r3, [pc, #28]	; (8002ccc <HAL_UART_RxCpltCallback+0x16a4>)
 8002cb0:	701a      	strb	r2, [r3, #0]
 8002cb2:	e1a1      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
 8002cb4:	20001434 	.word	0x20001434
 8002cb8:	2000042c 	.word	0x2000042c
 8002cbc:	2000142d 	.word	0x2000142d
 8002cc0:	2000082c 	.word	0x2000082c
 8002cc4:	20001438 	.word	0x20001438
 8002cc8:	20000c2c 	.word	0x20000c2c
 8002ccc:	2000142e 	.word	0x2000142e
                  	 	        				   }

                    	 	        				   }

                    	 	        			  }
                    	 	        			 else if (uRx_Data[k]=='-') {
 8002cd0:	4b7d      	ldr	r3, [pc, #500]	; (8002ec8 <HAL_UART_RxCpltCallback+0x18a0>)
 8002cd2:	681b      	ldr	r3, [r3, #0]
 8002cd4:	4a7d      	ldr	r2, [pc, #500]	; (8002ecc <HAL_UART_RxCpltCallback+0x18a4>)
 8002cd6:	5cd3      	ldrb	r3, [r2, r3]
 8002cd8:	2b2d      	cmp	r3, #45	; 0x2d
 8002cda:	f040 818d 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                    	 	        				  if (uRx_Data[k+1]=='.') {
 8002cde:	4b7a      	ldr	r3, [pc, #488]	; (8002ec8 <HAL_UART_RxCpltCallback+0x18a0>)
 8002ce0:	681b      	ldr	r3, [r3, #0]
 8002ce2:	3301      	adds	r3, #1
 8002ce4:	4a79      	ldr	r2, [pc, #484]	; (8002ecc <HAL_UART_RxCpltCallback+0x18a4>)
 8002ce6:	5cd3      	ldrb	r3, [r2, r3]
 8002ce8:	2b2e      	cmp	r3, #46	; 0x2e
 8002cea:	f040 80fb 	bne.w	8002ee4 <HAL_UART_RxCpltCallback+0x18bc>
                    	 	        					  if (uRx_Data[k+2]=='.') {
 8002cee:	4b76      	ldr	r3, [pc, #472]	; (8002ec8 <HAL_UART_RxCpltCallback+0x18a0>)
 8002cf0:	681b      	ldr	r3, [r3, #0]
 8002cf2:	3302      	adds	r3, #2
 8002cf4:	4a75      	ldr	r2, [pc, #468]	; (8002ecc <HAL_UART_RxCpltCallback+0x18a4>)
 8002cf6:	5cd3      	ldrb	r3, [r2, r3]
 8002cf8:	2b2e      	cmp	r3, #46	; 0x2e
 8002cfa:	d16e      	bne.n	8002dda <HAL_UART_RxCpltCallback+0x17b2>
                    	 	        						  if (uRx_Data[k+3]=='.') {
 8002cfc:	4b72      	ldr	r3, [pc, #456]	; (8002ec8 <HAL_UART_RxCpltCallback+0x18a0>)
 8002cfe:	681b      	ldr	r3, [r3, #0]
 8002d00:	3303      	adds	r3, #3
 8002d02:	4a72      	ldr	r2, [pc, #456]	; (8002ecc <HAL_UART_RxCpltCallback+0x18a4>)
 8002d04:	5cd3      	ldrb	r3, [r2, r3]
 8002d06:	2b2e      	cmp	r3, #46	; 0x2e
 8002d08:	d12f      	bne.n	8002d6a <HAL_UART_RxCpltCallback+0x1742>
                         	 	        				       uRx_Data1[uLength1]='B';
 8002d0a:	4b71      	ldr	r3, [pc, #452]	; (8002ed0 <HAL_UART_RxCpltCallback+0x18a8>)
 8002d0c:	781b      	ldrb	r3, [r3, #0]
 8002d0e:	461a      	mov	r2, r3
 8002d10:	4b70      	ldr	r3, [pc, #448]	; (8002ed4 <HAL_UART_RxCpltCallback+0x18ac>)
 8002d12:	2142      	movs	r1, #66	; 0x42
 8002d14:	5499      	strb	r1, [r3, r2]
                         	 	        				       uLength1++;uRx_Data2[h]='-';
 8002d16:	4b6e      	ldr	r3, [pc, #440]	; (8002ed0 <HAL_UART_RxCpltCallback+0x18a8>)
 8002d18:	781b      	ldrb	r3, [r3, #0]
 8002d1a:	3301      	adds	r3, #1
 8002d1c:	b2da      	uxtb	r2, r3
 8002d1e:	4b6c      	ldr	r3, [pc, #432]	; (8002ed0 <HAL_UART_RxCpltCallback+0x18a8>)
 8002d20:	701a      	strb	r2, [r3, #0]
 8002d22:	4b6d      	ldr	r3, [pc, #436]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002d24:	681b      	ldr	r3, [r3, #0]
 8002d26:	4a6d      	ldr	r2, [pc, #436]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002d28:	212d      	movs	r1, #45	; 0x2d
 8002d2a:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	uRx_Data2[h+1]='.';
 8002d2c:	4b6a      	ldr	r3, [pc, #424]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	3301      	adds	r3, #1
 8002d32:	4a6a      	ldr	r2, [pc, #424]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002d34:	212e      	movs	r1, #46	; 0x2e
 8002d36:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	uRx_Data2[h+2]='.';
 8002d38:	4b67      	ldr	r3, [pc, #412]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002d3a:	681b      	ldr	r3, [r3, #0]
 8002d3c:	3302      	adds	r3, #2
 8002d3e:	4a67      	ldr	r2, [pc, #412]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002d40:	212e      	movs	r1, #46	; 0x2e
 8002d42:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	uRx_Data2[h+3]='.';
 8002d44:	4b64      	ldr	r3, [pc, #400]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	3303      	adds	r3, #3
 8002d4a:	4a64      	ldr	r2, [pc, #400]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002d4c:	212e      	movs	r1, #46	; 0x2e
 8002d4e:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	uRx_Data2[h+4]='/';
 8002d50:	4b61      	ldr	r3, [pc, #388]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	3304      	adds	r3, #4
 8002d56:	4a61      	ldr	r2, [pc, #388]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002d58:	212f      	movs	r1, #47	; 0x2f
 8002d5a:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+5;
                                    	 	        	        uLength2+=5;
 8002d5c:	4b60      	ldr	r3, [pc, #384]	; (8002ee0 <HAL_UART_RxCpltCallback+0x18b8>)
 8002d5e:	781b      	ldrb	r3, [r3, #0]
 8002d60:	3305      	adds	r3, #5
 8002d62:	b2da      	uxtb	r2, r3
 8002d64:	4b5e      	ldr	r3, [pc, #376]	; (8002ee0 <HAL_UART_RxCpltCallback+0x18b8>)
 8002d66:	701a      	strb	r2, [r3, #0]
 8002d68:	e146      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                         	 	        				   }
                         	 	        				 else if (uRx_Data[k+3]=='-') {
 8002d6a:	4b57      	ldr	r3, [pc, #348]	; (8002ec8 <HAL_UART_RxCpltCallback+0x18a0>)
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	3303      	adds	r3, #3
 8002d70:	4a56      	ldr	r2, [pc, #344]	; (8002ecc <HAL_UART_RxCpltCallback+0x18a4>)
 8002d72:	5cd3      	ldrb	r3, [r2, r3]
 8002d74:	2b2d      	cmp	r3, #45	; 0x2d
 8002d76:	f040 813f 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                         	 	        				       uRx_Data1[uLength1]='X';
 8002d7a:	4b55      	ldr	r3, [pc, #340]	; (8002ed0 <HAL_UART_RxCpltCallback+0x18a8>)
 8002d7c:	781b      	ldrb	r3, [r3, #0]
 8002d7e:	461a      	mov	r2, r3
 8002d80:	4b54      	ldr	r3, [pc, #336]	; (8002ed4 <HAL_UART_RxCpltCallback+0x18ac>)
 8002d82:	2158      	movs	r1, #88	; 0x58
 8002d84:	5499      	strb	r1, [r3, r2]
                         	 	        				       uLength1++;uRx_Data2[h]='-';
 8002d86:	4b52      	ldr	r3, [pc, #328]	; (8002ed0 <HAL_UART_RxCpltCallback+0x18a8>)
 8002d88:	781b      	ldrb	r3, [r3, #0]
 8002d8a:	3301      	adds	r3, #1
 8002d8c:	b2da      	uxtb	r2, r3
 8002d8e:	4b50      	ldr	r3, [pc, #320]	; (8002ed0 <HAL_UART_RxCpltCallback+0x18a8>)
 8002d90:	701a      	strb	r2, [r3, #0]
 8002d92:	4b51      	ldr	r3, [pc, #324]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	4a51      	ldr	r2, [pc, #324]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002d98:	212d      	movs	r1, #45	; 0x2d
 8002d9a:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+1]='.';
 8002d9c:	4b4e      	ldr	r3, [pc, #312]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	3301      	adds	r3, #1
 8002da2:	4a4e      	ldr	r2, [pc, #312]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002da4:	212e      	movs	r1, #46	; 0x2e
 8002da6:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+2]='.';
 8002da8:	4b4b      	ldr	r3, [pc, #300]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	3302      	adds	r3, #2
 8002dae:	4a4b      	ldr	r2, [pc, #300]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002db0:	212e      	movs	r1, #46	; 0x2e
 8002db2:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+3]='-';
 8002db4:	4b48      	ldr	r3, [pc, #288]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	3303      	adds	r3, #3
 8002dba:	4a48      	ldr	r2, [pc, #288]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002dbc:	212d      	movs	r1, #45	; 0x2d
 8002dbe:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+4]='/';
 8002dc0:	4b45      	ldr	r3, [pc, #276]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	3304      	adds	r3, #4
 8002dc6:	4a45      	ldr	r2, [pc, #276]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002dc8:	212f      	movs	r1, #47	; 0x2f
 8002dca:	54d1      	strb	r1, [r2, r3]
                                        	 	        	    	//k=k+5;
                                        	 	        	        uLength2+=5;
 8002dcc:	4b44      	ldr	r3, [pc, #272]	; (8002ee0 <HAL_UART_RxCpltCallback+0x18b8>)
 8002dce:	781b      	ldrb	r3, [r3, #0]
 8002dd0:	3305      	adds	r3, #5
 8002dd2:	b2da      	uxtb	r2, r3
 8002dd4:	4b42      	ldr	r3, [pc, #264]	; (8002ee0 <HAL_UART_RxCpltCallback+0x18b8>)
 8002dd6:	701a      	strb	r2, [r3, #0]
 8002dd8:	e10e      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                         	 	        				   }

                      	 	        				   }
                      	 	        				 else if (uRx_Data[k+2]=='-') {
 8002dda:	4b3b      	ldr	r3, [pc, #236]	; (8002ec8 <HAL_UART_RxCpltCallback+0x18a0>)
 8002ddc:	681b      	ldr	r3, [r3, #0]
 8002dde:	3302      	adds	r3, #2
 8002de0:	4a3a      	ldr	r2, [pc, #232]	; (8002ecc <HAL_UART_RxCpltCallback+0x18a4>)
 8002de2:	5cd3      	ldrb	r3, [r2, r3]
 8002de4:	2b2d      	cmp	r3, #45	; 0x2d
 8002de6:	f040 8107 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                      	 	        					 if (uRx_Data[k+3]=='.') {
 8002dea:	4b37      	ldr	r3, [pc, #220]	; (8002ec8 <HAL_UART_RxCpltCallback+0x18a0>)
 8002dec:	681b      	ldr	r3, [r3, #0]
 8002dee:	3303      	adds	r3, #3
 8002df0:	4a36      	ldr	r2, [pc, #216]	; (8002ecc <HAL_UART_RxCpltCallback+0x18a4>)
 8002df2:	5cd3      	ldrb	r3, [r2, r3]
 8002df4:	2b2e      	cmp	r3, #46	; 0x2e
 8002df6:	d12f      	bne.n	8002e58 <HAL_UART_RxCpltCallback+0x1830>
                    	 	        				       uRx_Data1[uLength1]='C';
 8002df8:	4b35      	ldr	r3, [pc, #212]	; (8002ed0 <HAL_UART_RxCpltCallback+0x18a8>)
 8002dfa:	781b      	ldrb	r3, [r3, #0]
 8002dfc:	461a      	mov	r2, r3
 8002dfe:	4b35      	ldr	r3, [pc, #212]	; (8002ed4 <HAL_UART_RxCpltCallback+0x18ac>)
 8002e00:	2143      	movs	r1, #67	; 0x43
 8002e02:	5499      	strb	r1, [r3, r2]
                    	 	        				       uLength1++; uRx_Data2[h]='-';
 8002e04:	4b32      	ldr	r3, [pc, #200]	; (8002ed0 <HAL_UART_RxCpltCallback+0x18a8>)
 8002e06:	781b      	ldrb	r3, [r3, #0]
 8002e08:	3301      	adds	r3, #1
 8002e0a:	b2da      	uxtb	r2, r3
 8002e0c:	4b30      	ldr	r3, [pc, #192]	; (8002ed0 <HAL_UART_RxCpltCallback+0x18a8>)
 8002e0e:	701a      	strb	r2, [r3, #0]
 8002e10:	4b31      	ldr	r3, [pc, #196]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	4a31      	ldr	r2, [pc, #196]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002e16:	212d      	movs	r1, #45	; 0x2d
 8002e18:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	     uRx_Data2[h+1]='.';
 8002e1a:	4b2f      	ldr	r3, [pc, #188]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	3301      	adds	r3, #1
 8002e20:	4a2e      	ldr	r2, [pc, #184]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002e22:	212e      	movs	r1, #46	; 0x2e
 8002e24:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	     uRx_Data2[h+2]='-';
 8002e26:	4b2c      	ldr	r3, [pc, #176]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002e28:	681b      	ldr	r3, [r3, #0]
 8002e2a:	3302      	adds	r3, #2
 8002e2c:	4a2b      	ldr	r2, [pc, #172]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002e2e:	212d      	movs	r1, #45	; 0x2d
 8002e30:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	     uRx_Data2[h+3]='.';
 8002e32:	4b29      	ldr	r3, [pc, #164]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002e34:	681b      	ldr	r3, [r3, #0]
 8002e36:	3303      	adds	r3, #3
 8002e38:	4a28      	ldr	r2, [pc, #160]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002e3a:	212e      	movs	r1, #46	; 0x2e
 8002e3c:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	     uRx_Data2[h+4]='/';
 8002e3e:	4b26      	ldr	r3, [pc, #152]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	3304      	adds	r3, #4
 8002e44:	4a25      	ldr	r2, [pc, #148]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002e46:	212f      	movs	r1, #47	; 0x2f
 8002e48:	54d1      	strb	r1, [r2, r3]
                               	 	        	    	//k=k+5;
                               	 	        	        uLength2+=5;
 8002e4a:	4b25      	ldr	r3, [pc, #148]	; (8002ee0 <HAL_UART_RxCpltCallback+0x18b8>)
 8002e4c:	781b      	ldrb	r3, [r3, #0]
 8002e4e:	3305      	adds	r3, #5
 8002e50:	b2da      	uxtb	r2, r3
 8002e52:	4b23      	ldr	r3, [pc, #140]	; (8002ee0 <HAL_UART_RxCpltCallback+0x18b8>)
 8002e54:	701a      	strb	r2, [r3, #0]
 8002e56:	e0cf      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                    	 	        				   }
                    	 	        				 else if (uRx_Data[k+3]=='-') {
 8002e58:	4b1b      	ldr	r3, [pc, #108]	; (8002ec8 <HAL_UART_RxCpltCallback+0x18a0>)
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	3303      	adds	r3, #3
 8002e5e:	4a1b      	ldr	r2, [pc, #108]	; (8002ecc <HAL_UART_RxCpltCallback+0x18a4>)
 8002e60:	5cd3      	ldrb	r3, [r2, r3]
 8002e62:	2b2d      	cmp	r3, #45	; 0x2d
 8002e64:	f040 80c8 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                    	 	        				       uRx_Data1[uLength1]='Y';
 8002e68:	4b19      	ldr	r3, [pc, #100]	; (8002ed0 <HAL_UART_RxCpltCallback+0x18a8>)
 8002e6a:	781b      	ldrb	r3, [r3, #0]
 8002e6c:	461a      	mov	r2, r3
 8002e6e:	4b19      	ldr	r3, [pc, #100]	; (8002ed4 <HAL_UART_RxCpltCallback+0x18ac>)
 8002e70:	2159      	movs	r1, #89	; 0x59
 8002e72:	5499      	strb	r1, [r3, r2]
                    	 	        				       uLength1++; uRx_Data2[h]='-';
 8002e74:	4b16      	ldr	r3, [pc, #88]	; (8002ed0 <HAL_UART_RxCpltCallback+0x18a8>)
 8002e76:	781b      	ldrb	r3, [r3, #0]
 8002e78:	3301      	adds	r3, #1
 8002e7a:	b2da      	uxtb	r2, r3
 8002e7c:	4b14      	ldr	r3, [pc, #80]	; (8002ed0 <HAL_UART_RxCpltCallback+0x18a8>)
 8002e7e:	701a      	strb	r2, [r3, #0]
 8002e80:	4b15      	ldr	r3, [pc, #84]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002e82:	681b      	ldr	r3, [r3, #0]
 8002e84:	4a15      	ldr	r2, [pc, #84]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002e86:	212d      	movs	r1, #45	; 0x2d
 8002e88:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+1]='.';
 8002e8a:	4b13      	ldr	r3, [pc, #76]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	3301      	adds	r3, #1
 8002e90:	4a12      	ldr	r2, [pc, #72]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002e92:	212e      	movs	r1, #46	; 0x2e
 8002e94:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+2]='-';
 8002e96:	4b10      	ldr	r3, [pc, #64]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	3302      	adds	r3, #2
 8002e9c:	4a0f      	ldr	r2, [pc, #60]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002e9e:	212d      	movs	r1, #45	; 0x2d
 8002ea0:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+3]='-';
 8002ea2:	4b0d      	ldr	r3, [pc, #52]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002ea4:	681b      	ldr	r3, [r3, #0]
 8002ea6:	3303      	adds	r3, #3
 8002ea8:	4a0c      	ldr	r2, [pc, #48]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002eaa:	212d      	movs	r1, #45	; 0x2d
 8002eac:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+4]='/';
 8002eae:	4b0a      	ldr	r3, [pc, #40]	; (8002ed8 <HAL_UART_RxCpltCallback+0x18b0>)
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	3304      	adds	r3, #4
 8002eb4:	4a09      	ldr	r2, [pc, #36]	; (8002edc <HAL_UART_RxCpltCallback+0x18b4>)
 8002eb6:	212f      	movs	r1, #47	; 0x2f
 8002eb8:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+5;
                                    	 	        	        uLength2+=5;
 8002eba:	4b09      	ldr	r3, [pc, #36]	; (8002ee0 <HAL_UART_RxCpltCallback+0x18b8>)
 8002ebc:	781b      	ldrb	r3, [r3, #0]
 8002ebe:	3305      	adds	r3, #5
 8002ec0:	b2da      	uxtb	r2, r3
 8002ec2:	4b07      	ldr	r3, [pc, #28]	; (8002ee0 <HAL_UART_RxCpltCallback+0x18b8>)
 8002ec4:	701a      	strb	r2, [r3, #0]
 8002ec6:	e097      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
 8002ec8:	20001434 	.word	0x20001434
 8002ecc:	2000042c 	.word	0x2000042c
 8002ed0:	2000142d 	.word	0x2000142d
 8002ed4:	2000082c 	.word	0x2000082c
 8002ed8:	20001438 	.word	0x20001438
 8002edc:	20000c2c 	.word	0x20000c2c
 8002ee0:	2000142e 	.word	0x2000142e
                    	 	        				   }

                      	 	        				   }

                    	 	        				  }
                    	 	        				  else if (uRx_Data[k+1]=='-') {
 8002ee4:	4ba6      	ldr	r3, [pc, #664]	; (8003180 <HAL_UART_RxCpltCallback+0x1b58>)
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	3301      	adds	r3, #1
 8002eea:	4aa6      	ldr	r2, [pc, #664]	; (8003184 <HAL_UART_RxCpltCallback+0x1b5c>)
 8002eec:	5cd3      	ldrb	r3, [r2, r3]
 8002eee:	2b2d      	cmp	r3, #45	; 0x2d
 8002ef0:	f040 8082 	bne.w	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                    	 	        					  if (uRx_Data[k+2]=='.') {
 8002ef4:	4ba2      	ldr	r3, [pc, #648]	; (8003180 <HAL_UART_RxCpltCallback+0x1b58>)
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	3302      	adds	r3, #2
 8002efa:	4aa2      	ldr	r2, [pc, #648]	; (8003184 <HAL_UART_RxCpltCallback+0x1b5c>)
 8002efc:	5cd3      	ldrb	r3, [r2, r3]
 8002efe:	2b2e      	cmp	r3, #46	; 0x2e
 8002f00:	d16d      	bne.n	8002fde <HAL_UART_RxCpltCallback+0x19b6>
                    	 	        						  if (uRx_Data[k+3]=='.') {
 8002f02:	4b9f      	ldr	r3, [pc, #636]	; (8003180 <HAL_UART_RxCpltCallback+0x1b58>)
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	3303      	adds	r3, #3
 8002f08:	4a9e      	ldr	r2, [pc, #632]	; (8003184 <HAL_UART_RxCpltCallback+0x1b5c>)
 8002f0a:	5cd3      	ldrb	r3, [r2, r3]
 8002f0c:	2b2e      	cmp	r3, #46	; 0x2e
 8002f0e:	d12f      	bne.n	8002f70 <HAL_UART_RxCpltCallback+0x1948>
                         	 	        				       uRx_Data1[uLength1]='Z';
 8002f10:	4b9d      	ldr	r3, [pc, #628]	; (8003188 <HAL_UART_RxCpltCallback+0x1b60>)
 8002f12:	781b      	ldrb	r3, [r3, #0]
 8002f14:	461a      	mov	r2, r3
 8002f16:	4b9d      	ldr	r3, [pc, #628]	; (800318c <HAL_UART_RxCpltCallback+0x1b64>)
 8002f18:	215a      	movs	r1, #90	; 0x5a
 8002f1a:	5499      	strb	r1, [r3, r2]
                         	 	        				       uLength1++; uRx_Data2[h]='-';
 8002f1c:	4b9a      	ldr	r3, [pc, #616]	; (8003188 <HAL_UART_RxCpltCallback+0x1b60>)
 8002f1e:	781b      	ldrb	r3, [r3, #0]
 8002f20:	3301      	adds	r3, #1
 8002f22:	b2da      	uxtb	r2, r3
 8002f24:	4b98      	ldr	r3, [pc, #608]	; (8003188 <HAL_UART_RxCpltCallback+0x1b60>)
 8002f26:	701a      	strb	r2, [r3, #0]
 8002f28:	4b99      	ldr	r3, [pc, #612]	; (8003190 <HAL_UART_RxCpltCallback+0x1b68>)
 8002f2a:	681b      	ldr	r3, [r3, #0]
 8002f2c:	4a99      	ldr	r2, [pc, #612]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 8002f2e:	212d      	movs	r1, #45	; 0x2d
 8002f30:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+1]='-';
 8002f32:	4b97      	ldr	r3, [pc, #604]	; (8003190 <HAL_UART_RxCpltCallback+0x1b68>)
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	3301      	adds	r3, #1
 8002f38:	4a96      	ldr	r2, [pc, #600]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 8002f3a:	212d      	movs	r1, #45	; 0x2d
 8002f3c:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+2]='.';
 8002f3e:	4b94      	ldr	r3, [pc, #592]	; (8003190 <HAL_UART_RxCpltCallback+0x1b68>)
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	3302      	adds	r3, #2
 8002f44:	4a93      	ldr	r2, [pc, #588]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 8002f46:	212e      	movs	r1, #46	; 0x2e
 8002f48:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+3]='.';
 8002f4a:	4b91      	ldr	r3, [pc, #580]	; (8003190 <HAL_UART_RxCpltCallback+0x1b68>)
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	3303      	adds	r3, #3
 8002f50:	4a90      	ldr	r2, [pc, #576]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 8002f52:	212e      	movs	r1, #46	; 0x2e
 8002f54:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+4]='/';
 8002f56:	4b8e      	ldr	r3, [pc, #568]	; (8003190 <HAL_UART_RxCpltCallback+0x1b68>)
 8002f58:	681b      	ldr	r3, [r3, #0]
 8002f5a:	3304      	adds	r3, #4
 8002f5c:	4a8d      	ldr	r2, [pc, #564]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 8002f5e:	212f      	movs	r1, #47	; 0x2f
 8002f60:	54d1      	strb	r1, [r2, r3]
                                        	 	        	    	//k=k+5;
                                        	 	        	        uLength2+=5;
 8002f62:	4b8d      	ldr	r3, [pc, #564]	; (8003198 <HAL_UART_RxCpltCallback+0x1b70>)
 8002f64:	781b      	ldrb	r3, [r3, #0]
 8002f66:	3305      	adds	r3, #5
 8002f68:	b2da      	uxtb	r2, r3
 8002f6a:	4b8b      	ldr	r3, [pc, #556]	; (8003198 <HAL_UART_RxCpltCallback+0x1b70>)
 8002f6c:	701a      	strb	r2, [r3, #0]
 8002f6e:	e043      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                         	 	        				   }
                         	 	        				 else if (uRx_Data[k+3]=='-') {
 8002f70:	4b83      	ldr	r3, [pc, #524]	; (8003180 <HAL_UART_RxCpltCallback+0x1b58>)
 8002f72:	681b      	ldr	r3, [r3, #0]
 8002f74:	3303      	adds	r3, #3
 8002f76:	4a83      	ldr	r2, [pc, #524]	; (8003184 <HAL_UART_RxCpltCallback+0x1b5c>)
 8002f78:	5cd3      	ldrb	r3, [r2, r3]
 8002f7a:	2b2d      	cmp	r3, #45	; 0x2d
 8002f7c:	d13c      	bne.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                         	 	        				       uRx_Data1[uLength1]='Q';
 8002f7e:	4b82      	ldr	r3, [pc, #520]	; (8003188 <HAL_UART_RxCpltCallback+0x1b60>)
 8002f80:	781b      	ldrb	r3, [r3, #0]
 8002f82:	461a      	mov	r2, r3
 8002f84:	4b81      	ldr	r3, [pc, #516]	; (800318c <HAL_UART_RxCpltCallback+0x1b64>)
 8002f86:	2151      	movs	r1, #81	; 0x51
 8002f88:	5499      	strb	r1, [r3, r2]
                         	 	        				       uLength1++; uRx_Data2[h]='-';
 8002f8a:	4b7f      	ldr	r3, [pc, #508]	; (8003188 <HAL_UART_RxCpltCallback+0x1b60>)
 8002f8c:	781b      	ldrb	r3, [r3, #0]
 8002f8e:	3301      	adds	r3, #1
 8002f90:	b2da      	uxtb	r2, r3
 8002f92:	4b7d      	ldr	r3, [pc, #500]	; (8003188 <HAL_UART_RxCpltCallback+0x1b60>)
 8002f94:	701a      	strb	r2, [r3, #0]
 8002f96:	4b7e      	ldr	r3, [pc, #504]	; (8003190 <HAL_UART_RxCpltCallback+0x1b68>)
 8002f98:	681b      	ldr	r3, [r3, #0]
 8002f9a:	4a7e      	ldr	r2, [pc, #504]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 8002f9c:	212d      	movs	r1, #45	; 0x2d
 8002f9e:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+1]='-';
 8002fa0:	4b7b      	ldr	r3, [pc, #492]	; (8003190 <HAL_UART_RxCpltCallback+0x1b68>)
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	3301      	adds	r3, #1
 8002fa6:	4a7b      	ldr	r2, [pc, #492]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 8002fa8:	212d      	movs	r1, #45	; 0x2d
 8002faa:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+2]='.';
 8002fac:	4b78      	ldr	r3, [pc, #480]	; (8003190 <HAL_UART_RxCpltCallback+0x1b68>)
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	3302      	adds	r3, #2
 8002fb2:	4a78      	ldr	r2, [pc, #480]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 8002fb4:	212e      	movs	r1, #46	; 0x2e
 8002fb6:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+3]='-';
 8002fb8:	4b75      	ldr	r3, [pc, #468]	; (8003190 <HAL_UART_RxCpltCallback+0x1b68>)
 8002fba:	681b      	ldr	r3, [r3, #0]
 8002fbc:	3303      	adds	r3, #3
 8002fbe:	4a75      	ldr	r2, [pc, #468]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 8002fc0:	212d      	movs	r1, #45	; 0x2d
 8002fc2:	54d1      	strb	r1, [r2, r3]
                                      	 	        	    	uRx_Data2[h+4]='/';
 8002fc4:	4b72      	ldr	r3, [pc, #456]	; (8003190 <HAL_UART_RxCpltCallback+0x1b68>)
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	3304      	adds	r3, #4
 8002fca:	4a72      	ldr	r2, [pc, #456]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 8002fcc:	212f      	movs	r1, #47	; 0x2f
 8002fce:	54d1      	strb	r1, [r2, r3]
                                        	 	        	    	//k=k+5;
                                        	 	        	        uLength2+=5;
 8002fd0:	4b71      	ldr	r3, [pc, #452]	; (8003198 <HAL_UART_RxCpltCallback+0x1b70>)
 8002fd2:	781b      	ldrb	r3, [r3, #0]
 8002fd4:	3305      	adds	r3, #5
 8002fd6:	b2da      	uxtb	r2, r3
 8002fd8:	4b6f      	ldr	r3, [pc, #444]	; (8003198 <HAL_UART_RxCpltCallback+0x1b70>)
 8002fda:	701a      	strb	r2, [r3, #0]
 8002fdc:	e00c      	b.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                         	 	        				   }

                      	 	        				   }
                      	 	        				 else if (uRx_Data[k+2]=='-') {
 8002fde:	4b68      	ldr	r3, [pc, #416]	; (8003180 <HAL_UART_RxCpltCallback+0x1b58>)
 8002fe0:	681b      	ldr	r3, [r3, #0]
 8002fe2:	3302      	adds	r3, #2
 8002fe4:	4a67      	ldr	r2, [pc, #412]	; (8003184 <HAL_UART_RxCpltCallback+0x1b5c>)
 8002fe6:	5cd3      	ldrb	r3, [r2, r3]
 8002fe8:	2b2d      	cmp	r3, #45	; 0x2d
 8002fea:	d105      	bne.n	8002ff8 <HAL_UART_RxCpltCallback+0x19d0>
                      	 	        					 if (uRx_Data[k+3]=='.') {
 8002fec:	4b64      	ldr	r3, [pc, #400]	; (8003180 <HAL_UART_RxCpltCallback+0x1b58>)
 8002fee:	681b      	ldr	r3, [r3, #0]
 8002ff0:	3303      	adds	r3, #3
 8002ff2:	4a64      	ldr	r2, [pc, #400]	; (8003184 <HAL_UART_RxCpltCallback+0x1b5c>)
 8002ff4:	5cd3      	ldrb	r3, [r2, r3]
 8002ff6:	2b2e      	cmp	r3, #46	; 0x2e



                        	 	        		  }

                                                   k=i+1;
 8002ff8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002ffa:	3301      	adds	r3, #1
 8002ffc:	4a60      	ldr	r2, [pc, #384]	; (8003180 <HAL_UART_RxCpltCallback+0x1b58>)
 8002ffe:	6013      	str	r3, [r2, #0]
                        	 	        	   }

                        	 	         }
                                       //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
                                                               	 	        	//HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
                                                               	 	        	 for (int j=h;j<=uLength2-1;j++){
 8003000:	4b63      	ldr	r3, [pc, #396]	; (8003190 <HAL_UART_RxCpltCallback+0x1b68>)
 8003002:	681b      	ldr	r3, [r3, #0]
 8003004:	637b      	str	r3, [r7, #52]	; 0x34
 8003006:	e0a3      	b.n	8003150 <HAL_UART_RxCpltCallback+0x1b28>
                                                               	 	        		 if (uRx_Data2[j]=='.'){
 8003008:	4a62      	ldr	r2, [pc, #392]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 800300a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800300c:	4413      	add	r3, r2
 800300e:	781b      	ldrb	r3, [r3, #0]
 8003010:	2b2e      	cmp	r3, #46	; 0x2e
 8003012:	d112      	bne.n	800303a <HAL_UART_RxCpltCallback+0x1a12>
                                                                    	 	            HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003014:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003018:	4860      	ldr	r0, [pc, #384]	; (800319c <HAL_UART_RxCpltCallback+0x1b74>)
 800301a:	f002 fd62 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	            HAL_Delay(500);
 800301e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003022:	f002 f927 	bl	8005274 <HAL_Delay>
                                                                    	 	            HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003026:	f44f 7180 	mov.w	r1, #256	; 0x100
 800302a:	485c      	ldr	r0, [pc, #368]	; (800319c <HAL_UART_RxCpltCallback+0x1b74>)
 800302c:	f002 fd59 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	            HAL_Delay(500);
 8003030:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003034:	f002 f91e 	bl	8005274 <HAL_Delay>
 8003038:	e087      	b.n	800314a <HAL_UART_RxCpltCallback+0x1b22>
                                                                    	 	          }
                                                                    	 	         else  if (uRx_Data2[j]=='-'){
 800303a:	4a56      	ldr	r2, [pc, #344]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 800303c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800303e:	4413      	add	r3, r2
 8003040:	781b      	ldrb	r3, [r3, #0]
 8003042:	2b2d      	cmp	r3, #45	; 0x2d
 8003044:	d110      	bne.n	8003068 <HAL_UART_RxCpltCallback+0x1a40>
                                                                    	 	            HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003046:	2104      	movs	r1, #4
 8003048:	4855      	ldr	r0, [pc, #340]	; (80031a0 <HAL_UART_RxCpltCallback+0x1b78>)
 800304a:	f002 fd4a 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	            HAL_Delay(500);
 800304e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003052:	f002 f90f 	bl	8005274 <HAL_Delay>
                                                                    	 	            HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003056:	2104      	movs	r1, #4
 8003058:	4851      	ldr	r0, [pc, #324]	; (80031a0 <HAL_UART_RxCpltCallback+0x1b78>)
 800305a:	f002 fd42 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	            HAL_Delay(500);
 800305e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003062:	f002 f907 	bl	8005274 <HAL_Delay>
 8003066:	e070      	b.n	800314a <HAL_UART_RxCpltCallback+0x1b22>

                                                                    	 	       }
                                                                    	 	         else if (uRx_Data2[j]=='/'){
 8003068:	4a4a      	ldr	r2, [pc, #296]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 800306a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800306c:	4413      	add	r3, r2
 800306e:	781b      	ldrb	r3, [r3, #0]
 8003070:	2b2f      	cmp	r3, #47	; 0x2f
 8003072:	d130      	bne.n	80030d6 <HAL_UART_RxCpltCallback+0x1aae>
                                                                    	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003074:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003078:	4848      	ldr	r0, [pc, #288]	; (800319c <HAL_UART_RxCpltCallback+0x1b74>)
 800307a:	f002 fd32 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 800307e:	2104      	movs	r1, #4
 8003080:	4847      	ldr	r0, [pc, #284]	; (80031a0 <HAL_UART_RxCpltCallback+0x1b78>)
 8003082:	f002 fd2e 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	        	  HAL_Delay(250);
 8003086:	20fa      	movs	r0, #250	; 0xfa
 8003088:	f002 f8f4 	bl	8005274 <HAL_Delay>
                                                                    	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 800308c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003090:	4842      	ldr	r0, [pc, #264]	; (800319c <HAL_UART_RxCpltCallback+0x1b74>)
 8003092:	f002 fd26 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003096:	2104      	movs	r1, #4
 8003098:	4841      	ldr	r0, [pc, #260]	; (80031a0 <HAL_UART_RxCpltCallback+0x1b78>)
 800309a:	f002 fd22 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	        	  HAL_Delay(250);
 800309e:	20fa      	movs	r0, #250	; 0xfa
 80030a0:	f002 f8e8 	bl	8005274 <HAL_Delay>
                                                                    	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 80030a4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80030a8:	483c      	ldr	r0, [pc, #240]	; (800319c <HAL_UART_RxCpltCallback+0x1b74>)
 80030aa:	f002 fd1a 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 80030ae:	2104      	movs	r1, #4
 80030b0:	483b      	ldr	r0, [pc, #236]	; (80031a0 <HAL_UART_RxCpltCallback+0x1b78>)
 80030b2:	f002 fd16 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	        	  HAL_Delay(250);
 80030b6:	20fa      	movs	r0, #250	; 0xfa
 80030b8:	f002 f8dc 	bl	8005274 <HAL_Delay>
                                                                    	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 80030bc:	f44f 7180 	mov.w	r1, #256	; 0x100
 80030c0:	4836      	ldr	r0, [pc, #216]	; (800319c <HAL_UART_RxCpltCallback+0x1b74>)
 80030c2:	f002 fd0e 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 80030c6:	2104      	movs	r1, #4
 80030c8:	4835      	ldr	r0, [pc, #212]	; (80031a0 <HAL_UART_RxCpltCallback+0x1b78>)
 80030ca:	f002 fd0a 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	        	  HAL_Delay(250);
 80030ce:	20fa      	movs	r0, #250	; 0xfa
 80030d0:	f002 f8d0 	bl	8005274 <HAL_Delay>
 80030d4:	e039      	b.n	800314a <HAL_UART_RxCpltCallback+0x1b22>
                                                                    	 	            }
                                                                    	 	         else if (uRx_Data2[j]=='d'){
 80030d6:	4a2f      	ldr	r2, [pc, #188]	; (8003194 <HAL_UART_RxCpltCallback+0x1b6c>)
 80030d8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80030da:	4413      	add	r3, r2
 80030dc:	781b      	ldrb	r3, [r3, #0]
 80030de:	2b64      	cmp	r3, #100	; 0x64
 80030e0:	d133      	bne.n	800314a <HAL_UART_RxCpltCallback+0x1b22>
                                                                    	 	        	 //j=uLength2;
                                                                    	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 80030e2:	2104      	movs	r1, #4
 80030e4:	482e      	ldr	r0, [pc, #184]	; (80031a0 <HAL_UART_RxCpltCallback+0x1b78>)
 80030e6:	f002 fcfc 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                    	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 80030ea:	f44f 7180 	mov.w	r1, #256	; 0x100
 80030ee:	482b      	ldr	r0, [pc, #172]	; (800319c <HAL_UART_RxCpltCallback+0x1b74>)
 80030f0:	f002 fcf7 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                   	 	        	  HAL_Delay(166);
 80030f4:	20a6      	movs	r0, #166	; 0xa6
 80030f6:	f002 f8bd 	bl	8005274 <HAL_Delay>
                                                                   	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 80030fa:	2104      	movs	r1, #4
 80030fc:	4828      	ldr	r0, [pc, #160]	; (80031a0 <HAL_UART_RxCpltCallback+0x1b78>)
 80030fe:	f002 fcf0 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                   	 	        	  HAL_Delay(167);
 8003102:	20a7      	movs	r0, #167	; 0xa7
 8003104:	f002 f8b6 	bl	8005274 <HAL_Delay>
                                                                   	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003108:	2104      	movs	r1, #4
 800310a:	4825      	ldr	r0, [pc, #148]	; (80031a0 <HAL_UART_RxCpltCallback+0x1b78>)
 800310c:	f002 fce9 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                   	 	        	  HAL_Delay(166);
 8003110:	20a6      	movs	r0, #166	; 0xa6
 8003112:	f002 f8af 	bl	8005274 <HAL_Delay>
                                                                   	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003116:	2104      	movs	r1, #4
 8003118:	4821      	ldr	r0, [pc, #132]	; (80031a0 <HAL_UART_RxCpltCallback+0x1b78>)
 800311a:	f002 fce2 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                   	 	        	  HAL_Delay(167);
 800311e:	20a7      	movs	r0, #167	; 0xa7
 8003120:	f002 f8a8 	bl	8005274 <HAL_Delay>
                                                                   	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003124:	2104      	movs	r1, #4
 8003126:	481e      	ldr	r0, [pc, #120]	; (80031a0 <HAL_UART_RxCpltCallback+0x1b78>)
 8003128:	f002 fcdb 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                   	 	        	  HAL_Delay(166);
 800312c:	20a6      	movs	r0, #166	; 0xa6
 800312e:	f002 f8a1 	bl	8005274 <HAL_Delay>
                                                                   	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003132:	2104      	movs	r1, #4
 8003134:	481a      	ldr	r0, [pc, #104]	; (80031a0 <HAL_UART_RxCpltCallback+0x1b78>)
 8003136:	f002 fcd4 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                   	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 800313a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800313e:	4817      	ldr	r0, [pc, #92]	; (800319c <HAL_UART_RxCpltCallback+0x1b74>)
 8003140:	f002 fccf 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                   	 	        	  HAL_Delay(168);
 8003144:	20a8      	movs	r0, #168	; 0xa8
 8003146:	f002 f895 	bl	8005274 <HAL_Delay>
                                                               	 	        	 for (int j=h;j<=uLength2-1;j++){
 800314a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800314c:	3301      	adds	r3, #1
 800314e:	637b      	str	r3, [r7, #52]	; 0x34
 8003150:	4b11      	ldr	r3, [pc, #68]	; (8003198 <HAL_UART_RxCpltCallback+0x1b70>)
 8003152:	781b      	ldrb	r3, [r3, #0]
 8003154:	461a      	mov	r2, r3
 8003156:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003158:	4293      	cmp	r3, r2
 800315a:	f6ff af55 	blt.w	8003008 <HAL_UART_RxCpltCallback+0x19e0>
                                                                    	 	         }
                                                               	 	        	 }
                                                               	 	        	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
                                                               	 	        	//HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
                                                               	 	        	 h=uLength2;
 800315e:	4b0e      	ldr	r3, [pc, #56]	; (8003198 <HAL_UART_RxCpltCallback+0x1b70>)
 8003160:	781b      	ldrb	r3, [r3, #0]
 8003162:	461a      	mov	r2, r3
 8003164:	4b0a      	ldr	r3, [pc, #40]	; (8003190 <HAL_UART_RxCpltCallback+0x1b68>)
 8003166:	601a      	str	r2, [r3, #0]
                                       for (int i=0;i<uLength-1;i++){
 8003168:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800316a:	3301      	adds	r3, #1
 800316c:	647b      	str	r3, [r7, #68]	; 0x44
 800316e:	4b0d      	ldr	r3, [pc, #52]	; (80031a4 <HAL_UART_RxCpltCallback+0x1b7c>)
 8003170:	781b      	ldrb	r3, [r3, #0]
 8003172:	3b01      	subs	r3, #1
 8003174:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8003176:	429a      	cmp	r2, r3
 8003178:	f6fe afc4 	blt.w	8002104 <HAL_UART_RxCpltCallback+0xadc>
 800317c:	f001 bd49 	b.w	8004c12 <HAL_UART_RxCpltCallback+0x35ea>
 8003180:	20001434 	.word	0x20001434
 8003184:	2000042c 	.word	0x2000042c
 8003188:	2000142d 	.word	0x2000142d
 800318c:	2000082c 	.word	0x2000082c
 8003190:	20001438 	.word	0x20001438
 8003194:	20000c2c 	.word	0x20000c2c
 8003198:	2000142e 	.word	0x2000142e
 800319c:	40010800 	.word	0x40010800
 80031a0:	40011400 	.word	0x40011400
 80031a4:	2000142c 	.word	0x2000142c
                            	   }
                    		   }

                    	   }
                    	   else {
                    		   if (uRx_Data0[0]==1){
 80031a8:	4ba4      	ldr	r3, [pc, #656]	; (800343c <HAL_UART_RxCpltCallback+0x1e14>)
 80031aa:	781b      	ldrb	r3, [r3, #0]
 80031ac:	2b01      	cmp	r3, #1
 80031ae:	f040 84b6 	bne.w	8003b1e <HAL_UART_RxCpltCallback+0x24f6>
            				   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
 80031b2:	2201      	movs	r2, #1
 80031b4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80031b8:	48a1      	ldr	r0, [pc, #644]	; (8003440 <HAL_UART_RxCpltCallback+0x1e18>)
 80031ba:	f002 fc7a 	bl	8005ab2 <HAL_GPIO_WritePin>
            				   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
 80031be:	2201      	movs	r2, #1
 80031c0:	2104      	movs	r1, #4
 80031c2:	48a0      	ldr	r0, [pc, #640]	; (8003444 <HAL_UART_RxCpltCallback+0x1e1c>)
 80031c4:	f002 fc75 	bl	8005ab2 <HAL_GPIO_WritePin>
            				   for (int i=0;i<uLength-1;i++){
 80031c8:	2300      	movs	r3, #0
 80031ca:	633b      	str	r3, [r7, #48]	; 0x30
 80031cc:	f000 bc9e 	b.w	8003b0c <HAL_UART_RxCpltCallback+0x24e4>
                                   {
                    	 	        	 switch (uRx_Data[i]){
 80031d0:	4a9d      	ldr	r2, [pc, #628]	; (8003448 <HAL_UART_RxCpltCallback+0x1e20>)
 80031d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80031d4:	4413      	add	r3, r2
 80031d6:	781b      	ldrb	r3, [r3, #0]
 80031d8:	3b41      	subs	r3, #65	; 0x41
 80031da:	2b19      	cmp	r3, #25
 80031dc:	f200 8376 	bhi.w	80038cc <HAL_UART_RxCpltCallback+0x22a4>
 80031e0:	a201      	add	r2, pc, #4	; (adr r2, 80031e8 <HAL_UART_RxCpltCallback+0x1bc0>)
 80031e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031e6:	bf00      	nop
 80031e8:	08003251 	.word	0x08003251
 80031ec:	08003281 	.word	0x08003281
 80031f0:	080032c9 	.word	0x080032c9
 80031f4:	08003311 	.word	0x08003311
 80031f8:	0800334d 	.word	0x0800334d
 80031fc:	08003371 	.word	0x08003371
 8003200:	080033b9 	.word	0x080033b9
 8003204:	080033f5 	.word	0x080033f5
 8003208:	08003459 	.word	0x08003459
 800320c:	08003489 	.word	0x08003489
 8003210:	080034d1 	.word	0x080034d1
 8003214:	0800350d 	.word	0x0800350d
 8003218:	08003555 	.word	0x08003555
 800321c:	08003585 	.word	0x08003585
 8003220:	080035b5 	.word	0x080035b5
 8003224:	080035f1 	.word	0x080035f1
 8003228:	08003639 	.word	0x08003639
 800322c:	08003681 	.word	0x08003681
 8003230:	080036c9 	.word	0x080036c9
 8003234:	08003705 	.word	0x08003705
 8003238:	08003729 	.word	0x08003729
 800323c:	08003765 	.word	0x08003765
 8003240:	080037ad 	.word	0x080037ad
 8003244:	080037e9 	.word	0x080037e9
 8003248:	08003831 	.word	0x08003831
 800324c:	08003879 	.word	0x08003879
                    	 	        	     case 'A':
                    	 	        	    	uRx_Data1[k]='.';
 8003250:	4b7e      	ldr	r3, [pc, #504]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	4a7e      	ldr	r2, [pc, #504]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 8003256:	212e      	movs	r1, #46	; 0x2e
 8003258:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+1]='-';
 800325a:	4b7c      	ldr	r3, [pc, #496]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 800325c:	681b      	ldr	r3, [r3, #0]
 800325e:	3301      	adds	r3, #1
 8003260:	4a7b      	ldr	r2, [pc, #492]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 8003262:	212d      	movs	r1, #45	; 0x2d
 8003264:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+2]='/';
 8003266:	4b79      	ldr	r3, [pc, #484]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	3302      	adds	r3, #2
 800326c:	4a78      	ldr	r2, [pc, #480]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 800326e:	212f      	movs	r1, #47	; 0x2f
 8003270:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	//k=k+3;
                    	 	        	        uLength1+=3;
 8003272:	4b78      	ldr	r3, [pc, #480]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 8003274:	781b      	ldrb	r3, [r3, #0]
 8003276:	3303      	adds	r3, #3
 8003278:	b2da      	uxtb	r2, r3
 800327a:	4b76      	ldr	r3, [pc, #472]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 800327c:	701a      	strb	r2, [r3, #0]
                    	 	        		 break;
 800327e:	e387      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                    	 	        		 case 'B':
                     	 	        	    	uRx_Data1[k]='-';
 8003280:	4b72      	ldr	r3, [pc, #456]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	4a72      	ldr	r2, [pc, #456]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 8003286:	212d      	movs	r1, #45	; 0x2d
 8003288:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	uRx_Data1[k+1]='.';
 800328a:	4b70      	ldr	r3, [pc, #448]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	3301      	adds	r3, #1
 8003290:	4a6f      	ldr	r2, [pc, #444]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 8003292:	212e      	movs	r1, #46	; 0x2e
 8003294:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	uRx_Data1[k+2]='.';
 8003296:	4b6d      	ldr	r3, [pc, #436]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003298:	681b      	ldr	r3, [r3, #0]
 800329a:	3302      	adds	r3, #2
 800329c:	4a6c      	ldr	r2, [pc, #432]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 800329e:	212e      	movs	r1, #46	; 0x2e
 80032a0:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	uRx_Data1[k+3]='.';
 80032a2:	4b6a      	ldr	r3, [pc, #424]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80032a4:	681b      	ldr	r3, [r3, #0]
 80032a6:	3303      	adds	r3, #3
 80032a8:	4a69      	ldr	r2, [pc, #420]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80032aa:	212e      	movs	r1, #46	; 0x2e
 80032ac:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	uRx_Data1[k+4]='/';
 80032ae:	4b67      	ldr	r3, [pc, #412]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80032b0:	681b      	ldr	r3, [r3, #0]
 80032b2:	3304      	adds	r3, #4
 80032b4:	4a66      	ldr	r2, [pc, #408]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80032b6:	212f      	movs	r1, #47	; 0x2f
 80032b8:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+5;
                     	 	        	        uLength1+=5;
 80032ba:	4b66      	ldr	r3, [pc, #408]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 80032bc:	781b      	ldrb	r3, [r3, #0]
 80032be:	3305      	adds	r3, #5
 80032c0:	b2da      	uxtb	r2, r3
 80032c2:	4b64      	ldr	r3, [pc, #400]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 80032c4:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 80032c6:	e363      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'C':
                     	 	        			 uRx_Data1[k]='-';
 80032c8:	4b60      	ldr	r3, [pc, #384]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80032ca:	681b      	ldr	r3, [r3, #0]
 80032cc:	4a60      	ldr	r2, [pc, #384]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80032ce:	212d      	movs	r1, #45	; 0x2d
 80032d0:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	     uRx_Data1[k+1]='.';
 80032d2:	4b5e      	ldr	r3, [pc, #376]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	3301      	adds	r3, #1
 80032d8:	4a5d      	ldr	r2, [pc, #372]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80032da:	212e      	movs	r1, #46	; 0x2e
 80032dc:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	     uRx_Data1[k+2]='-';
 80032de:	4b5b      	ldr	r3, [pc, #364]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80032e0:	681b      	ldr	r3, [r3, #0]
 80032e2:	3302      	adds	r3, #2
 80032e4:	4a5a      	ldr	r2, [pc, #360]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80032e6:	212d      	movs	r1, #45	; 0x2d
 80032e8:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	     uRx_Data1[k+3]='.';
 80032ea:	4b58      	ldr	r3, [pc, #352]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80032ec:	681b      	ldr	r3, [r3, #0]
 80032ee:	3303      	adds	r3, #3
 80032f0:	4a57      	ldr	r2, [pc, #348]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80032f2:	212e      	movs	r1, #46	; 0x2e
 80032f4:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	     uRx_Data1[k+4]='/';
 80032f6:	4b55      	ldr	r3, [pc, #340]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	3304      	adds	r3, #4
 80032fc:	4a54      	ldr	r2, [pc, #336]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80032fe:	212f      	movs	r1, #47	; 0x2f
 8003300:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+5;
                     	 	        	        uLength1+=5;
 8003302:	4b54      	ldr	r3, [pc, #336]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 8003304:	781b      	ldrb	r3, [r3, #0]
 8003306:	3305      	adds	r3, #5
 8003308:	b2da      	uxtb	r2, r3
 800330a:	4b52      	ldr	r3, [pc, #328]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 800330c:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 800330e:	e33f      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'D':
                     	 	        	    uRx_Data1[k]='-';
 8003310:	4b4e      	ldr	r3, [pc, #312]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003312:	681b      	ldr	r3, [r3, #0]
 8003314:	4a4e      	ldr	r2, [pc, #312]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 8003316:	212d      	movs	r1, #45	; 0x2d
 8003318:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+1]='.';
 800331a:	4b4c      	ldr	r3, [pc, #304]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	3301      	adds	r3, #1
 8003320:	4a4b      	ldr	r2, [pc, #300]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 8003322:	212e      	movs	r1, #46	; 0x2e
 8003324:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+2]='.';
 8003326:	4b49      	ldr	r3, [pc, #292]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003328:	681b      	ldr	r3, [r3, #0]
 800332a:	3302      	adds	r3, #2
 800332c:	4a48      	ldr	r2, [pc, #288]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 800332e:	212e      	movs	r1, #46	; 0x2e
 8003330:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+3]='/';
 8003332:	4b46      	ldr	r3, [pc, #280]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003334:	681b      	ldr	r3, [r3, #0]
 8003336:	3303      	adds	r3, #3
 8003338:	4a45      	ldr	r2, [pc, #276]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 800333a:	212f      	movs	r1, #47	; 0x2f
 800333c:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+4;
                     	 	        	        uLength1+=4;
 800333e:	4b45      	ldr	r3, [pc, #276]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 8003340:	781b      	ldrb	r3, [r3, #0]
 8003342:	3304      	adds	r3, #4
 8003344:	b2da      	uxtb	r2, r3
 8003346:	4b43      	ldr	r3, [pc, #268]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 8003348:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 800334a:	e321      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'E':
                     	 	        			 uRx_Data1[k]='.';
 800334c:	4b3f      	ldr	r3, [pc, #252]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 800334e:	681b      	ldr	r3, [r3, #0]
 8003350:	4a3f      	ldr	r2, [pc, #252]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 8003352:	212e      	movs	r1, #46	; 0x2e
 8003354:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+1]='/';
 8003356:	4b3d      	ldr	r3, [pc, #244]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	3301      	adds	r3, #1
 800335c:	4a3c      	ldr	r2, [pc, #240]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 800335e:	212f      	movs	r1, #47	; 0x2f
 8003360:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+2;
                     	 	        	        uLength1+=2;
 8003362:	4b3c      	ldr	r3, [pc, #240]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 8003364:	781b      	ldrb	r3, [r3, #0]
 8003366:	3302      	adds	r3, #2
 8003368:	b2da      	uxtb	r2, r3
 800336a:	4b3a      	ldr	r3, [pc, #232]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 800336c:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 800336e:	e30f      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'F':
                     	 	        			 uRx_Data1[k]='.';
 8003370:	4b36      	ldr	r3, [pc, #216]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003372:	681b      	ldr	r3, [r3, #0]
 8003374:	4a36      	ldr	r2, [pc, #216]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 8003376:	212e      	movs	r1, #46	; 0x2e
 8003378:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+1]='.';
 800337a:	4b34      	ldr	r3, [pc, #208]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 800337c:	681b      	ldr	r3, [r3, #0]
 800337e:	3301      	adds	r3, #1
 8003380:	4a33      	ldr	r2, [pc, #204]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 8003382:	212e      	movs	r1, #46	; 0x2e
 8003384:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+2]='-';
 8003386:	4b31      	ldr	r3, [pc, #196]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003388:	681b      	ldr	r3, [r3, #0]
 800338a:	3302      	adds	r3, #2
 800338c:	4a30      	ldr	r2, [pc, #192]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 800338e:	212d      	movs	r1, #45	; 0x2d
 8003390:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+3]='.';
 8003392:	4b2e      	ldr	r3, [pc, #184]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003394:	681b      	ldr	r3, [r3, #0]
 8003396:	3303      	adds	r3, #3
 8003398:	4a2d      	ldr	r2, [pc, #180]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 800339a:	212e      	movs	r1, #46	; 0x2e
 800339c:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+4]='/';
 800339e:	4b2b      	ldr	r3, [pc, #172]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	3304      	adds	r3, #4
 80033a4:	4a2a      	ldr	r2, [pc, #168]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80033a6:	212f      	movs	r1, #47	; 0x2f
 80033a8:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+5;
                     	 	        	        uLength1+=5;
 80033aa:	4b2a      	ldr	r3, [pc, #168]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 80033ac:	781b      	ldrb	r3, [r3, #0]
 80033ae:	3305      	adds	r3, #5
 80033b0:	b2da      	uxtb	r2, r3
 80033b2:	4b28      	ldr	r3, [pc, #160]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 80033b4:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 80033b6:	e2eb      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'G':
                     	 	        			 uRx_Data1[k]='-';
 80033b8:	4b24      	ldr	r3, [pc, #144]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80033ba:	681b      	ldr	r3, [r3, #0]
 80033bc:	4a24      	ldr	r2, [pc, #144]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80033be:	212d      	movs	r1, #45	; 0x2d
 80033c0:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+1]='-';
 80033c2:	4b22      	ldr	r3, [pc, #136]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80033c4:	681b      	ldr	r3, [r3, #0]
 80033c6:	3301      	adds	r3, #1
 80033c8:	4a21      	ldr	r2, [pc, #132]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80033ca:	212d      	movs	r1, #45	; 0x2d
 80033cc:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+2]='.';
 80033ce:	4b1f      	ldr	r3, [pc, #124]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80033d0:	681b      	ldr	r3, [r3, #0]
 80033d2:	3302      	adds	r3, #2
 80033d4:	4a1e      	ldr	r2, [pc, #120]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80033d6:	212e      	movs	r1, #46	; 0x2e
 80033d8:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+3]='/';
 80033da:	4b1c      	ldr	r3, [pc, #112]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80033dc:	681b      	ldr	r3, [r3, #0]
 80033de:	3303      	adds	r3, #3
 80033e0:	4a1b      	ldr	r2, [pc, #108]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80033e2:	212f      	movs	r1, #47	; 0x2f
 80033e4:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+4;
                     	 	        	        uLength1+=4;
 80033e6:	4b1b      	ldr	r3, [pc, #108]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 80033e8:	781b      	ldrb	r3, [r3, #0]
 80033ea:	3304      	adds	r3, #4
 80033ec:	b2da      	uxtb	r2, r3
 80033ee:	4b19      	ldr	r3, [pc, #100]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 80033f0:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 80033f2:	e2cd      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'H':
                     	 	        			 uRx_Data1[k]='.';
 80033f4:	4b15      	ldr	r3, [pc, #84]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 80033f6:	681b      	ldr	r3, [r3, #0]
 80033f8:	4a15      	ldr	r2, [pc, #84]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 80033fa:	212e      	movs	r1, #46	; 0x2e
 80033fc:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+1]='.';
 80033fe:	4b13      	ldr	r3, [pc, #76]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003400:	681b      	ldr	r3, [r3, #0]
 8003402:	3301      	adds	r3, #1
 8003404:	4a12      	ldr	r2, [pc, #72]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 8003406:	212e      	movs	r1, #46	; 0x2e
 8003408:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+2]='.';
 800340a:	4b10      	ldr	r3, [pc, #64]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 800340c:	681b      	ldr	r3, [r3, #0]
 800340e:	3302      	adds	r3, #2
 8003410:	4a0f      	ldr	r2, [pc, #60]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 8003412:	212e      	movs	r1, #46	; 0x2e
 8003414:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+3]='.';
 8003416:	4b0d      	ldr	r3, [pc, #52]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003418:	681b      	ldr	r3, [r3, #0]
 800341a:	3303      	adds	r3, #3
 800341c:	4a0c      	ldr	r2, [pc, #48]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 800341e:	212e      	movs	r1, #46	; 0x2e
 8003420:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+4]='/';
 8003422:	4b0a      	ldr	r3, [pc, #40]	; (800344c <HAL_UART_RxCpltCallback+0x1e24>)
 8003424:	681b      	ldr	r3, [r3, #0]
 8003426:	3304      	adds	r3, #4
 8003428:	4a09      	ldr	r2, [pc, #36]	; (8003450 <HAL_UART_RxCpltCallback+0x1e28>)
 800342a:	212f      	movs	r1, #47	; 0x2f
 800342c:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+5;
                     	 	        	        uLength1+=5;
 800342e:	4b09      	ldr	r3, [pc, #36]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 8003430:	781b      	ldrb	r3, [r3, #0]
 8003432:	3305      	adds	r3, #5
 8003434:	b2da      	uxtb	r2, r3
 8003436:	4b07      	ldr	r3, [pc, #28]	; (8003454 <HAL_UART_RxCpltCallback+0x1e2c>)
 8003438:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 800343a:	e2a9      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
 800343c:	20000428 	.word	0x20000428
 8003440:	40010800 	.word	0x40010800
 8003444:	40011400 	.word	0x40011400
 8003448:	2000042c 	.word	0x2000042c
 800344c:	20001434 	.word	0x20001434
 8003450:	2000082c 	.word	0x2000082c
 8003454:	2000142d 	.word	0x2000142d
                     	 	        		 case 'I':
                     	 	        			 uRx_Data1[k]='.';
 8003458:	4b98      	ldr	r3, [pc, #608]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	4a98      	ldr	r2, [pc, #608]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800345e:	212e      	movs	r1, #46	; 0x2e
 8003460:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+1]='.';
 8003462:	4b96      	ldr	r3, [pc, #600]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003464:	681b      	ldr	r3, [r3, #0]
 8003466:	3301      	adds	r3, #1
 8003468:	4a95      	ldr	r2, [pc, #596]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800346a:	212e      	movs	r1, #46	; 0x2e
 800346c:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+2]='/';
 800346e:	4b93      	ldr	r3, [pc, #588]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003470:	681b      	ldr	r3, [r3, #0]
 8003472:	3302      	adds	r3, #2
 8003474:	4a92      	ldr	r2, [pc, #584]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003476:	212f      	movs	r1, #47	; 0x2f
 8003478:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+3;
                     	 	        	        uLength1+=3;
 800347a:	4b92      	ldr	r3, [pc, #584]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 800347c:	781b      	ldrb	r3, [r3, #0]
 800347e:	3303      	adds	r3, #3
 8003480:	b2da      	uxtb	r2, r3
 8003482:	4b90      	ldr	r3, [pc, #576]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 8003484:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 8003486:	e283      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'J':uRx_Data1[k]='.';
 8003488:	4b8c      	ldr	r3, [pc, #560]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 800348a:	681b      	ldr	r3, [r3, #0]
 800348c:	4a8c      	ldr	r2, [pc, #560]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800348e:	212e      	movs	r1, #46	; 0x2e
 8003490:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+1]='-';
 8003492:	4b8a      	ldr	r3, [pc, #552]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003494:	681b      	ldr	r3, [r3, #0]
 8003496:	3301      	adds	r3, #1
 8003498:	4a89      	ldr	r2, [pc, #548]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800349a:	212d      	movs	r1, #45	; 0x2d
 800349c:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+2]='-';
 800349e:	4b87      	ldr	r3, [pc, #540]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	3302      	adds	r3, #2
 80034a4:	4a86      	ldr	r2, [pc, #536]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80034a6:	212d      	movs	r1, #45	; 0x2d
 80034a8:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+3]='-';
 80034aa:	4b84      	ldr	r3, [pc, #528]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80034ac:	681b      	ldr	r3, [r3, #0]
 80034ae:	3303      	adds	r3, #3
 80034b0:	4a83      	ldr	r2, [pc, #524]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80034b2:	212d      	movs	r1, #45	; 0x2d
 80034b4:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+4]='/';
 80034b6:	4b81      	ldr	r3, [pc, #516]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80034b8:	681b      	ldr	r3, [r3, #0]
 80034ba:	3304      	adds	r3, #4
 80034bc:	4a80      	ldr	r2, [pc, #512]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80034be:	212f      	movs	r1, #47	; 0x2f
 80034c0:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+5;
                     	 	        	        uLength1+=5;
 80034c2:	4b80      	ldr	r3, [pc, #512]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 80034c4:	781b      	ldrb	r3, [r3, #0]
 80034c6:	3305      	adds	r3, #5
 80034c8:	b2da      	uxtb	r2, r3
 80034ca:	4b7e      	ldr	r3, [pc, #504]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 80034cc:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 80034ce:	e25f      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'K':
                     	 	        			 uRx_Data1[k]='-';
 80034d0:	4b7a      	ldr	r3, [pc, #488]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80034d2:	681b      	ldr	r3, [r3, #0]
 80034d4:	4a7a      	ldr	r2, [pc, #488]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80034d6:	212d      	movs	r1, #45	; 0x2d
 80034d8:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+1]='.';
 80034da:	4b78      	ldr	r3, [pc, #480]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	3301      	adds	r3, #1
 80034e0:	4a77      	ldr	r2, [pc, #476]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80034e2:	212e      	movs	r1, #46	; 0x2e
 80034e4:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+2]='-';
 80034e6:	4b75      	ldr	r3, [pc, #468]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80034e8:	681b      	ldr	r3, [r3, #0]
 80034ea:	3302      	adds	r3, #2
 80034ec:	4a74      	ldr	r2, [pc, #464]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80034ee:	212d      	movs	r1, #45	; 0x2d
 80034f0:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+3]='/';
 80034f2:	4b72      	ldr	r3, [pc, #456]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	3303      	adds	r3, #3
 80034f8:	4a71      	ldr	r2, [pc, #452]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80034fa:	212f      	movs	r1, #47	; 0x2f
 80034fc:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+4;
                     	 	        	        uLength1+=4;
 80034fe:	4b71      	ldr	r3, [pc, #452]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 8003500:	781b      	ldrb	r3, [r3, #0]
 8003502:	3304      	adds	r3, #4
 8003504:	b2da      	uxtb	r2, r3
 8003506:	4b6f      	ldr	r3, [pc, #444]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 8003508:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 800350a:	e241      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'L':
                     	 	        			 uRx_Data1[k]='.';
 800350c:	4b6b      	ldr	r3, [pc, #428]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 800350e:	681b      	ldr	r3, [r3, #0]
 8003510:	4a6b      	ldr	r2, [pc, #428]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003512:	212e      	movs	r1, #46	; 0x2e
 8003514:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+1]='-';
 8003516:	4b69      	ldr	r3, [pc, #420]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	3301      	adds	r3, #1
 800351c:	4a68      	ldr	r2, [pc, #416]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800351e:	212d      	movs	r1, #45	; 0x2d
 8003520:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+2]='.';
 8003522:	4b66      	ldr	r3, [pc, #408]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003524:	681b      	ldr	r3, [r3, #0]
 8003526:	3302      	adds	r3, #2
 8003528:	4a65      	ldr	r2, [pc, #404]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800352a:	212e      	movs	r1, #46	; 0x2e
 800352c:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+3]='.';
 800352e:	4b63      	ldr	r3, [pc, #396]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	3303      	adds	r3, #3
 8003534:	4a62      	ldr	r2, [pc, #392]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003536:	212e      	movs	r1, #46	; 0x2e
 8003538:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+4]='/';
 800353a:	4b60      	ldr	r3, [pc, #384]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	3304      	adds	r3, #4
 8003540:	4a5f      	ldr	r2, [pc, #380]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003542:	212f      	movs	r1, #47	; 0x2f
 8003544:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+5;
                     	 	        	        uLength1+=5;
 8003546:	4b5f      	ldr	r3, [pc, #380]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 8003548:	781b      	ldrb	r3, [r3, #0]
 800354a:	3305      	adds	r3, #5
 800354c:	b2da      	uxtb	r2, r3
 800354e:	4b5d      	ldr	r3, [pc, #372]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 8003550:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 8003552:	e21d      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'M':
                     	 	        			 uRx_Data1[k]='-';
 8003554:	4b59      	ldr	r3, [pc, #356]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003556:	681b      	ldr	r3, [r3, #0]
 8003558:	4a59      	ldr	r2, [pc, #356]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800355a:	212d      	movs	r1, #45	; 0x2d
 800355c:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+1]='-';
 800355e:	4b57      	ldr	r3, [pc, #348]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	3301      	adds	r3, #1
 8003564:	4a56      	ldr	r2, [pc, #344]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003566:	212d      	movs	r1, #45	; 0x2d
 8003568:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+2]='/';
 800356a:	4b54      	ldr	r3, [pc, #336]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 800356c:	681b      	ldr	r3, [r3, #0]
 800356e:	3302      	adds	r3, #2
 8003570:	4a53      	ldr	r2, [pc, #332]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003572:	212f      	movs	r1, #47	; 0x2f
 8003574:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+3;
                     	 	        	        uLength1+=3;
 8003576:	4b53      	ldr	r3, [pc, #332]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 8003578:	781b      	ldrb	r3, [r3, #0]
 800357a:	3303      	adds	r3, #3
 800357c:	b2da      	uxtb	r2, r3
 800357e:	4b51      	ldr	r3, [pc, #324]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 8003580:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 8003582:	e205      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'N':
                     	 	        			 uRx_Data1[k]='-';
 8003584:	4b4d      	ldr	r3, [pc, #308]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003586:	681b      	ldr	r3, [r3, #0]
 8003588:	4a4d      	ldr	r2, [pc, #308]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800358a:	212d      	movs	r1, #45	; 0x2d
 800358c:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+1]='.';
 800358e:	4b4b      	ldr	r3, [pc, #300]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003590:	681b      	ldr	r3, [r3, #0]
 8003592:	3301      	adds	r3, #1
 8003594:	4a4a      	ldr	r2, [pc, #296]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003596:	212e      	movs	r1, #46	; 0x2e
 8003598:	54d1      	strb	r1, [r2, r3]
                  	 	        	    	uRx_Data1[k+2]='/';
 800359a:	4b48      	ldr	r3, [pc, #288]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	3302      	adds	r3, #2
 80035a0:	4a47      	ldr	r2, [pc, #284]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80035a2:	212f      	movs	r1, #47	; 0x2f
 80035a4:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+3;
                     	 	        	        uLength1+=3;
 80035a6:	4b47      	ldr	r3, [pc, #284]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 80035a8:	781b      	ldrb	r3, [r3, #0]
 80035aa:	3303      	adds	r3, #3
 80035ac:	b2da      	uxtb	r2, r3
 80035ae:	4b45      	ldr	r3, [pc, #276]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 80035b0:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 80035b2:	e1ed      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'O':
                     	 	        			 uRx_Data1[k]='-';
 80035b4:	4b41      	ldr	r3, [pc, #260]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80035b6:	681b      	ldr	r3, [r3, #0]
 80035b8:	4a41      	ldr	r2, [pc, #260]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80035ba:	212d      	movs	r1, #45	; 0x2d
 80035bc:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+1]='-';
 80035be:	4b3f      	ldr	r3, [pc, #252]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80035c0:	681b      	ldr	r3, [r3, #0]
 80035c2:	3301      	adds	r3, #1
 80035c4:	4a3e      	ldr	r2, [pc, #248]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80035c6:	212d      	movs	r1, #45	; 0x2d
 80035c8:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+2]='-';
 80035ca:	4b3c      	ldr	r3, [pc, #240]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	3302      	adds	r3, #2
 80035d0:	4a3b      	ldr	r2, [pc, #236]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80035d2:	212d      	movs	r1, #45	; 0x2d
 80035d4:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+3]='/';
 80035d6:	4b39      	ldr	r3, [pc, #228]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	3303      	adds	r3, #3
 80035dc:	4a38      	ldr	r2, [pc, #224]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80035de:	212f      	movs	r1, #47	; 0x2f
 80035e0:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+4;
                     	 	        	        uLength1+=4;
 80035e2:	4b38      	ldr	r3, [pc, #224]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 80035e4:	781b      	ldrb	r3, [r3, #0]
 80035e6:	3304      	adds	r3, #4
 80035e8:	b2da      	uxtb	r2, r3
 80035ea:	4b36      	ldr	r3, [pc, #216]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 80035ec:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 80035ee:	e1cf      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'P':
                     	 	        			 uRx_Data1[k]='.';
 80035f0:	4b32      	ldr	r3, [pc, #200]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	4a32      	ldr	r2, [pc, #200]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80035f6:	212e      	movs	r1, #46	; 0x2e
 80035f8:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+1]='-';
 80035fa:	4b30      	ldr	r3, [pc, #192]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80035fc:	681b      	ldr	r3, [r3, #0]
 80035fe:	3301      	adds	r3, #1
 8003600:	4a2f      	ldr	r2, [pc, #188]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003602:	212d      	movs	r1, #45	; 0x2d
 8003604:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+2]='-';
 8003606:	4b2d      	ldr	r3, [pc, #180]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003608:	681b      	ldr	r3, [r3, #0]
 800360a:	3302      	adds	r3, #2
 800360c:	4a2c      	ldr	r2, [pc, #176]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800360e:	212d      	movs	r1, #45	; 0x2d
 8003610:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+3]='.';
 8003612:	4b2a      	ldr	r3, [pc, #168]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	3303      	adds	r3, #3
 8003618:	4a29      	ldr	r2, [pc, #164]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800361a:	212e      	movs	r1, #46	; 0x2e
 800361c:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+4]='/';
 800361e:	4b27      	ldr	r3, [pc, #156]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	3304      	adds	r3, #4
 8003624:	4a26      	ldr	r2, [pc, #152]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003626:	212f      	movs	r1, #47	; 0x2f
 8003628:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+5;
                     	 	        	        uLength1+=5;
 800362a:	4b26      	ldr	r3, [pc, #152]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 800362c:	781b      	ldrb	r3, [r3, #0]
 800362e:	3305      	adds	r3, #5
 8003630:	b2da      	uxtb	r2, r3
 8003632:	4b24      	ldr	r3, [pc, #144]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 8003634:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 8003636:	e1ab      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'Q':
                     	 	        			 uRx_Data1[k]='-';
 8003638:	4b20      	ldr	r3, [pc, #128]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	4a20      	ldr	r2, [pc, #128]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800363e:	212d      	movs	r1, #45	; 0x2d
 8003640:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+1]='-';
 8003642:	4b1e      	ldr	r3, [pc, #120]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003644:	681b      	ldr	r3, [r3, #0]
 8003646:	3301      	adds	r3, #1
 8003648:	4a1d      	ldr	r2, [pc, #116]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800364a:	212d      	movs	r1, #45	; 0x2d
 800364c:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+2]='.';
 800364e:	4b1b      	ldr	r3, [pc, #108]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003650:	681b      	ldr	r3, [r3, #0]
 8003652:	3302      	adds	r3, #2
 8003654:	4a1a      	ldr	r2, [pc, #104]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003656:	212e      	movs	r1, #46	; 0x2e
 8003658:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+3]='-';
 800365a:	4b18      	ldr	r3, [pc, #96]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	3303      	adds	r3, #3
 8003660:	4a17      	ldr	r2, [pc, #92]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003662:	212d      	movs	r1, #45	; 0x2d
 8003664:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+4]='/';
 8003666:	4b15      	ldr	r3, [pc, #84]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	3304      	adds	r3, #4
 800366c:	4a14      	ldr	r2, [pc, #80]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800366e:	212f      	movs	r1, #47	; 0x2f
 8003670:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+5;
                     	 	        	        uLength1+=5;
 8003672:	4b14      	ldr	r3, [pc, #80]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 8003674:	781b      	ldrb	r3, [r3, #0]
 8003676:	3305      	adds	r3, #5
 8003678:	b2da      	uxtb	r2, r3
 800367a:	4b12      	ldr	r3, [pc, #72]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 800367c:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 800367e:	e187      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'R':
                     	 	        			 uRx_Data1[k]='.';
 8003680:	4b0e      	ldr	r3, [pc, #56]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	4a0e      	ldr	r2, [pc, #56]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003686:	212e      	movs	r1, #46	; 0x2e
 8003688:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+1]='-';
 800368a:	4b0c      	ldr	r3, [pc, #48]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	3301      	adds	r3, #1
 8003690:	4a0b      	ldr	r2, [pc, #44]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 8003692:	212d      	movs	r1, #45	; 0x2d
 8003694:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+2]='.';
 8003696:	4b09      	ldr	r3, [pc, #36]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 8003698:	681b      	ldr	r3, [r3, #0]
 800369a:	3302      	adds	r3, #2
 800369c:	4a08      	ldr	r2, [pc, #32]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 800369e:	212e      	movs	r1, #46	; 0x2e
 80036a0:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+3]='/';
 80036a2:	4b06      	ldr	r3, [pc, #24]	; (80036bc <HAL_UART_RxCpltCallback+0x2094>)
 80036a4:	681b      	ldr	r3, [r3, #0]
 80036a6:	3303      	adds	r3, #3
 80036a8:	4a05      	ldr	r2, [pc, #20]	; (80036c0 <HAL_UART_RxCpltCallback+0x2098>)
 80036aa:	212f      	movs	r1, #47	; 0x2f
 80036ac:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+4;
                     	 	        	        uLength1+=4;
 80036ae:	4b05      	ldr	r3, [pc, #20]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 80036b0:	781b      	ldrb	r3, [r3, #0]
 80036b2:	3304      	adds	r3, #4
 80036b4:	b2da      	uxtb	r2, r3
 80036b6:	4b03      	ldr	r3, [pc, #12]	; (80036c4 <HAL_UART_RxCpltCallback+0x209c>)
 80036b8:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 80036ba:	e169      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
 80036bc:	20001434 	.word	0x20001434
 80036c0:	2000082c 	.word	0x2000082c
 80036c4:	2000142d 	.word	0x2000142d
                     	 	        		 case 'S':
                     	 	        			 uRx_Data1[k]='.';
 80036c8:	4b7d      	ldr	r3, [pc, #500]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	4a7d      	ldr	r2, [pc, #500]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 80036ce:	212e      	movs	r1, #46	; 0x2e
 80036d0:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+1]='.';
 80036d2:	4b7b      	ldr	r3, [pc, #492]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 80036d4:	681b      	ldr	r3, [r3, #0]
 80036d6:	3301      	adds	r3, #1
 80036d8:	4a7a      	ldr	r2, [pc, #488]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 80036da:	212e      	movs	r1, #46	; 0x2e
 80036dc:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+2]='.';
 80036de:	4b78      	ldr	r3, [pc, #480]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 80036e0:	681b      	ldr	r3, [r3, #0]
 80036e2:	3302      	adds	r3, #2
 80036e4:	4a77      	ldr	r2, [pc, #476]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 80036e6:	212e      	movs	r1, #46	; 0x2e
 80036e8:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+3]='/';
 80036ea:	4b75      	ldr	r3, [pc, #468]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	3303      	adds	r3, #3
 80036f0:	4a74      	ldr	r2, [pc, #464]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 80036f2:	212f      	movs	r1, #47	; 0x2f
 80036f4:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+4;
                     	 	        	        uLength1+=4;
 80036f6:	4b74      	ldr	r3, [pc, #464]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 80036f8:	781b      	ldrb	r3, [r3, #0]
 80036fa:	3304      	adds	r3, #4
 80036fc:	b2da      	uxtb	r2, r3
 80036fe:	4b72      	ldr	r3, [pc, #456]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 8003700:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 8003702:	e145      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'T':
                     	 	        			 uRx_Data1[k]='-';
 8003704:	4b6e      	ldr	r3, [pc, #440]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003706:	681b      	ldr	r3, [r3, #0]
 8003708:	4a6e      	ldr	r2, [pc, #440]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 800370a:	212d      	movs	r1, #45	; 0x2d
 800370c:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+1]='/';
 800370e:	4b6c      	ldr	r3, [pc, #432]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003710:	681b      	ldr	r3, [r3, #0]
 8003712:	3301      	adds	r3, #1
 8003714:	4a6b      	ldr	r2, [pc, #428]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 8003716:	212f      	movs	r1, #47	; 0x2f
 8003718:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+2;
                     	 	        	        uLength1+=2;
 800371a:	4b6b      	ldr	r3, [pc, #428]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 800371c:	781b      	ldrb	r3, [r3, #0]
 800371e:	3302      	adds	r3, #2
 8003720:	b2da      	uxtb	r2, r3
 8003722:	4b69      	ldr	r3, [pc, #420]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 8003724:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 8003726:	e133      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'U':
                     	 	        			 uRx_Data1[k]='.';
 8003728:	4b65      	ldr	r3, [pc, #404]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 800372a:	681b      	ldr	r3, [r3, #0]
 800372c:	4a65      	ldr	r2, [pc, #404]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 800372e:	212e      	movs	r1, #46	; 0x2e
 8003730:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+1]='.';
 8003732:	4b63      	ldr	r3, [pc, #396]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	3301      	adds	r3, #1
 8003738:	4a62      	ldr	r2, [pc, #392]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 800373a:	212e      	movs	r1, #46	; 0x2e
 800373c:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+2]='-';
 800373e:	4b60      	ldr	r3, [pc, #384]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003740:	681b      	ldr	r3, [r3, #0]
 8003742:	3302      	adds	r3, #2
 8003744:	4a5f      	ldr	r2, [pc, #380]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 8003746:	212d      	movs	r1, #45	; 0x2d
 8003748:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+3]='/';
 800374a:	4b5d      	ldr	r3, [pc, #372]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 800374c:	681b      	ldr	r3, [r3, #0]
 800374e:	3303      	adds	r3, #3
 8003750:	4a5c      	ldr	r2, [pc, #368]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 8003752:	212f      	movs	r1, #47	; 0x2f
 8003754:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+4;
                     	 	        	        uLength1+=4;
 8003756:	4b5c      	ldr	r3, [pc, #368]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 8003758:	781b      	ldrb	r3, [r3, #0]
 800375a:	3304      	adds	r3, #4
 800375c:	b2da      	uxtb	r2, r3
 800375e:	4b5a      	ldr	r3, [pc, #360]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 8003760:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 8003762:	e115      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'V':
                     	 	        			 uRx_Data1[k]='.';
 8003764:	4b56      	ldr	r3, [pc, #344]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003766:	681b      	ldr	r3, [r3, #0]
 8003768:	4a56      	ldr	r2, [pc, #344]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 800376a:	212e      	movs	r1, #46	; 0x2e
 800376c:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+1]='.';
 800376e:	4b54      	ldr	r3, [pc, #336]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003770:	681b      	ldr	r3, [r3, #0]
 8003772:	3301      	adds	r3, #1
 8003774:	4a53      	ldr	r2, [pc, #332]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 8003776:	212e      	movs	r1, #46	; 0x2e
 8003778:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+2]='.';
 800377a:	4b51      	ldr	r3, [pc, #324]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	3302      	adds	r3, #2
 8003780:	4a50      	ldr	r2, [pc, #320]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 8003782:	212e      	movs	r1, #46	; 0x2e
 8003784:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+3]='-';
 8003786:	4b4e      	ldr	r3, [pc, #312]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	3303      	adds	r3, #3
 800378c:	4a4d      	ldr	r2, [pc, #308]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 800378e:	212d      	movs	r1, #45	; 0x2d
 8003790:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+4]='/';
 8003792:	4b4b      	ldr	r3, [pc, #300]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003794:	681b      	ldr	r3, [r3, #0]
 8003796:	3304      	adds	r3, #4
 8003798:	4a4a      	ldr	r2, [pc, #296]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 800379a:	212f      	movs	r1, #47	; 0x2f
 800379c:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+5;
                     	 	        	        uLength1+=5;
 800379e:	4b4a      	ldr	r3, [pc, #296]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 80037a0:	781b      	ldrb	r3, [r3, #0]
 80037a2:	3305      	adds	r3, #5
 80037a4:	b2da      	uxtb	r2, r3
 80037a6:	4b48      	ldr	r3, [pc, #288]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 80037a8:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 80037aa:	e0f1      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'W':
                     	 	        			 uRx_Data1[k]='.';
 80037ac:	4b44      	ldr	r3, [pc, #272]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 80037ae:	681b      	ldr	r3, [r3, #0]
 80037b0:	4a44      	ldr	r2, [pc, #272]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 80037b2:	212e      	movs	r1, #46	; 0x2e
 80037b4:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+1]='-';
 80037b6:	4b42      	ldr	r3, [pc, #264]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 80037b8:	681b      	ldr	r3, [r3, #0]
 80037ba:	3301      	adds	r3, #1
 80037bc:	4a41      	ldr	r2, [pc, #260]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 80037be:	212d      	movs	r1, #45	; 0x2d
 80037c0:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+2]='-';
 80037c2:	4b3f      	ldr	r3, [pc, #252]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 80037c4:	681b      	ldr	r3, [r3, #0]
 80037c6:	3302      	adds	r3, #2
 80037c8:	4a3e      	ldr	r2, [pc, #248]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 80037ca:	212d      	movs	r1, #45	; 0x2d
 80037cc:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+3]='/';
 80037ce:	4b3c      	ldr	r3, [pc, #240]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	3303      	adds	r3, #3
 80037d4:	4a3b      	ldr	r2, [pc, #236]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 80037d6:	212f      	movs	r1, #47	; 0x2f
 80037d8:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+4;
                     	 	        	        uLength1+=4;
 80037da:	4b3b      	ldr	r3, [pc, #236]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 80037dc:	781b      	ldrb	r3, [r3, #0]
 80037de:	3304      	adds	r3, #4
 80037e0:	b2da      	uxtb	r2, r3
 80037e2:	4b39      	ldr	r3, [pc, #228]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 80037e4:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 80037e6:	e0d3      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'X':
                     	 	        			 uRx_Data1[k]='-';
 80037e8:	4b35      	ldr	r3, [pc, #212]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 80037ea:	681b      	ldr	r3, [r3, #0]
 80037ec:	4a35      	ldr	r2, [pc, #212]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 80037ee:	212d      	movs	r1, #45	; 0x2d
 80037f0:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+1]='.';
 80037f2:	4b33      	ldr	r3, [pc, #204]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 80037f4:	681b      	ldr	r3, [r3, #0]
 80037f6:	3301      	adds	r3, #1
 80037f8:	4a32      	ldr	r2, [pc, #200]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 80037fa:	212e      	movs	r1, #46	; 0x2e
 80037fc:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+2]='.';
 80037fe:	4b30      	ldr	r3, [pc, #192]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	3302      	adds	r3, #2
 8003804:	4a2f      	ldr	r2, [pc, #188]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 8003806:	212e      	movs	r1, #46	; 0x2e
 8003808:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+3]='-';
 800380a:	4b2d      	ldr	r3, [pc, #180]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 800380c:	681b      	ldr	r3, [r3, #0]
 800380e:	3303      	adds	r3, #3
 8003810:	4a2c      	ldr	r2, [pc, #176]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 8003812:	212d      	movs	r1, #45	; 0x2d
 8003814:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+4]='/';
 8003816:	4b2a      	ldr	r3, [pc, #168]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003818:	681b      	ldr	r3, [r3, #0]
 800381a:	3304      	adds	r3, #4
 800381c:	4a29      	ldr	r2, [pc, #164]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 800381e:	212f      	movs	r1, #47	; 0x2f
 8003820:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+5;
                     	 	        	        uLength1+=5;
 8003822:	4b29      	ldr	r3, [pc, #164]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 8003824:	781b      	ldrb	r3, [r3, #0]
 8003826:	3305      	adds	r3, #5
 8003828:	b2da      	uxtb	r2, r3
 800382a:	4b27      	ldr	r3, [pc, #156]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 800382c:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 800382e:	e0af      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'Y':
                     	 	        			 uRx_Data1[k]='-';
 8003830:	4b23      	ldr	r3, [pc, #140]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	4a23      	ldr	r2, [pc, #140]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 8003836:	212d      	movs	r1, #45	; 0x2d
 8003838:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+1]='.';
 800383a:	4b21      	ldr	r3, [pc, #132]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 800383c:	681b      	ldr	r3, [r3, #0]
 800383e:	3301      	adds	r3, #1
 8003840:	4a20      	ldr	r2, [pc, #128]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 8003842:	212e      	movs	r1, #46	; 0x2e
 8003844:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+2]='-';
 8003846:	4b1e      	ldr	r3, [pc, #120]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003848:	681b      	ldr	r3, [r3, #0]
 800384a:	3302      	adds	r3, #2
 800384c:	4a1d      	ldr	r2, [pc, #116]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 800384e:	212d      	movs	r1, #45	; 0x2d
 8003850:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+3]='-';
 8003852:	4b1b      	ldr	r3, [pc, #108]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003854:	681b      	ldr	r3, [r3, #0]
 8003856:	3303      	adds	r3, #3
 8003858:	4a1a      	ldr	r2, [pc, #104]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 800385a:	212d      	movs	r1, #45	; 0x2d
 800385c:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+4]='/';
 800385e:	4b18      	ldr	r3, [pc, #96]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003860:	681b      	ldr	r3, [r3, #0]
 8003862:	3304      	adds	r3, #4
 8003864:	4a17      	ldr	r2, [pc, #92]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 8003866:	212f      	movs	r1, #47	; 0x2f
 8003868:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+5;
                     	 	        	        uLength1+=5;
 800386a:	4b17      	ldr	r3, [pc, #92]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 800386c:	781b      	ldrb	r3, [r3, #0]
 800386e:	3305      	adds	r3, #5
 8003870:	b2da      	uxtb	r2, r3
 8003872:	4b15      	ldr	r3, [pc, #84]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 8003874:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 8003876:	e08b      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
                     	 	        		 case 'Z':
                     	 	        			 uRx_Data1[k]='-';
 8003878:	4b11      	ldr	r3, [pc, #68]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 800387a:	681b      	ldr	r3, [r3, #0]
 800387c:	4a11      	ldr	r2, [pc, #68]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 800387e:	212d      	movs	r1, #45	; 0x2d
 8003880:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+1]='-';
 8003882:	4b0f      	ldr	r3, [pc, #60]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003884:	681b      	ldr	r3, [r3, #0]
 8003886:	3301      	adds	r3, #1
 8003888:	4a0e      	ldr	r2, [pc, #56]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 800388a:	212d      	movs	r1, #45	; 0x2d
 800388c:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+2]='.';
 800388e:	4b0c      	ldr	r3, [pc, #48]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	3302      	adds	r3, #2
 8003894:	4a0b      	ldr	r2, [pc, #44]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 8003896:	212e      	movs	r1, #46	; 0x2e
 8003898:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+3]='.';
 800389a:	4b09      	ldr	r3, [pc, #36]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	3303      	adds	r3, #3
 80038a0:	4a08      	ldr	r2, [pc, #32]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 80038a2:	212e      	movs	r1, #46	; 0x2e
 80038a4:	54d1      	strb	r1, [r2, r3]
                   	 	        	    	uRx_Data1[k+4]='/';
 80038a6:	4b06      	ldr	r3, [pc, #24]	; (80038c0 <HAL_UART_RxCpltCallback+0x2298>)
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	3304      	adds	r3, #4
 80038ac:	4a05      	ldr	r2, [pc, #20]	; (80038c4 <HAL_UART_RxCpltCallback+0x229c>)
 80038ae:	212f      	movs	r1, #47	; 0x2f
 80038b0:	54d1      	strb	r1, [r2, r3]
                     	 	        	    	//k=k+5;
                     	 	        	        uLength1+=5;
 80038b2:	4b05      	ldr	r3, [pc, #20]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 80038b4:	781b      	ldrb	r3, [r3, #0]
 80038b6:	3305      	adds	r3, #5
 80038b8:	b2da      	uxtb	r2, r3
 80038ba:	4b03      	ldr	r3, [pc, #12]	; (80038c8 <HAL_UART_RxCpltCallback+0x22a0>)
 80038bc:	701a      	strb	r2, [r3, #0]
                     	 	        		 break;
 80038be:	e067      	b.n	8003990 <HAL_UART_RxCpltCallback+0x2368>
 80038c0:	20001434 	.word	0x20001434
 80038c4:	2000082c 	.word	0x2000082c
 80038c8:	2000142d 	.word	0x2000142d

                     	 	        		 default:
                     	 	        			uRx_Data1[k]='E';
 80038cc:	4bab      	ldr	r3, [pc, #684]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	4aab      	ldr	r2, [pc, #684]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 80038d2:	2145      	movs	r1, #69	; 0x45
 80038d4:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+1]='n';
 80038d6:	4ba9      	ldr	r3, [pc, #676]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 80038d8:	681b      	ldr	r3, [r3, #0]
 80038da:	3301      	adds	r3, #1
 80038dc:	4aa8      	ldr	r2, [pc, #672]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 80038de:	216e      	movs	r1, #110	; 0x6e
 80038e0:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+2]='c';
 80038e2:	4ba6      	ldr	r3, [pc, #664]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 80038e4:	681b      	ldr	r3, [r3, #0]
 80038e6:	3302      	adds	r3, #2
 80038e8:	4aa5      	ldr	r2, [pc, #660]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 80038ea:	2163      	movs	r1, #99	; 0x63
 80038ec:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+3]='o';
 80038ee:	4ba3      	ldr	r3, [pc, #652]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 80038f0:	681b      	ldr	r3, [r3, #0]
 80038f2:	3303      	adds	r3, #3
 80038f4:	4aa2      	ldr	r2, [pc, #648]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 80038f6:	216f      	movs	r1, #111	; 0x6f
 80038f8:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+4]='d';
 80038fa:	4ba0      	ldr	r3, [pc, #640]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	3304      	adds	r3, #4
 8003900:	4a9f      	ldr	r2, [pc, #636]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 8003902:	2164      	movs	r1, #100	; 0x64
 8003904:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+5]='e';
 8003906:	4b9d      	ldr	r3, [pc, #628]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 8003908:	681b      	ldr	r3, [r3, #0]
 800390a:	3305      	adds	r3, #5
 800390c:	4a9c      	ldr	r2, [pc, #624]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 800390e:	2165      	movs	r1, #101	; 0x65
 8003910:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+6]=' ';
 8003912:	4b9a      	ldr	r3, [pc, #616]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	3306      	adds	r3, #6
 8003918:	4a99      	ldr	r2, [pc, #612]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 800391a:	2120      	movs	r1, #32
 800391c:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+7]='E';
 800391e:	4b97      	ldr	r3, [pc, #604]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 8003920:	681b      	ldr	r3, [r3, #0]
 8003922:	3307      	adds	r3, #7
 8003924:	4a96      	ldr	r2, [pc, #600]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 8003926:	2145      	movs	r1, #69	; 0x45
 8003928:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+8]='r';
 800392a:	4b94      	ldr	r3, [pc, #592]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 800392c:	681b      	ldr	r3, [r3, #0]
 800392e:	3308      	adds	r3, #8
 8003930:	4a93      	ldr	r2, [pc, #588]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 8003932:	2172      	movs	r1, #114	; 0x72
 8003934:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+9]='r';
 8003936:	4b91      	ldr	r3, [pc, #580]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	3309      	adds	r3, #9
 800393c:	4a90      	ldr	r2, [pc, #576]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 800393e:	2172      	movs	r1, #114	; 0x72
 8003940:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+10]='o';
 8003942:	4b8e      	ldr	r3, [pc, #568]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 8003944:	681b      	ldr	r3, [r3, #0]
 8003946:	330a      	adds	r3, #10
 8003948:	4a8d      	ldr	r2, [pc, #564]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 800394a:	216f      	movs	r1, #111	; 0x6f
 800394c:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+11]='r';
 800394e:	4b8b      	ldr	r3, [pc, #556]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	330b      	adds	r3, #11
 8003954:	4a8a      	ldr	r2, [pc, #552]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 8003956:	2172      	movs	r1, #114	; 0x72
 8003958:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+12]=':';
 800395a:	4b88      	ldr	r3, [pc, #544]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	330c      	adds	r3, #12
 8003960:	4a87      	ldr	r2, [pc, #540]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 8003962:	213a      	movs	r1, #58	; 0x3a
 8003964:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+13]=' ';
 8003966:	4b85      	ldr	r3, [pc, #532]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	330d      	adds	r3, #13
 800396c:	4a84      	ldr	r2, [pc, #528]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 800396e:	2120      	movs	r1, #32
 8003970:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uRx_Data1[k+14]=uRx_Data[i];
 8003972:	4b82      	ldr	r3, [pc, #520]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 8003974:	681b      	ldr	r3, [r3, #0]
 8003976:	330e      	adds	r3, #14
 8003978:	4982      	ldr	r1, [pc, #520]	; (8003b84 <HAL_UART_RxCpltCallback+0x255c>)
 800397a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800397c:	440a      	add	r2, r1
 800397e:	7811      	ldrb	r1, [r2, #0]
 8003980:	4a7f      	ldr	r2, [pc, #508]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 8003982:	54d1      	strb	r1, [r2, r3]
                    	 	        	    	uLength1+=15;
 8003984:	4b80      	ldr	r3, [pc, #512]	; (8003b88 <HAL_UART_RxCpltCallback+0x2560>)
 8003986:	781b      	ldrb	r3, [r3, #0]
 8003988:	330f      	adds	r3, #15
 800398a:	b2da      	uxtb	r2, r3
 800398c:	4b7e      	ldr	r3, [pc, #504]	; (8003b88 <HAL_UART_RxCpltCallback+0x2560>)
 800398e:	701a      	strb	r2, [r3, #0]

                    	 	        	 }
                    	 	        	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
                    	 	        	//HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
                    	 	        	 for (int j=k;j<=uLength1-1;j++){
 8003990:	4b7a      	ldr	r3, [pc, #488]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 8003992:	681b      	ldr	r3, [r3, #0]
 8003994:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003996:	e0aa      	b.n	8003aee <HAL_UART_RxCpltCallback+0x24c6>
                    	 	        		 if (uRx_Data1[j]=='.'){
 8003998:	4a79      	ldr	r2, [pc, #484]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 800399a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800399c:	4413      	add	r3, r2
 800399e:	781b      	ldrb	r3, [r3, #0]
 80039a0:	2b2e      	cmp	r3, #46	; 0x2e
 80039a2:	d112      	bne.n	80039ca <HAL_UART_RxCpltCallback+0x23a2>
                         	 	            HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 80039a4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80039a8:	4878      	ldr	r0, [pc, #480]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 80039aa:	f002 f89a 	bl	8005ae2 <HAL_GPIO_TogglePin>
                         	 	            HAL_Delay(500);
 80039ae:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80039b2:	f001 fc5f 	bl	8005274 <HAL_Delay>
                         	 	            HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 80039b6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80039ba:	4874      	ldr	r0, [pc, #464]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 80039bc:	f002 f891 	bl	8005ae2 <HAL_GPIO_TogglePin>
                         	 	            HAL_Delay(500);
 80039c0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80039c4:	f001 fc56 	bl	8005274 <HAL_Delay>
 80039c8:	e08e      	b.n	8003ae8 <HAL_UART_RxCpltCallback+0x24c0>
                         	 	          }
                         	 	         else  if (uRx_Data1[j]=='-'){
 80039ca:	4a6d      	ldr	r2, [pc, #436]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 80039cc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80039ce:	4413      	add	r3, r2
 80039d0:	781b      	ldrb	r3, [r3, #0]
 80039d2:	2b2d      	cmp	r3, #45	; 0x2d
 80039d4:	d110      	bne.n	80039f8 <HAL_UART_RxCpltCallback+0x23d0>
                         	 	            HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 80039d6:	2104      	movs	r1, #4
 80039d8:	486d      	ldr	r0, [pc, #436]	; (8003b90 <HAL_UART_RxCpltCallback+0x2568>)
 80039da:	f002 f882 	bl	8005ae2 <HAL_GPIO_TogglePin>
                         	 	            HAL_Delay(500);
 80039de:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80039e2:	f001 fc47 	bl	8005274 <HAL_Delay>
                         	 	            HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 80039e6:	2104      	movs	r1, #4
 80039e8:	4869      	ldr	r0, [pc, #420]	; (8003b90 <HAL_UART_RxCpltCallback+0x2568>)
 80039ea:	f002 f87a 	bl	8005ae2 <HAL_GPIO_TogglePin>
                         	 	            HAL_Delay(500);
 80039ee:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80039f2:	f001 fc3f 	bl	8005274 <HAL_Delay>
 80039f6:	e077      	b.n	8003ae8 <HAL_UART_RxCpltCallback+0x24c0>

                         	 	       }
                         	 	         else if (uRx_Data1[j]=='/'){
 80039f8:	4a61      	ldr	r2, [pc, #388]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 80039fa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80039fc:	4413      	add	r3, r2
 80039fe:	781b      	ldrb	r3, [r3, #0]
 8003a00:	2b2f      	cmp	r3, #47	; 0x2f
 8003a02:	d130      	bne.n	8003a66 <HAL_UART_RxCpltCallback+0x243e>
                         	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003a04:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a08:	4860      	ldr	r0, [pc, #384]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 8003a0a:	f002 f86a 	bl	8005ae2 <HAL_GPIO_TogglePin>
                         	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003a0e:	2104      	movs	r1, #4
 8003a10:	485f      	ldr	r0, [pc, #380]	; (8003b90 <HAL_UART_RxCpltCallback+0x2568>)
 8003a12:	f002 f866 	bl	8005ae2 <HAL_GPIO_TogglePin>
                         	 	        	  HAL_Delay(250);
 8003a16:	20fa      	movs	r0, #250	; 0xfa
 8003a18:	f001 fc2c 	bl	8005274 <HAL_Delay>
                         	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003a1c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a20:	485a      	ldr	r0, [pc, #360]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 8003a22:	f002 f85e 	bl	8005ae2 <HAL_GPIO_TogglePin>
                         	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003a26:	2104      	movs	r1, #4
 8003a28:	4859      	ldr	r0, [pc, #356]	; (8003b90 <HAL_UART_RxCpltCallback+0x2568>)
 8003a2a:	f002 f85a 	bl	8005ae2 <HAL_GPIO_TogglePin>
                         	 	        	  HAL_Delay(250);
 8003a2e:	20fa      	movs	r0, #250	; 0xfa
 8003a30:	f001 fc20 	bl	8005274 <HAL_Delay>
                         	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003a34:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a38:	4854      	ldr	r0, [pc, #336]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 8003a3a:	f002 f852 	bl	8005ae2 <HAL_GPIO_TogglePin>
                         	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003a3e:	2104      	movs	r1, #4
 8003a40:	4853      	ldr	r0, [pc, #332]	; (8003b90 <HAL_UART_RxCpltCallback+0x2568>)
 8003a42:	f002 f84e 	bl	8005ae2 <HAL_GPIO_TogglePin>
                         	 	        	  HAL_Delay(250);
 8003a46:	20fa      	movs	r0, #250	; 0xfa
 8003a48:	f001 fc14 	bl	8005274 <HAL_Delay>
                         	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003a4c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a50:	484e      	ldr	r0, [pc, #312]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 8003a52:	f002 f846 	bl	8005ae2 <HAL_GPIO_TogglePin>
                         	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003a56:	2104      	movs	r1, #4
 8003a58:	484d      	ldr	r0, [pc, #308]	; (8003b90 <HAL_UART_RxCpltCallback+0x2568>)
 8003a5a:	f002 f842 	bl	8005ae2 <HAL_GPIO_TogglePin>
                         	 	        	  HAL_Delay(250);
 8003a5e:	20fa      	movs	r0, #250	; 0xfa
 8003a60:	f001 fc08 	bl	8005274 <HAL_Delay>
 8003a64:	e040      	b.n	8003ae8 <HAL_UART_RxCpltCallback+0x24c0>
                         	 	            }
                         	 	         else if (uRx_Data1[j]=='E'){
 8003a66:	4a46      	ldr	r2, [pc, #280]	; (8003b80 <HAL_UART_RxCpltCallback+0x2558>)
 8003a68:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003a6a:	4413      	add	r3, r2
 8003a6c:	781b      	ldrb	r3, [r3, #0]
 8003a6e:	2b45      	cmp	r3, #69	; 0x45
 8003a70:	d13a      	bne.n	8003ae8 <HAL_UART_RxCpltCallback+0x24c0>
                         	 	        	 j=uLength1;
 8003a72:	4b45      	ldr	r3, [pc, #276]	; (8003b88 <HAL_UART_RxCpltCallback+0x2560>)
 8003a74:	781b      	ldrb	r3, [r3, #0]
 8003a76:	62fb      	str	r3, [r7, #44]	; 0x2c
                         	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003a78:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a7c:	4843      	ldr	r0, [pc, #268]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 8003a7e:	f002 f830 	bl	8005ae2 <HAL_GPIO_TogglePin>
                        	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003a82:	2104      	movs	r1, #4
 8003a84:	4842      	ldr	r0, [pc, #264]	; (8003b90 <HAL_UART_RxCpltCallback+0x2568>)
 8003a86:	f002 f82c 	bl	8005ae2 <HAL_GPIO_TogglePin>
                        	 	        	  HAL_Delay(166);
 8003a8a:	20a6      	movs	r0, #166	; 0xa6
 8003a8c:	f001 fbf2 	bl	8005274 <HAL_Delay>
                        	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003a90:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a94:	483d      	ldr	r0, [pc, #244]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 8003a96:	f002 f824 	bl	8005ae2 <HAL_GPIO_TogglePin>
                        	 	        	  HAL_Delay(167);
 8003a9a:	20a7      	movs	r0, #167	; 0xa7
 8003a9c:	f001 fbea 	bl	8005274 <HAL_Delay>
                        	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003aa0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003aa4:	4839      	ldr	r0, [pc, #228]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 8003aa6:	f002 f81c 	bl	8005ae2 <HAL_GPIO_TogglePin>
                        	 	        	  HAL_Delay(166);
 8003aaa:	20a6      	movs	r0, #166	; 0xa6
 8003aac:	f001 fbe2 	bl	8005274 <HAL_Delay>
                        	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003ab0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003ab4:	4835      	ldr	r0, [pc, #212]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 8003ab6:	f002 f814 	bl	8005ae2 <HAL_GPIO_TogglePin>
                        	 	        	  HAL_Delay(167);
 8003aba:	20a7      	movs	r0, #167	; 0xa7
 8003abc:	f001 fbda 	bl	8005274 <HAL_Delay>
                        	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003ac0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003ac4:	4831      	ldr	r0, [pc, #196]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 8003ac6:	f002 f80c 	bl	8005ae2 <HAL_GPIO_TogglePin>
                        	 	        	  HAL_Delay(166);
 8003aca:	20a6      	movs	r0, #166	; 0xa6
 8003acc:	f001 fbd2 	bl	8005274 <HAL_Delay>
                        	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8003ad0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003ad4:	482d      	ldr	r0, [pc, #180]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 8003ad6:	f002 f804 	bl	8005ae2 <HAL_GPIO_TogglePin>
                        	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8003ada:	2104      	movs	r1, #4
 8003adc:	482c      	ldr	r0, [pc, #176]	; (8003b90 <HAL_UART_RxCpltCallback+0x2568>)
 8003ade:	f002 f800 	bl	8005ae2 <HAL_GPIO_TogglePin>
                        	 	        	  HAL_Delay(168);
 8003ae2:	20a8      	movs	r0, #168	; 0xa8
 8003ae4:	f001 fbc6 	bl	8005274 <HAL_Delay>
                    	 	        	 for (int j=k;j<=uLength1-1;j++){
 8003ae8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003aea:	3301      	adds	r3, #1
 8003aec:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003aee:	4b26      	ldr	r3, [pc, #152]	; (8003b88 <HAL_UART_RxCpltCallback+0x2560>)
 8003af0:	781b      	ldrb	r3, [r3, #0]
 8003af2:	461a      	mov	r2, r3
 8003af4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003af6:	4293      	cmp	r3, r2
 8003af8:	f6ff af4e 	blt.w	8003998 <HAL_UART_RxCpltCallback+0x2370>
                         	 	         }
                    	 	        	 }
                    	 	        	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
                    	 	        	//HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
                    	 	        	 k=uLength1;
 8003afc:	4b22      	ldr	r3, [pc, #136]	; (8003b88 <HAL_UART_RxCpltCallback+0x2560>)
 8003afe:	781b      	ldrb	r3, [r3, #0]
 8003b00:	461a      	mov	r2, r3
 8003b02:	4b1e      	ldr	r3, [pc, #120]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 8003b04:	601a      	str	r2, [r3, #0]
            				   for (int i=0;i<uLength-1;i++){
 8003b06:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003b08:	3301      	adds	r3, #1
 8003b0a:	633b      	str	r3, [r7, #48]	; 0x30
 8003b0c:	4b21      	ldr	r3, [pc, #132]	; (8003b94 <HAL_UART_RxCpltCallback+0x256c>)
 8003b0e:	781b      	ldrb	r3, [r3, #0]
 8003b10:	3b01      	subs	r3, #1
 8003b12:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003b14:	429a      	cmp	r2, r3
 8003b16:	f6ff ab5b 	blt.w	80031d0 <HAL_UART_RxCpltCallback+0x1ba8>
 8003b1a:	f001 b87a 	b.w	8004c12 <HAL_UART_RxCpltCallback+0x35ea>

                    	 	         }
                                   }
            			   }
                    		   else if (uRx_Data0[0]==0){
 8003b1e:	4b1e      	ldr	r3, [pc, #120]	; (8003b98 <HAL_UART_RxCpltCallback+0x2570>)
 8003b20:	781b      	ldrb	r3, [r3, #0]
 8003b22:	2b00      	cmp	r3, #0
 8003b24:	f041 8075 	bne.w	8004c12 <HAL_UART_RxCpltCallback+0x35ea>
                        		   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
 8003b28:	2201      	movs	r2, #1
 8003b2a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003b2e:	4817      	ldr	r0, [pc, #92]	; (8003b8c <HAL_UART_RxCpltCallback+0x2564>)
 8003b30:	f001 ffbf 	bl	8005ab2 <HAL_GPIO_WritePin>
                                   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
 8003b34:	2201      	movs	r2, #1
 8003b36:	2104      	movs	r1, #4
 8003b38:	4815      	ldr	r0, [pc, #84]	; (8003b90 <HAL_UART_RxCpltCallback+0x2568>)
 8003b3a:	f001 ffba 	bl	8005ab2 <HAL_GPIO_WritePin>
                                   for (int i=0;i<uLength-1;i++){
 8003b3e:	2300      	movs	r3, #0
 8003b40:	62bb      	str	r3, [r7, #40]	; 0x28
 8003b42:	f001 b85f 	b.w	8004c04 <HAL_UART_RxCpltCallback+0x35dc>
                                   if (uRx_Data[i]=='.'){
 8003b46:	4a0f      	ldr	r2, [pc, #60]	; (8003b84 <HAL_UART_RxCpltCallback+0x255c>)
 8003b48:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003b4a:	4413      	add	r3, r2
 8003b4c:	781b      	ldrb	r3, [r3, #0]
 8003b4e:	2b2e      	cmp	r3, #46	; 0x2e
 8003b50:	f000 878e 	beq.w	8004a70 <HAL_UART_RxCpltCallback+0x3448>
                    	 	          }
                    	 	         else  if (uRx_Data[i]=='-'){
 8003b54:	4a0b      	ldr	r2, [pc, #44]	; (8003b84 <HAL_UART_RxCpltCallback+0x255c>)
 8003b56:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003b58:	4413      	add	r3, r2
 8003b5a:	781b      	ldrb	r3, [r3, #0]
 8003b5c:	2b2d      	cmp	r3, #45	; 0x2d
 8003b5e:	f000 8787 	beq.w	8004a70 <HAL_UART_RxCpltCallback+0x3448>

                    	 	       }
                    	 	         else if (uRx_Data[i]=='/'){
 8003b62:	4a08      	ldr	r2, [pc, #32]	; (8003b84 <HAL_UART_RxCpltCallback+0x255c>)
 8003b64:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003b66:	4413      	add	r3, r2
 8003b68:	781b      	ldrb	r3, [r3, #0]
 8003b6a:	2b2f      	cmp	r3, #47	; 0x2f
 8003b6c:	f040 8780 	bne.w	8004a70 <HAL_UART_RxCpltCallback+0x3448>
                    	 	        	   int f=0;
 8003b70:	2300      	movs	r3, #0
 8003b72:	627b      	str	r3, [r7, #36]	; 0x24
                    	 	        	   for (int j=k;j<=i-1;j++){
 8003b74:	4b01      	ldr	r3, [pc, #4]	; (8003b7c <HAL_UART_RxCpltCallback+0x2554>)
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	623b      	str	r3, [r7, #32]
 8003b7a:	e021      	b.n	8003bc0 <HAL_UART_RxCpltCallback+0x2598>
 8003b7c:	20001434 	.word	0x20001434
 8003b80:	2000082c 	.word	0x2000082c
 8003b84:	2000042c 	.word	0x2000042c
 8003b88:	2000142d 	.word	0x2000142d
 8003b8c:	40010800 	.word	0x40010800
 8003b90:	40011400 	.word	0x40011400
 8003b94:	2000142c 	.word	0x2000142c
 8003b98:	20000428 	.word	0x20000428
                    	 	        		   if (uRx_Data[j]!='.'&&uRx_Data[j]!='-'){
 8003b9c:	4a92      	ldr	r2, [pc, #584]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003b9e:	6a3b      	ldr	r3, [r7, #32]
 8003ba0:	4413      	add	r3, r2
 8003ba2:	781b      	ldrb	r3, [r3, #0]
 8003ba4:	2b2e      	cmp	r3, #46	; 0x2e
 8003ba6:	d008      	beq.n	8003bba <HAL_UART_RxCpltCallback+0x2592>
 8003ba8:	4a8f      	ldr	r2, [pc, #572]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003baa:	6a3b      	ldr	r3, [r7, #32]
 8003bac:	4413      	add	r3, r2
 8003bae:	781b      	ldrb	r3, [r3, #0]
 8003bb0:	2b2d      	cmp	r3, #45	; 0x2d
 8003bb2:	d002      	beq.n	8003bba <HAL_UART_RxCpltCallback+0x2592>
                    	 	        			   f=1;
 8003bb4:	2301      	movs	r3, #1
 8003bb6:	627b      	str	r3, [r7, #36]	; 0x24
                    	 	        			   break;
 8003bb8:	e006      	b.n	8003bc8 <HAL_UART_RxCpltCallback+0x25a0>
                    	 	        	   for (int j=k;j<=i-1;j++){
 8003bba:	6a3b      	ldr	r3, [r7, #32]
 8003bbc:	3301      	adds	r3, #1
 8003bbe:	623b      	str	r3, [r7, #32]
 8003bc0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003bc2:	6a3b      	ldr	r3, [r7, #32]
 8003bc4:	429a      	cmp	r2, r3
 8003bc6:	dce9      	bgt.n	8003b9c <HAL_UART_RxCpltCallback+0x2574>
                    	 	        		   }
                    	 	        	   }
                    	 	        	   if (f==1||i-k>4||(i-k==4&&((uRx_Data[k]=='.'&&uRx_Data[k+1]=='.'&&uRx_Data[k+2]=='-'&&uRx_Data[k+3]=='-')
 8003bc8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003bca:	2b01      	cmp	r3, #1
 8003bcc:	d07c      	beq.n	8003cc8 <HAL_UART_RxCpltCallback+0x26a0>
 8003bce:	4b87      	ldr	r3, [pc, #540]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003bd4:	1ad3      	subs	r3, r2, r3
 8003bd6:	2b04      	cmp	r3, #4
 8003bd8:	dc76      	bgt.n	8003cc8 <HAL_UART_RxCpltCallback+0x26a0>
 8003bda:	4b84      	ldr	r3, [pc, #528]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003be0:	1ad3      	subs	r3, r2, r3
 8003be2:	2b04      	cmp	r3, #4
 8003be4:	f040 810e 	bne.w	8003e04 <HAL_UART_RxCpltCallback+0x27dc>
 8003be8:	4b80      	ldr	r3, [pc, #512]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003bea:	681b      	ldr	r3, [r3, #0]
 8003bec:	4a7e      	ldr	r2, [pc, #504]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003bee:	5cd3      	ldrb	r3, [r2, r3]
 8003bf0:	2b2e      	cmp	r3, #46	; 0x2e
 8003bf2:	d114      	bne.n	8003c1e <HAL_UART_RxCpltCallback+0x25f6>
 8003bf4:	4b7d      	ldr	r3, [pc, #500]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	3301      	adds	r3, #1
 8003bfa:	4a7b      	ldr	r2, [pc, #492]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003bfc:	5cd3      	ldrb	r3, [r2, r3]
 8003bfe:	2b2e      	cmp	r3, #46	; 0x2e
 8003c00:	d10d      	bne.n	8003c1e <HAL_UART_RxCpltCallback+0x25f6>
 8003c02:	4b7a      	ldr	r3, [pc, #488]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	3302      	adds	r3, #2
 8003c08:	4a77      	ldr	r2, [pc, #476]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003c0a:	5cd3      	ldrb	r3, [r2, r3]
 8003c0c:	2b2d      	cmp	r3, #45	; 0x2d
 8003c0e:	d106      	bne.n	8003c1e <HAL_UART_RxCpltCallback+0x25f6>
 8003c10:	4b76      	ldr	r3, [pc, #472]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	3303      	adds	r3, #3
 8003c16:	4a74      	ldr	r2, [pc, #464]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003c18:	5cd3      	ldrb	r3, [r2, r3]
 8003c1a:	2b2d      	cmp	r3, #45	; 0x2d
 8003c1c:	d054      	beq.n	8003cc8 <HAL_UART_RxCpltCallback+0x26a0>
                    	 	        			   ||(uRx_Data[k]=='.'&&uRx_Data[k+1]=='-'&&uRx_Data[k+2]=='.'&&uRx_Data[k+3]=='-')
 8003c1e:	4b73      	ldr	r3, [pc, #460]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003c20:	681b      	ldr	r3, [r3, #0]
 8003c22:	4a71      	ldr	r2, [pc, #452]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003c24:	5cd3      	ldrb	r3, [r2, r3]
 8003c26:	2b2e      	cmp	r3, #46	; 0x2e
 8003c28:	d114      	bne.n	8003c54 <HAL_UART_RxCpltCallback+0x262c>
 8003c2a:	4b70      	ldr	r3, [pc, #448]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003c2c:	681b      	ldr	r3, [r3, #0]
 8003c2e:	3301      	adds	r3, #1
 8003c30:	4a6d      	ldr	r2, [pc, #436]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003c32:	5cd3      	ldrb	r3, [r2, r3]
 8003c34:	2b2d      	cmp	r3, #45	; 0x2d
 8003c36:	d10d      	bne.n	8003c54 <HAL_UART_RxCpltCallback+0x262c>
 8003c38:	4b6c      	ldr	r3, [pc, #432]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	3302      	adds	r3, #2
 8003c3e:	4a6a      	ldr	r2, [pc, #424]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003c40:	5cd3      	ldrb	r3, [r2, r3]
 8003c42:	2b2e      	cmp	r3, #46	; 0x2e
 8003c44:	d106      	bne.n	8003c54 <HAL_UART_RxCpltCallback+0x262c>
 8003c46:	4b69      	ldr	r3, [pc, #420]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	3303      	adds	r3, #3
 8003c4c:	4a66      	ldr	r2, [pc, #408]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003c4e:	5cd3      	ldrb	r3, [r2, r3]
 8003c50:	2b2d      	cmp	r3, #45	; 0x2d
 8003c52:	d039      	beq.n	8003cc8 <HAL_UART_RxCpltCallback+0x26a0>
    											   ||(uRx_Data[k]=='-'&&uRx_Data[k+1]=='-'&&uRx_Data[k+2]=='-'&&uRx_Data[k+3]=='.')
 8003c54:	4b65      	ldr	r3, [pc, #404]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	4a63      	ldr	r2, [pc, #396]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003c5a:	5cd3      	ldrb	r3, [r2, r3]
 8003c5c:	2b2d      	cmp	r3, #45	; 0x2d
 8003c5e:	d114      	bne.n	8003c8a <HAL_UART_RxCpltCallback+0x2662>
 8003c60:	4b62      	ldr	r3, [pc, #392]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	3301      	adds	r3, #1
 8003c66:	4a60      	ldr	r2, [pc, #384]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003c68:	5cd3      	ldrb	r3, [r2, r3]
 8003c6a:	2b2d      	cmp	r3, #45	; 0x2d
 8003c6c:	d10d      	bne.n	8003c8a <HAL_UART_RxCpltCallback+0x2662>
 8003c6e:	4b5f      	ldr	r3, [pc, #380]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003c70:	681b      	ldr	r3, [r3, #0]
 8003c72:	3302      	adds	r3, #2
 8003c74:	4a5c      	ldr	r2, [pc, #368]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003c76:	5cd3      	ldrb	r3, [r2, r3]
 8003c78:	2b2d      	cmp	r3, #45	; 0x2d
 8003c7a:	d106      	bne.n	8003c8a <HAL_UART_RxCpltCallback+0x2662>
 8003c7c:	4b5b      	ldr	r3, [pc, #364]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	3303      	adds	r3, #3
 8003c82:	4a59      	ldr	r2, [pc, #356]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003c84:	5cd3      	ldrb	r3, [r2, r3]
 8003c86:	2b2e      	cmp	r3, #46	; 0x2e
 8003c88:	d01e      	beq.n	8003cc8 <HAL_UART_RxCpltCallback+0x26a0>
    											   ||(uRx_Data[k]=='-'&&uRx_Data[k+1]=='-'&&uRx_Data[k+2]=='-'&&uRx_Data[k+3]=='-')))){
 8003c8a:	4b58      	ldr	r3, [pc, #352]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	4a56      	ldr	r2, [pc, #344]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003c90:	5cd3      	ldrb	r3, [r2, r3]
 8003c92:	2b2d      	cmp	r3, #45	; 0x2d
 8003c94:	f040 80b6 	bne.w	8003e04 <HAL_UART_RxCpltCallback+0x27dc>
 8003c98:	4b54      	ldr	r3, [pc, #336]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003c9a:	681b      	ldr	r3, [r3, #0]
 8003c9c:	3301      	adds	r3, #1
 8003c9e:	4a52      	ldr	r2, [pc, #328]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003ca0:	5cd3      	ldrb	r3, [r2, r3]
 8003ca2:	2b2d      	cmp	r3, #45	; 0x2d
 8003ca4:	f040 80ae 	bne.w	8003e04 <HAL_UART_RxCpltCallback+0x27dc>
 8003ca8:	4b50      	ldr	r3, [pc, #320]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	3302      	adds	r3, #2
 8003cae:	4a4e      	ldr	r2, [pc, #312]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003cb0:	5cd3      	ldrb	r3, [r2, r3]
 8003cb2:	2b2d      	cmp	r3, #45	; 0x2d
 8003cb4:	f040 80a6 	bne.w	8003e04 <HAL_UART_RxCpltCallback+0x27dc>
 8003cb8:	4b4c      	ldr	r3, [pc, #304]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003cba:	681b      	ldr	r3, [r3, #0]
 8003cbc:	3303      	adds	r3, #3
 8003cbe:	4a4a      	ldr	r2, [pc, #296]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003cc0:	5cd3      	ldrb	r3, [r2, r3]
 8003cc2:	2b2d      	cmp	r3, #45	; 0x2d
 8003cc4:	f040 809e 	bne.w	8003e04 <HAL_UART_RxCpltCallback+0x27dc>
                    	 	        		    uRx_Data1[uLength1]='d';
 8003cc8:	4b49      	ldr	r3, [pc, #292]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003cca:	781b      	ldrb	r3, [r3, #0]
 8003ccc:	461a      	mov	r2, r3
 8003cce:	4b49      	ldr	r3, [pc, #292]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003cd0:	2164      	movs	r1, #100	; 0x64
 8003cd2:	5499      	strb	r1, [r3, r2]
                       	 	        	    	uRx_Data1[uLength1+1]='e';
 8003cd4:	4b46      	ldr	r3, [pc, #280]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003cd6:	781b      	ldrb	r3, [r3, #0]
 8003cd8:	3301      	adds	r3, #1
 8003cda:	4a46      	ldr	r2, [pc, #280]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003cdc:	2165      	movs	r1, #101	; 0x65
 8003cde:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	uRx_Data1[uLength1+2]='c';
 8003ce0:	4b43      	ldr	r3, [pc, #268]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003ce2:	781b      	ldrb	r3, [r3, #0]
 8003ce4:	3302      	adds	r3, #2
 8003ce6:	4a43      	ldr	r2, [pc, #268]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003ce8:	2163      	movs	r1, #99	; 0x63
 8003cea:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	uRx_Data1[uLength1+3]='o';
 8003cec:	4b40      	ldr	r3, [pc, #256]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003cee:	781b      	ldrb	r3, [r3, #0]
 8003cf0:	3303      	adds	r3, #3
 8003cf2:	4a40      	ldr	r2, [pc, #256]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003cf4:	216f      	movs	r1, #111	; 0x6f
 8003cf6:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	uRx_Data1[uLength1+4]='d';
 8003cf8:	4b3d      	ldr	r3, [pc, #244]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003cfa:	781b      	ldrb	r3, [r3, #0]
 8003cfc:	3304      	adds	r3, #4
 8003cfe:	4a3d      	ldr	r2, [pc, #244]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003d00:	2164      	movs	r1, #100	; 0x64
 8003d02:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	uRx_Data1[uLength1+5]='e';
 8003d04:	4b3a      	ldr	r3, [pc, #232]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003d06:	781b      	ldrb	r3, [r3, #0]
 8003d08:	3305      	adds	r3, #5
 8003d0a:	4a3a      	ldr	r2, [pc, #232]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003d0c:	2165      	movs	r1, #101	; 0x65
 8003d0e:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	uRx_Data1[uLength1+6]=' ';
 8003d10:	4b37      	ldr	r3, [pc, #220]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003d12:	781b      	ldrb	r3, [r3, #0]
 8003d14:	3306      	adds	r3, #6
 8003d16:	4a37      	ldr	r2, [pc, #220]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003d18:	2120      	movs	r1, #32
 8003d1a:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	uRx_Data1[uLength1+7]='E';
 8003d1c:	4b34      	ldr	r3, [pc, #208]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003d1e:	781b      	ldrb	r3, [r3, #0]
 8003d20:	3307      	adds	r3, #7
 8003d22:	4a34      	ldr	r2, [pc, #208]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003d24:	2145      	movs	r1, #69	; 0x45
 8003d26:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	uRx_Data1[uLength1+8]='r';
 8003d28:	4b31      	ldr	r3, [pc, #196]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003d2a:	781b      	ldrb	r3, [r3, #0]
 8003d2c:	3308      	adds	r3, #8
 8003d2e:	4a31      	ldr	r2, [pc, #196]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003d30:	2172      	movs	r1, #114	; 0x72
 8003d32:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	uRx_Data1[uLength1+9]='r';
 8003d34:	4b2e      	ldr	r3, [pc, #184]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003d36:	781b      	ldrb	r3, [r3, #0]
 8003d38:	3309      	adds	r3, #9
 8003d3a:	4a2e      	ldr	r2, [pc, #184]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003d3c:	2172      	movs	r1, #114	; 0x72
 8003d3e:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	uRx_Data1[uLength1+10]='o';
 8003d40:	4b2b      	ldr	r3, [pc, #172]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003d42:	781b      	ldrb	r3, [r3, #0]
 8003d44:	330a      	adds	r3, #10
 8003d46:	4a2b      	ldr	r2, [pc, #172]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003d48:	216f      	movs	r1, #111	; 0x6f
 8003d4a:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	uRx_Data1[uLength1+11]='r';
 8003d4c:	4b28      	ldr	r3, [pc, #160]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003d4e:	781b      	ldrb	r3, [r3, #0]
 8003d50:	330b      	adds	r3, #11
 8003d52:	4a28      	ldr	r2, [pc, #160]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003d54:	2172      	movs	r1, #114	; 0x72
 8003d56:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	uRx_Data1[uLength1+12]=':';
 8003d58:	4b25      	ldr	r3, [pc, #148]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003d5a:	781b      	ldrb	r3, [r3, #0]
 8003d5c:	330c      	adds	r3, #12
 8003d5e:	4a25      	ldr	r2, [pc, #148]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003d60:	213a      	movs	r1, #58	; 0x3a
 8003d62:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	uRx_Data1[uLength1+13]=' ';
 8003d64:	4b22      	ldr	r3, [pc, #136]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003d66:	781b      	ldrb	r3, [r3, #0]
 8003d68:	330d      	adds	r3, #13
 8003d6a:	4a22      	ldr	r2, [pc, #136]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003d6c:	2120      	movs	r1, #32
 8003d6e:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	for (int j=k;j<=i-1;j++){
 8003d70:	4b1e      	ldr	r3, [pc, #120]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	61fb      	str	r3, [r7, #28]
 8003d76:	e012      	b.n	8003d9e <HAL_UART_RxCpltCallback+0x2776>
                         	 	        		  	uRx_Data1[uLength1+13+j-k+1]=uRx_Data[j];
 8003d78:	4b1d      	ldr	r3, [pc, #116]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003d7a:	781b      	ldrb	r3, [r3, #0]
 8003d7c:	f103 020d 	add.w	r2, r3, #13
 8003d80:	69fb      	ldr	r3, [r7, #28]
 8003d82:	441a      	add	r2, r3
 8003d84:	4b19      	ldr	r3, [pc, #100]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003d86:	681b      	ldr	r3, [r3, #0]
 8003d88:	1ad3      	subs	r3, r2, r3
 8003d8a:	3301      	adds	r3, #1
 8003d8c:	4916      	ldr	r1, [pc, #88]	; (8003de8 <HAL_UART_RxCpltCallback+0x27c0>)
 8003d8e:	69fa      	ldr	r2, [r7, #28]
 8003d90:	440a      	add	r2, r1
 8003d92:	7811      	ldrb	r1, [r2, #0]
 8003d94:	4a17      	ldr	r2, [pc, #92]	; (8003df4 <HAL_UART_RxCpltCallback+0x27cc>)
 8003d96:	54d1      	strb	r1, [r2, r3]
                       	 	        	    	for (int j=k;j<=i-1;j++){
 8003d98:	69fb      	ldr	r3, [r7, #28]
 8003d9a:	3301      	adds	r3, #1
 8003d9c:	61fb      	str	r3, [r7, #28]
 8003d9e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003da0:	69fb      	ldr	r3, [r7, #28]
 8003da2:	429a      	cmp	r2, r3
 8003da4:	dce8      	bgt.n	8003d78 <HAL_UART_RxCpltCallback+0x2750>
                         	 	        	   }
                       	 	        	    	uLength1+=13+i-k+1;
 8003da6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003da8:	b2da      	uxtb	r2, r3
 8003daa:	4b10      	ldr	r3, [pc, #64]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003dac:	681b      	ldr	r3, [r3, #0]
 8003dae:	b2db      	uxtb	r3, r3
 8003db0:	1ad3      	subs	r3, r2, r3
 8003db2:	b2da      	uxtb	r2, r3
 8003db4:	4b0e      	ldr	r3, [pc, #56]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003db6:	781b      	ldrb	r3, [r3, #0]
 8003db8:	4413      	add	r3, r2
 8003dba:	b2db      	uxtb	r3, r3
 8003dbc:	330e      	adds	r3, #14
 8003dbe:	b2da      	uxtb	r2, r3
 8003dc0:	4b0b      	ldr	r3, [pc, #44]	; (8003df0 <HAL_UART_RxCpltCallback+0x27c8>)
 8003dc2:	701a      	strb	r2, [r3, #0]
                       	 	        	    	k=i+1;
 8003dc4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003dc6:	3301      	adds	r3, #1
 8003dc8:	4a08      	ldr	r2, [pc, #32]	; (8003dec <HAL_UART_RxCpltCallback+0x27c4>)
 8003dca:	6013      	str	r3, [r2, #0]
                       	 	        	    uRx_Data2[h]='d';
 8003dcc:	4b0a      	ldr	r3, [pc, #40]	; (8003df8 <HAL_UART_RxCpltCallback+0x27d0>)
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	4a0a      	ldr	r2, [pc, #40]	; (8003dfc <HAL_UART_RxCpltCallback+0x27d4>)
 8003dd2:	2164      	movs	r1, #100	; 0x64
 8003dd4:	54d1      	strb	r1, [r2, r3]
                       	 	        	    uLength2+=1;
 8003dd6:	4b0a      	ldr	r3, [pc, #40]	; (8003e00 <HAL_UART_RxCpltCallback+0x27d8>)
 8003dd8:	781b      	ldrb	r3, [r3, #0]
 8003dda:	3301      	adds	r3, #1
 8003ddc:	b2da      	uxtb	r2, r3
 8003dde:	4b08      	ldr	r3, [pc, #32]	; (8003e00 <HAL_UART_RxCpltCallback+0x27d8>)
 8003de0:	701a      	strb	r2, [r3, #0]
 8003de2:	f000 be45 	b.w	8004a70 <HAL_UART_RxCpltCallback+0x3448>
 8003de6:	bf00      	nop
 8003de8:	2000042c 	.word	0x2000042c
 8003dec:	20001434 	.word	0x20001434
 8003df0:	2000142d 	.word	0x2000142d
 8003df4:	2000082c 	.word	0x2000082c
 8003df8:	20001438 	.word	0x20001438
 8003dfc:	20000c2c 	.word	0x20000c2c
 8003e00:	2000142e 	.word	0x2000142e
                    	 	        	   }
                    	 	        	   else {
                    	 	        		   if (i-k==1){
 8003e04:	4b8b      	ldr	r3, [pc, #556]	; (8004034 <HAL_UART_RxCpltCallback+0x2a0c>)
 8003e06:	681b      	ldr	r3, [r3, #0]
 8003e08:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003e0a:	1ad3      	subs	r3, r2, r3
 8003e0c:	2b01      	cmp	r3, #1
 8003e0e:	d14a      	bne.n	8003ea6 <HAL_UART_RxCpltCallback+0x287e>
                    	 	        			  if (uRx_Data[k]=='.') {
 8003e10:	4b88      	ldr	r3, [pc, #544]	; (8004034 <HAL_UART_RxCpltCallback+0x2a0c>)
 8003e12:	681b      	ldr	r3, [r3, #0]
 8003e14:	4a88      	ldr	r2, [pc, #544]	; (8004038 <HAL_UART_RxCpltCallback+0x2a10>)
 8003e16:	5cd3      	ldrb	r3, [r2, r3]
 8003e18:	2b2e      	cmp	r3, #46	; 0x2e
 8003e1a:	d11e      	bne.n	8003e5a <HAL_UART_RxCpltCallback+0x2832>
                    	 	        				  uRx_Data1[uLength1]='E';
 8003e1c:	4b87      	ldr	r3, [pc, #540]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003e1e:	781b      	ldrb	r3, [r3, #0]
 8003e20:	461a      	mov	r2, r3
 8003e22:	4b87      	ldr	r3, [pc, #540]	; (8004040 <HAL_UART_RxCpltCallback+0x2a18>)
 8003e24:	2145      	movs	r1, #69	; 0x45
 8003e26:	5499      	strb	r1, [r3, r2]
                    	 	        				  uLength1++; uRx_Data2[h]='.';
 8003e28:	4b84      	ldr	r3, [pc, #528]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003e2a:	781b      	ldrb	r3, [r3, #0]
 8003e2c:	3301      	adds	r3, #1
 8003e2e:	b2da      	uxtb	r2, r3
 8003e30:	4b82      	ldr	r3, [pc, #520]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003e32:	701a      	strb	r2, [r3, #0]
 8003e34:	4b83      	ldr	r3, [pc, #524]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	4a83      	ldr	r2, [pc, #524]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003e3a:	212e      	movs	r1, #46	; 0x2e
 8003e3c:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	uRx_Data2[h+1]='/';
 8003e3e:	4b81      	ldr	r3, [pc, #516]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	3301      	adds	r3, #1
 8003e44:	4a80      	ldr	r2, [pc, #512]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003e46:	212f      	movs	r1, #47	; 0x2f
 8003e48:	54d1      	strb	r1, [r2, r3]
                               	 	        	    	//k=k+2;
                               	 	        	        uLength2+=2;
 8003e4a:	4b80      	ldr	r3, [pc, #512]	; (800404c <HAL_UART_RxCpltCallback+0x2a24>)
 8003e4c:	781b      	ldrb	r3, [r3, #0]
 8003e4e:	3302      	adds	r3, #2
 8003e50:	b2da      	uxtb	r2, r3
 8003e52:	4b7e      	ldr	r3, [pc, #504]	; (800404c <HAL_UART_RxCpltCallback+0x2a24>)
 8003e54:	701a      	strb	r2, [r3, #0]
 8003e56:	f000 be07 	b.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>

                    	 	        			  }
                    	 	        			  else if (uRx_Data[k]=='-') {
 8003e5a:	4b76      	ldr	r3, [pc, #472]	; (8004034 <HAL_UART_RxCpltCallback+0x2a0c>)
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	4a76      	ldr	r2, [pc, #472]	; (8004038 <HAL_UART_RxCpltCallback+0x2a10>)
 8003e60:	5cd3      	ldrb	r3, [r2, r3]
 8003e62:	2b2d      	cmp	r3, #45	; 0x2d
 8003e64:	f040 8600 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                    	 	        				  uRx_Data1[uLength1]='T';
 8003e68:	4b74      	ldr	r3, [pc, #464]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003e6a:	781b      	ldrb	r3, [r3, #0]
 8003e6c:	461a      	mov	r2, r3
 8003e6e:	4b74      	ldr	r3, [pc, #464]	; (8004040 <HAL_UART_RxCpltCallback+0x2a18>)
 8003e70:	2154      	movs	r1, #84	; 0x54
 8003e72:	5499      	strb	r1, [r3, r2]
                    	 	        				  uLength1++;uRx_Data2[h]='-';
 8003e74:	4b71      	ldr	r3, [pc, #452]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003e76:	781b      	ldrb	r3, [r3, #0]
 8003e78:	3301      	adds	r3, #1
 8003e7a:	b2da      	uxtb	r2, r3
 8003e7c:	4b6f      	ldr	r3, [pc, #444]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003e7e:	701a      	strb	r2, [r3, #0]
 8003e80:	4b70      	ldr	r3, [pc, #448]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003e82:	681b      	ldr	r3, [r3, #0]
 8003e84:	4a70      	ldr	r2, [pc, #448]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003e86:	212d      	movs	r1, #45	; 0x2d
 8003e88:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+1]='/';
 8003e8a:	4b6e      	ldr	r3, [pc, #440]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	3301      	adds	r3, #1
 8003e90:	4a6d      	ldr	r2, [pc, #436]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003e92:	212f      	movs	r1, #47	; 0x2f
 8003e94:	54d1      	strb	r1, [r2, r3]
                               	 	        	    	//k=k+2;
                               	 	        	        uLength2+=2;
 8003e96:	4b6d      	ldr	r3, [pc, #436]	; (800404c <HAL_UART_RxCpltCallback+0x2a24>)
 8003e98:	781b      	ldrb	r3, [r3, #0]
 8003e9a:	3302      	adds	r3, #2
 8003e9c:	b2da      	uxtb	r2, r3
 8003e9e:	4b6b      	ldr	r3, [pc, #428]	; (800404c <HAL_UART_RxCpltCallback+0x2a24>)
 8003ea0:	701a      	strb	r2, [r3, #0]
 8003ea2:	f000 bde1 	b.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                    	 	        			  }
                    	 	        		  }else if(i-k==2) {
 8003ea6:	4b63      	ldr	r3, [pc, #396]	; (8004034 <HAL_UART_RxCpltCallback+0x2a0c>)
 8003ea8:	681b      	ldr	r3, [r3, #0]
 8003eaa:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003eac:	1ad3      	subs	r3, r2, r3
 8003eae:	2b02      	cmp	r3, #2
 8003eb0:	f040 80ce 	bne.w	8004050 <HAL_UART_RxCpltCallback+0x2a28>
                    	 	        			 if (uRx_Data[k]=='.') {
 8003eb4:	4b5f      	ldr	r3, [pc, #380]	; (8004034 <HAL_UART_RxCpltCallback+0x2a0c>)
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	4a5f      	ldr	r2, [pc, #380]	; (8004038 <HAL_UART_RxCpltCallback+0x2a10>)
 8003eba:	5cd3      	ldrb	r3, [r2, r3]
 8003ebc:	2b2e      	cmp	r3, #46	; 0x2e
 8003ebe:	d158      	bne.n	8003f72 <HAL_UART_RxCpltCallback+0x294a>
                    	 	        				  if (uRx_Data[k+1]=='.') {
 8003ec0:	4b5c      	ldr	r3, [pc, #368]	; (8004034 <HAL_UART_RxCpltCallback+0x2a0c>)
 8003ec2:	681b      	ldr	r3, [r3, #0]
 8003ec4:	3301      	adds	r3, #1
 8003ec6:	4a5c      	ldr	r2, [pc, #368]	; (8004038 <HAL_UART_RxCpltCallback+0x2a10>)
 8003ec8:	5cd3      	ldrb	r3, [r2, r3]
 8003eca:	2b2e      	cmp	r3, #46	; 0x2e
 8003ecc:	d124      	bne.n	8003f18 <HAL_UART_RxCpltCallback+0x28f0>
                    	 	        				       uRx_Data1[uLength1]='I';
 8003ece:	4b5b      	ldr	r3, [pc, #364]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003ed0:	781b      	ldrb	r3, [r3, #0]
 8003ed2:	461a      	mov	r2, r3
 8003ed4:	4b5a      	ldr	r3, [pc, #360]	; (8004040 <HAL_UART_RxCpltCallback+0x2a18>)
 8003ed6:	2149      	movs	r1, #73	; 0x49
 8003ed8:	5499      	strb	r1, [r3, r2]
                    	 	        				       uLength1++;uRx_Data2[h]='.';
 8003eda:	4b58      	ldr	r3, [pc, #352]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003edc:	781b      	ldrb	r3, [r3, #0]
 8003ede:	3301      	adds	r3, #1
 8003ee0:	b2da      	uxtb	r2, r3
 8003ee2:	4b56      	ldr	r3, [pc, #344]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003ee4:	701a      	strb	r2, [r3, #0]
 8003ee6:	4b57      	ldr	r3, [pc, #348]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	4a57      	ldr	r2, [pc, #348]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003eec:	212e      	movs	r1, #46	; 0x2e
 8003eee:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+1]='.';
 8003ef0:	4b54      	ldr	r3, [pc, #336]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003ef2:	681b      	ldr	r3, [r3, #0]
 8003ef4:	3301      	adds	r3, #1
 8003ef6:	4a54      	ldr	r2, [pc, #336]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003ef8:	212e      	movs	r1, #46	; 0x2e
 8003efa:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+2]='/';
 8003efc:	4b51      	ldr	r3, [pc, #324]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	3302      	adds	r3, #2
 8003f02:	4a51      	ldr	r2, [pc, #324]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003f04:	212f      	movs	r1, #47	; 0x2f
 8003f06:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+3;
                                    	 	        	        uLength2+=3;
 8003f08:	4b50      	ldr	r3, [pc, #320]	; (800404c <HAL_UART_RxCpltCallback+0x2a24>)
 8003f0a:	781b      	ldrb	r3, [r3, #0]
 8003f0c:	3303      	adds	r3, #3
 8003f0e:	b2da      	uxtb	r2, r3
 8003f10:	4b4e      	ldr	r3, [pc, #312]	; (800404c <HAL_UART_RxCpltCallback+0x2a24>)
 8003f12:	701a      	strb	r2, [r3, #0]
 8003f14:	f000 bda8 	b.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                    	 	        				   }
                    	 	        				 else if (uRx_Data[k+1]=='-') {
 8003f18:	4b46      	ldr	r3, [pc, #280]	; (8004034 <HAL_UART_RxCpltCallback+0x2a0c>)
 8003f1a:	681b      	ldr	r3, [r3, #0]
 8003f1c:	3301      	adds	r3, #1
 8003f1e:	4a46      	ldr	r2, [pc, #280]	; (8004038 <HAL_UART_RxCpltCallback+0x2a10>)
 8003f20:	5cd3      	ldrb	r3, [r2, r3]
 8003f22:	2b2d      	cmp	r3, #45	; 0x2d
 8003f24:	f040 85a0 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                    	 	        				       uRx_Data1[uLength1]='A';
 8003f28:	4b44      	ldr	r3, [pc, #272]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003f2a:	781b      	ldrb	r3, [r3, #0]
 8003f2c:	461a      	mov	r2, r3
 8003f2e:	4b44      	ldr	r3, [pc, #272]	; (8004040 <HAL_UART_RxCpltCallback+0x2a18>)
 8003f30:	2141      	movs	r1, #65	; 0x41
 8003f32:	5499      	strb	r1, [r3, r2]
                    	 	        				       uLength1++;
 8003f34:	4b41      	ldr	r3, [pc, #260]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003f36:	781b      	ldrb	r3, [r3, #0]
 8003f38:	3301      	adds	r3, #1
 8003f3a:	b2da      	uxtb	r2, r3
 8003f3c:	4b3f      	ldr	r3, [pc, #252]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003f3e:	701a      	strb	r2, [r3, #0]
                    	 	        				       uRx_Data2[h]='.';
 8003f40:	4b40      	ldr	r3, [pc, #256]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003f42:	681b      	ldr	r3, [r3, #0]
 8003f44:	4a40      	ldr	r2, [pc, #256]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003f46:	212e      	movs	r1, #46	; 0x2e
 8003f48:	54d1      	strb	r1, [r2, r3]
                               	 	        	    	  uRx_Data2[h+1]='-';
 8003f4a:	4b3e      	ldr	r3, [pc, #248]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	3301      	adds	r3, #1
 8003f50:	4a3d      	ldr	r2, [pc, #244]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003f52:	212d      	movs	r1, #45	; 0x2d
 8003f54:	54d1      	strb	r1, [r2, r3]
                               	 	        	    	  uRx_Data2[h+2]='/';
 8003f56:	4b3b      	ldr	r3, [pc, #236]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003f58:	681b      	ldr	r3, [r3, #0]
 8003f5a:	3302      	adds	r3, #2
 8003f5c:	4a3a      	ldr	r2, [pc, #232]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003f5e:	212f      	movs	r1, #47	; 0x2f
 8003f60:	54d1      	strb	r1, [r2, r3]
                               	 	        	    	//k=k+3;
                               	 	        	        uLength2+=3;
 8003f62:	4b3a      	ldr	r3, [pc, #232]	; (800404c <HAL_UART_RxCpltCallback+0x2a24>)
 8003f64:	781b      	ldrb	r3, [r3, #0]
 8003f66:	3303      	adds	r3, #3
 8003f68:	b2da      	uxtb	r2, r3
 8003f6a:	4b38      	ldr	r3, [pc, #224]	; (800404c <HAL_UART_RxCpltCallback+0x2a24>)
 8003f6c:	701a      	strb	r2, [r3, #0]
 8003f6e:	f000 bd7b 	b.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>

                    	 	        				   }

                    	 	        			  }
                    	 	        			 else if (uRx_Data[k]=='-') {
 8003f72:	4b30      	ldr	r3, [pc, #192]	; (8004034 <HAL_UART_RxCpltCallback+0x2a0c>)
 8003f74:	681b      	ldr	r3, [r3, #0]
 8003f76:	4a30      	ldr	r2, [pc, #192]	; (8004038 <HAL_UART_RxCpltCallback+0x2a10>)
 8003f78:	5cd3      	ldrb	r3, [r2, r3]
 8003f7a:	2b2d      	cmp	r3, #45	; 0x2d
 8003f7c:	f040 8574 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                    	 	        				  if (uRx_Data[k+1]=='.') {
 8003f80:	4b2c      	ldr	r3, [pc, #176]	; (8004034 <HAL_UART_RxCpltCallback+0x2a0c>)
 8003f82:	681b      	ldr	r3, [r3, #0]
 8003f84:	3301      	adds	r3, #1
 8003f86:	4a2c      	ldr	r2, [pc, #176]	; (8004038 <HAL_UART_RxCpltCallback+0x2a10>)
 8003f88:	5cd3      	ldrb	r3, [r2, r3]
 8003f8a:	2b2e      	cmp	r3, #46	; 0x2e
 8003f8c:	d124      	bne.n	8003fd8 <HAL_UART_RxCpltCallback+0x29b0>
                    	 	        				        uRx_Data1[uLength1]='N';
 8003f8e:	4b2b      	ldr	r3, [pc, #172]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003f90:	781b      	ldrb	r3, [r3, #0]
 8003f92:	461a      	mov	r2, r3
 8003f94:	4b2a      	ldr	r3, [pc, #168]	; (8004040 <HAL_UART_RxCpltCallback+0x2a18>)
 8003f96:	214e      	movs	r1, #78	; 0x4e
 8003f98:	5499      	strb	r1, [r3, r2]
                    	 	        				        uLength1++;uRx_Data2[h]='-';
 8003f9a:	4b28      	ldr	r3, [pc, #160]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003f9c:	781b      	ldrb	r3, [r3, #0]
 8003f9e:	3301      	adds	r3, #1
 8003fa0:	b2da      	uxtb	r2, r3
 8003fa2:	4b26      	ldr	r3, [pc, #152]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003fa4:	701a      	strb	r2, [r3, #0]
 8003fa6:	4b27      	ldr	r3, [pc, #156]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003fa8:	681b      	ldr	r3, [r3, #0]
 8003faa:	4a27      	ldr	r2, [pc, #156]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003fac:	212d      	movs	r1, #45	; 0x2d
 8003fae:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+1]='.';
 8003fb0:	4b24      	ldr	r3, [pc, #144]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	3301      	adds	r3, #1
 8003fb6:	4a24      	ldr	r2, [pc, #144]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003fb8:	212e      	movs	r1, #46	; 0x2e
 8003fba:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+2]='/';
 8003fbc:	4b21      	ldr	r3, [pc, #132]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	3302      	adds	r3, #2
 8003fc2:	4a21      	ldr	r2, [pc, #132]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8003fc4:	212f      	movs	r1, #47	; 0x2f
 8003fc6:	54d1      	strb	r1, [r2, r3]
                                     	 	        	    	//k=k+3;
                                     	 	        	        uLength2+=3;
 8003fc8:	4b20      	ldr	r3, [pc, #128]	; (800404c <HAL_UART_RxCpltCallback+0x2a24>)
 8003fca:	781b      	ldrb	r3, [r3, #0]
 8003fcc:	3303      	adds	r3, #3
 8003fce:	b2da      	uxtb	r2, r3
 8003fd0:	4b1e      	ldr	r3, [pc, #120]	; (800404c <HAL_UART_RxCpltCallback+0x2a24>)
 8003fd2:	701a      	strb	r2, [r3, #0]
 8003fd4:	f000 bd48 	b.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                    	 	        				  }
                    	 	        				  else if (uRx_Data[k+1]=='-') {
 8003fd8:	4b16      	ldr	r3, [pc, #88]	; (8004034 <HAL_UART_RxCpltCallback+0x2a0c>)
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	3301      	adds	r3, #1
 8003fde:	4a16      	ldr	r2, [pc, #88]	; (8004038 <HAL_UART_RxCpltCallback+0x2a10>)
 8003fe0:	5cd3      	ldrb	r3, [r2, r3]
 8003fe2:	2b2d      	cmp	r3, #45	; 0x2d
 8003fe4:	f040 8540 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                    	 	        				        uRx_Data1[uLength1]='M';
 8003fe8:	4b14      	ldr	r3, [pc, #80]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003fea:	781b      	ldrb	r3, [r3, #0]
 8003fec:	461a      	mov	r2, r3
 8003fee:	4b14      	ldr	r3, [pc, #80]	; (8004040 <HAL_UART_RxCpltCallback+0x2a18>)
 8003ff0:	214d      	movs	r1, #77	; 0x4d
 8003ff2:	5499      	strb	r1, [r3, r2]
                    	 	        				        uLength1++;uRx_Data2[h]='-';
 8003ff4:	4b11      	ldr	r3, [pc, #68]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003ff6:	781b      	ldrb	r3, [r3, #0]
 8003ff8:	3301      	adds	r3, #1
 8003ffa:	b2da      	uxtb	r2, r3
 8003ffc:	4b0f      	ldr	r3, [pc, #60]	; (800403c <HAL_UART_RxCpltCallback+0x2a14>)
 8003ffe:	701a      	strb	r2, [r3, #0]
 8004000:	4b10      	ldr	r3, [pc, #64]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8004002:	681b      	ldr	r3, [r3, #0]
 8004004:	4a10      	ldr	r2, [pc, #64]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8004006:	212d      	movs	r1, #45	; 0x2d
 8004008:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+1]='-';
 800400a:	4b0e      	ldr	r3, [pc, #56]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 800400c:	681b      	ldr	r3, [r3, #0]
 800400e:	3301      	adds	r3, #1
 8004010:	4a0d      	ldr	r2, [pc, #52]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 8004012:	212d      	movs	r1, #45	; 0x2d
 8004014:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+2]='/';
 8004016:	4b0b      	ldr	r3, [pc, #44]	; (8004044 <HAL_UART_RxCpltCallback+0x2a1c>)
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	3302      	adds	r3, #2
 800401c:	4a0a      	ldr	r2, [pc, #40]	; (8004048 <HAL_UART_RxCpltCallback+0x2a20>)
 800401e:	212f      	movs	r1, #47	; 0x2f
 8004020:	54d1      	strb	r1, [r2, r3]
                                     	 	        	    	//k=k+3;
                                     	 	        	        uLength2+=3;
 8004022:	4b0a      	ldr	r3, [pc, #40]	; (800404c <HAL_UART_RxCpltCallback+0x2a24>)
 8004024:	781b      	ldrb	r3, [r3, #0]
 8004026:	3303      	adds	r3, #3
 8004028:	b2da      	uxtb	r2, r3
 800402a:	4b08      	ldr	r3, [pc, #32]	; (800404c <HAL_UART_RxCpltCallback+0x2a24>)
 800402c:	701a      	strb	r2, [r3, #0]
 800402e:	f000 bd1b 	b.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
 8004032:	bf00      	nop
 8004034:	20001434 	.word	0x20001434
 8004038:	2000042c 	.word	0x2000042c
 800403c:	2000142d 	.word	0x2000142d
 8004040:	2000082c 	.word	0x2000082c
 8004044:	20001438 	.word	0x20001438
 8004048:	20000c2c 	.word	0x20000c2c
 800404c:	2000142e 	.word	0x2000142e
                    	 	        				  }

                    	 	        			}

                    	 	        		  }else if (i-k==3){
 8004050:	4b92      	ldr	r3, [pc, #584]	; (800429c <HAL_UART_RxCpltCallback+0x2c74>)
 8004052:	681b      	ldr	r3, [r3, #0]
 8004054:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8004056:	1ad3      	subs	r3, r2, r3
 8004058:	2b03      	cmp	r3, #3
 800405a:	f040 81ca 	bne.w	80043f2 <HAL_UART_RxCpltCallback+0x2dca>
                    	 	        	     if (uRx_Data[k]=='.') {
 800405e:	4b8f      	ldr	r3, [pc, #572]	; (800429c <HAL_UART_RxCpltCallback+0x2c74>)
 8004060:	681b      	ldr	r3, [r3, #0]
 8004062:	4a8f      	ldr	r2, [pc, #572]	; (80042a0 <HAL_UART_RxCpltCallback+0x2c78>)
 8004064:	5cd3      	ldrb	r3, [r2, r3]
 8004066:	2b2e      	cmp	r3, #46	; 0x2e
 8004068:	f040 80d9 	bne.w	800421e <HAL_UART_RxCpltCallback+0x2bf6>
                	 	        				  if (uRx_Data[k+1]=='.') {
 800406c:	4b8b      	ldr	r3, [pc, #556]	; (800429c <HAL_UART_RxCpltCallback+0x2c74>)
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	3301      	adds	r3, #1
 8004072:	4a8b      	ldr	r2, [pc, #556]	; (80042a0 <HAL_UART_RxCpltCallback+0x2c78>)
 8004074:	5cd3      	ldrb	r3, [r2, r3]
 8004076:	2b2e      	cmp	r3, #46	; 0x2e
 8004078:	d164      	bne.n	8004144 <HAL_UART_RxCpltCallback+0x2b1c>
                	 	        					  if (uRx_Data[k+2]=='.') {
 800407a:	4b88      	ldr	r3, [pc, #544]	; (800429c <HAL_UART_RxCpltCallback+0x2c74>)
 800407c:	681b      	ldr	r3, [r3, #0]
 800407e:	3302      	adds	r3, #2
 8004080:	4a87      	ldr	r2, [pc, #540]	; (80042a0 <HAL_UART_RxCpltCallback+0x2c78>)
 8004082:	5cd3      	ldrb	r3, [r2, r3]
 8004084:	2b2e      	cmp	r3, #46	; 0x2e
 8004086:	d12a      	bne.n	80040de <HAL_UART_RxCpltCallback+0x2ab6>
               	 	        				       uRx_Data1[uLength1]='S';
 8004088:	4b86      	ldr	r3, [pc, #536]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 800408a:	781b      	ldrb	r3, [r3, #0]
 800408c:	461a      	mov	r2, r3
 800408e:	4b86      	ldr	r3, [pc, #536]	; (80042a8 <HAL_UART_RxCpltCallback+0x2c80>)
 8004090:	2153      	movs	r1, #83	; 0x53
 8004092:	5499      	strb	r1, [r3, r2]
               	 	        				       uLength1++; uRx_Data2[h]='.';
 8004094:	4b83      	ldr	r3, [pc, #524]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 8004096:	781b      	ldrb	r3, [r3, #0]
 8004098:	3301      	adds	r3, #1
 800409a:	b2da      	uxtb	r2, r3
 800409c:	4b81      	ldr	r3, [pc, #516]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 800409e:	701a      	strb	r2, [r3, #0]
 80040a0:	4b82      	ldr	r3, [pc, #520]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 80040a2:	681b      	ldr	r3, [r3, #0]
 80040a4:	4a82      	ldr	r2, [pc, #520]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 80040a6:	212e      	movs	r1, #46	; 0x2e
 80040a8:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+1]='.';
 80040aa:	4b80      	ldr	r3, [pc, #512]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	3301      	adds	r3, #1
 80040b0:	4a7f      	ldr	r2, [pc, #508]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 80040b2:	212e      	movs	r1, #46	; 0x2e
 80040b4:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+2]='.';
 80040b6:	4b7d      	ldr	r3, [pc, #500]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 80040b8:	681b      	ldr	r3, [r3, #0]
 80040ba:	3302      	adds	r3, #2
 80040bc:	4a7c      	ldr	r2, [pc, #496]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 80040be:	212e      	movs	r1, #46	; 0x2e
 80040c0:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+3]='/';
 80040c2:	4b7a      	ldr	r3, [pc, #488]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	3303      	adds	r3, #3
 80040c8:	4a79      	ldr	r2, [pc, #484]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 80040ca:	212f      	movs	r1, #47	; 0x2f
 80040cc:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	//k=k+4;
                            	 	        	        uLength2+=4;
 80040ce:	4b79      	ldr	r3, [pc, #484]	; (80042b4 <HAL_UART_RxCpltCallback+0x2c8c>)
 80040d0:	781b      	ldrb	r3, [r3, #0]
 80040d2:	3304      	adds	r3, #4
 80040d4:	b2da      	uxtb	r2, r3
 80040d6:	4b77      	ldr	r3, [pc, #476]	; (80042b4 <HAL_UART_RxCpltCallback+0x2c8c>)
 80040d8:	701a      	strb	r2, [r3, #0]
 80040da:	f000 bcc5 	b.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
               	 	        				   }
               	 	        				 else if (uRx_Data[k+2]=='-') {
 80040de:	4b6f      	ldr	r3, [pc, #444]	; (800429c <HAL_UART_RxCpltCallback+0x2c74>)
 80040e0:	681b      	ldr	r3, [r3, #0]
 80040e2:	3302      	adds	r3, #2
 80040e4:	4a6e      	ldr	r2, [pc, #440]	; (80042a0 <HAL_UART_RxCpltCallback+0x2c78>)
 80040e6:	5cd3      	ldrb	r3, [r2, r3]
 80040e8:	2b2d      	cmp	r3, #45	; 0x2d
 80040ea:	f040 84bd 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
               	 	        				       uRx_Data1[uLength1]='U';
 80040ee:	4b6d      	ldr	r3, [pc, #436]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 80040f0:	781b      	ldrb	r3, [r3, #0]
 80040f2:	461a      	mov	r2, r3
 80040f4:	4b6c      	ldr	r3, [pc, #432]	; (80042a8 <HAL_UART_RxCpltCallback+0x2c80>)
 80040f6:	2155      	movs	r1, #85	; 0x55
 80040f8:	5499      	strb	r1, [r3, r2]
               	 	        				       uLength1++;uRx_Data2[h]='.';
 80040fa:	4b6a      	ldr	r3, [pc, #424]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 80040fc:	781b      	ldrb	r3, [r3, #0]
 80040fe:	3301      	adds	r3, #1
 8004100:	b2da      	uxtb	r2, r3
 8004102:	4b68      	ldr	r3, [pc, #416]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 8004104:	701a      	strb	r2, [r3, #0]
 8004106:	4b69      	ldr	r3, [pc, #420]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 8004108:	681b      	ldr	r3, [r3, #0]
 800410a:	4a69      	ldr	r2, [pc, #420]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 800410c:	212e      	movs	r1, #46	; 0x2e
 800410e:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+1]='.';
 8004110:	4b66      	ldr	r3, [pc, #408]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 8004112:	681b      	ldr	r3, [r3, #0]
 8004114:	3301      	adds	r3, #1
 8004116:	4a66      	ldr	r2, [pc, #408]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 8004118:	212e      	movs	r1, #46	; 0x2e
 800411a:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+2]='-';
 800411c:	4b63      	ldr	r3, [pc, #396]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 800411e:	681b      	ldr	r3, [r3, #0]
 8004120:	3302      	adds	r3, #2
 8004122:	4a63      	ldr	r2, [pc, #396]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 8004124:	212d      	movs	r1, #45	; 0x2d
 8004126:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+3]='/';
 8004128:	4b60      	ldr	r3, [pc, #384]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 800412a:	681b      	ldr	r3, [r3, #0]
 800412c:	3303      	adds	r3, #3
 800412e:	4a60      	ldr	r2, [pc, #384]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 8004130:	212f      	movs	r1, #47	; 0x2f
 8004132:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	//k=k+4;
                            	 	        	        uLength2+=4;
 8004134:	4b5f      	ldr	r3, [pc, #380]	; (80042b4 <HAL_UART_RxCpltCallback+0x2c8c>)
 8004136:	781b      	ldrb	r3, [r3, #0]
 8004138:	3304      	adds	r3, #4
 800413a:	b2da      	uxtb	r2, r3
 800413c:	4b5d      	ldr	r3, [pc, #372]	; (80042b4 <HAL_UART_RxCpltCallback+0x2c8c>)
 800413e:	701a      	strb	r2, [r3, #0]
 8004140:	f000 bc92 	b.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
               	 	        				   }

                	 	        				   }
                	 	        				 else if (uRx_Data[k+1]=='-') {
 8004144:	4b55      	ldr	r3, [pc, #340]	; (800429c <HAL_UART_RxCpltCallback+0x2c74>)
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	3301      	adds	r3, #1
 800414a:	4a55      	ldr	r2, [pc, #340]	; (80042a0 <HAL_UART_RxCpltCallback+0x2c78>)
 800414c:	5cd3      	ldrb	r3, [r2, r3]
 800414e:	2b2d      	cmp	r3, #45	; 0x2d
 8004150:	f040 848a 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                	 	        					 if (uRx_Data[k+2]=='.') {
 8004154:	4b51      	ldr	r3, [pc, #324]	; (800429c <HAL_UART_RxCpltCallback+0x2c74>)
 8004156:	681b      	ldr	r3, [r3, #0]
 8004158:	3302      	adds	r3, #2
 800415a:	4a51      	ldr	r2, [pc, #324]	; (80042a0 <HAL_UART_RxCpltCallback+0x2c78>)
 800415c:	5cd3      	ldrb	r3, [r2, r3]
 800415e:	2b2e      	cmp	r3, #46	; 0x2e
 8004160:	d12a      	bne.n	80041b8 <HAL_UART_RxCpltCallback+0x2b90>
              	 	        				       uRx_Data1[uLength1]='R';
 8004162:	4b50      	ldr	r3, [pc, #320]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 8004164:	781b      	ldrb	r3, [r3, #0]
 8004166:	461a      	mov	r2, r3
 8004168:	4b4f      	ldr	r3, [pc, #316]	; (80042a8 <HAL_UART_RxCpltCallback+0x2c80>)
 800416a:	2152      	movs	r1, #82	; 0x52
 800416c:	5499      	strb	r1, [r3, r2]
              	 	        				       uLength1++;uRx_Data2[h]='.';
 800416e:	4b4d      	ldr	r3, [pc, #308]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 8004170:	781b      	ldrb	r3, [r3, #0]
 8004172:	3301      	adds	r3, #1
 8004174:	b2da      	uxtb	r2, r3
 8004176:	4b4b      	ldr	r3, [pc, #300]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 8004178:	701a      	strb	r2, [r3, #0]
 800417a:	4b4c      	ldr	r3, [pc, #304]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 800417c:	681b      	ldr	r3, [r3, #0]
 800417e:	4a4c      	ldr	r2, [pc, #304]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 8004180:	212e      	movs	r1, #46	; 0x2e
 8004182:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+1]='-';
 8004184:	4b49      	ldr	r3, [pc, #292]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 8004186:	681b      	ldr	r3, [r3, #0]
 8004188:	3301      	adds	r3, #1
 800418a:	4a49      	ldr	r2, [pc, #292]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 800418c:	212d      	movs	r1, #45	; 0x2d
 800418e:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+2]='.';
 8004190:	4b46      	ldr	r3, [pc, #280]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 8004192:	681b      	ldr	r3, [r3, #0]
 8004194:	3302      	adds	r3, #2
 8004196:	4a46      	ldr	r2, [pc, #280]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 8004198:	212e      	movs	r1, #46	; 0x2e
 800419a:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+3]='/';
 800419c:	4b43      	ldr	r3, [pc, #268]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 800419e:	681b      	ldr	r3, [r3, #0]
 80041a0:	3303      	adds	r3, #3
 80041a2:	4a43      	ldr	r2, [pc, #268]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 80041a4:	212f      	movs	r1, #47	; 0x2f
 80041a6:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	//k=k+4;
                            	 	        	        uLength2+=4;
 80041a8:	4b42      	ldr	r3, [pc, #264]	; (80042b4 <HAL_UART_RxCpltCallback+0x2c8c>)
 80041aa:	781b      	ldrb	r3, [r3, #0]
 80041ac:	3304      	adds	r3, #4
 80041ae:	b2da      	uxtb	r2, r3
 80041b0:	4b40      	ldr	r3, [pc, #256]	; (80042b4 <HAL_UART_RxCpltCallback+0x2c8c>)
 80041b2:	701a      	strb	r2, [r3, #0]
 80041b4:	f000 bc58 	b.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
              	 	        				   }
              	 	        				 else if (uRx_Data[k+2]=='-') {
 80041b8:	4b38      	ldr	r3, [pc, #224]	; (800429c <HAL_UART_RxCpltCallback+0x2c74>)
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	3302      	adds	r3, #2
 80041be:	4a38      	ldr	r2, [pc, #224]	; (80042a0 <HAL_UART_RxCpltCallback+0x2c78>)
 80041c0:	5cd3      	ldrb	r3, [r2, r3]
 80041c2:	2b2d      	cmp	r3, #45	; 0x2d
 80041c4:	f040 8450 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
              	 	        				       uRx_Data1[uLength1]='W';
 80041c8:	4b36      	ldr	r3, [pc, #216]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 80041ca:	781b      	ldrb	r3, [r3, #0]
 80041cc:	461a      	mov	r2, r3
 80041ce:	4b36      	ldr	r3, [pc, #216]	; (80042a8 <HAL_UART_RxCpltCallback+0x2c80>)
 80041d0:	2157      	movs	r1, #87	; 0x57
 80041d2:	5499      	strb	r1, [r3, r2]
              	 	        				       uLength1++;uRx_Data2[h]='.';
 80041d4:	4b33      	ldr	r3, [pc, #204]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 80041d6:	781b      	ldrb	r3, [r3, #0]
 80041d8:	3301      	adds	r3, #1
 80041da:	b2da      	uxtb	r2, r3
 80041dc:	4b31      	ldr	r3, [pc, #196]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 80041de:	701a      	strb	r2, [r3, #0]
 80041e0:	4b32      	ldr	r3, [pc, #200]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	4a32      	ldr	r2, [pc, #200]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 80041e6:	212e      	movs	r1, #46	; 0x2e
 80041e8:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+1]='-';
 80041ea:	4b30      	ldr	r3, [pc, #192]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	3301      	adds	r3, #1
 80041f0:	4a2f      	ldr	r2, [pc, #188]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 80041f2:	212d      	movs	r1, #45	; 0x2d
 80041f4:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+2]='-';
 80041f6:	4b2d      	ldr	r3, [pc, #180]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	3302      	adds	r3, #2
 80041fc:	4a2c      	ldr	r2, [pc, #176]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 80041fe:	212d      	movs	r1, #45	; 0x2d
 8004200:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+3]='/';
 8004202:	4b2a      	ldr	r3, [pc, #168]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	3303      	adds	r3, #3
 8004208:	4a29      	ldr	r2, [pc, #164]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 800420a:	212f      	movs	r1, #47	; 0x2f
 800420c:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	//k=k+4;
                            	 	        	        uLength2+=4;
 800420e:	4b29      	ldr	r3, [pc, #164]	; (80042b4 <HAL_UART_RxCpltCallback+0x2c8c>)
 8004210:	781b      	ldrb	r3, [r3, #0]
 8004212:	3304      	adds	r3, #4
 8004214:	b2da      	uxtb	r2, r3
 8004216:	4b27      	ldr	r3, [pc, #156]	; (80042b4 <HAL_UART_RxCpltCallback+0x2c8c>)
 8004218:	701a      	strb	r2, [r3, #0]
 800421a:	f000 bc25 	b.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
              	 	        				   }

                	 	        				   }

                	 	        			  }
                	 	        			 else if (uRx_Data[k]=='-') {
 800421e:	4b1f      	ldr	r3, [pc, #124]	; (800429c <HAL_UART_RxCpltCallback+0x2c74>)
 8004220:	681b      	ldr	r3, [r3, #0]
 8004222:	4a1f      	ldr	r2, [pc, #124]	; (80042a0 <HAL_UART_RxCpltCallback+0x2c78>)
 8004224:	5cd3      	ldrb	r3, [r2, r3]
 8004226:	2b2d      	cmp	r3, #45	; 0x2d
 8004228:	f040 841e 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                	 	        				  if (uRx_Data[k+1]=='.') {
 800422c:	4b1b      	ldr	r3, [pc, #108]	; (800429c <HAL_UART_RxCpltCallback+0x2c74>)
 800422e:	681b      	ldr	r3, [r3, #0]
 8004230:	3301      	adds	r3, #1
 8004232:	4a1b      	ldr	r2, [pc, #108]	; (80042a0 <HAL_UART_RxCpltCallback+0x2c78>)
 8004234:	5cd3      	ldrb	r3, [r2, r3]
 8004236:	2b2e      	cmp	r3, #46	; 0x2e
 8004238:	d170      	bne.n	800431c <HAL_UART_RxCpltCallback+0x2cf4>
                	 	        					  if (uRx_Data[k+2]=='.') {
 800423a:	4b18      	ldr	r3, [pc, #96]	; (800429c <HAL_UART_RxCpltCallback+0x2c74>)
 800423c:	681b      	ldr	r3, [r3, #0]
 800423e:	3302      	adds	r3, #2
 8004240:	4a17      	ldr	r2, [pc, #92]	; (80042a0 <HAL_UART_RxCpltCallback+0x2c78>)
 8004242:	5cd3      	ldrb	r3, [r2, r3]
 8004244:	2b2e      	cmp	r3, #46	; 0x2e
 8004246:	d137      	bne.n	80042b8 <HAL_UART_RxCpltCallback+0x2c90>
                  	 	        				       uRx_Data1[uLength1]='D';
 8004248:	4b16      	ldr	r3, [pc, #88]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 800424a:	781b      	ldrb	r3, [r3, #0]
 800424c:	461a      	mov	r2, r3
 800424e:	4b16      	ldr	r3, [pc, #88]	; (80042a8 <HAL_UART_RxCpltCallback+0x2c80>)
 8004250:	2144      	movs	r1, #68	; 0x44
 8004252:	5499      	strb	r1, [r3, r2]
                  	 	        				       uLength1++;uRx_Data2[h]='-';
 8004254:	4b13      	ldr	r3, [pc, #76]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 8004256:	781b      	ldrb	r3, [r3, #0]
 8004258:	3301      	adds	r3, #1
 800425a:	b2da      	uxtb	r2, r3
 800425c:	4b11      	ldr	r3, [pc, #68]	; (80042a4 <HAL_UART_RxCpltCallback+0x2c7c>)
 800425e:	701a      	strb	r2, [r3, #0]
 8004260:	4b12      	ldr	r3, [pc, #72]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 8004262:	681b      	ldr	r3, [r3, #0]
 8004264:	4a12      	ldr	r2, [pc, #72]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 8004266:	212d      	movs	r1, #45	; 0x2d
 8004268:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+1]='.';
 800426a:	4b10      	ldr	r3, [pc, #64]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 800426c:	681b      	ldr	r3, [r3, #0]
 800426e:	3301      	adds	r3, #1
 8004270:	4a0f      	ldr	r2, [pc, #60]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 8004272:	212e      	movs	r1, #46	; 0x2e
 8004274:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+2]='.';
 8004276:	4b0d      	ldr	r3, [pc, #52]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	3302      	adds	r3, #2
 800427c:	4a0c      	ldr	r2, [pc, #48]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 800427e:	212e      	movs	r1, #46	; 0x2e
 8004280:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+3]='/';
 8004282:	4b0a      	ldr	r3, [pc, #40]	; (80042ac <HAL_UART_RxCpltCallback+0x2c84>)
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	3303      	adds	r3, #3
 8004288:	4a09      	ldr	r2, [pc, #36]	; (80042b0 <HAL_UART_RxCpltCallback+0x2c88>)
 800428a:	212f      	movs	r1, #47	; 0x2f
 800428c:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+4;
                                	 	        	        uLength2+=4;
 800428e:	4b09      	ldr	r3, [pc, #36]	; (80042b4 <HAL_UART_RxCpltCallback+0x2c8c>)
 8004290:	781b      	ldrb	r3, [r3, #0]
 8004292:	3304      	adds	r3, #4
 8004294:	b2da      	uxtb	r2, r3
 8004296:	4b07      	ldr	r3, [pc, #28]	; (80042b4 <HAL_UART_RxCpltCallback+0x2c8c>)
 8004298:	701a      	strb	r2, [r3, #0]
 800429a:	e3e5      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
 800429c:	20001434 	.word	0x20001434
 80042a0:	2000042c 	.word	0x2000042c
 80042a4:	2000142d 	.word	0x2000142d
 80042a8:	2000082c 	.word	0x2000082c
 80042ac:	20001438 	.word	0x20001438
 80042b0:	20000c2c 	.word	0x20000c2c
 80042b4:	2000142e 	.word	0x2000142e
                  	 	        				   }
                  	 	        				 else if (uRx_Data[k+2]=='-') {
 80042b8:	4b94      	ldr	r3, [pc, #592]	; (800450c <HAL_UART_RxCpltCallback+0x2ee4>)
 80042ba:	681b      	ldr	r3, [r3, #0]
 80042bc:	3302      	adds	r3, #2
 80042be:	4a94      	ldr	r2, [pc, #592]	; (8004510 <HAL_UART_RxCpltCallback+0x2ee8>)
 80042c0:	5cd3      	ldrb	r3, [r2, r3]
 80042c2:	2b2d      	cmp	r3, #45	; 0x2d
 80042c4:	f040 83d0 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                  	 	        				       uRx_Data1[uLength1]='K';
 80042c8:	4b92      	ldr	r3, [pc, #584]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 80042ca:	781b      	ldrb	r3, [r3, #0]
 80042cc:	461a      	mov	r2, r3
 80042ce:	4b92      	ldr	r3, [pc, #584]	; (8004518 <HAL_UART_RxCpltCallback+0x2ef0>)
 80042d0:	214b      	movs	r1, #75	; 0x4b
 80042d2:	5499      	strb	r1, [r3, r2]
                  	 	        				       uLength1++;uRx_Data2[h]='-';
 80042d4:	4b8f      	ldr	r3, [pc, #572]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 80042d6:	781b      	ldrb	r3, [r3, #0]
 80042d8:	3301      	adds	r3, #1
 80042da:	b2da      	uxtb	r2, r3
 80042dc:	4b8d      	ldr	r3, [pc, #564]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 80042de:	701a      	strb	r2, [r3, #0]
 80042e0:	4b8e      	ldr	r3, [pc, #568]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 80042e2:	681b      	ldr	r3, [r3, #0]
 80042e4:	4a8e      	ldr	r2, [pc, #568]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 80042e6:	212d      	movs	r1, #45	; 0x2d
 80042e8:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+1]='.';
 80042ea:	4b8c      	ldr	r3, [pc, #560]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 80042ec:	681b      	ldr	r3, [r3, #0]
 80042ee:	3301      	adds	r3, #1
 80042f0:	4a8b      	ldr	r2, [pc, #556]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 80042f2:	212e      	movs	r1, #46	; 0x2e
 80042f4:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+2]='-';
 80042f6:	4b89      	ldr	r3, [pc, #548]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 80042f8:	681b      	ldr	r3, [r3, #0]
 80042fa:	3302      	adds	r3, #2
 80042fc:	4a88      	ldr	r2, [pc, #544]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 80042fe:	212d      	movs	r1, #45	; 0x2d
 8004300:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+3]='/';
 8004302:	4b86      	ldr	r3, [pc, #536]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 8004304:	681b      	ldr	r3, [r3, #0]
 8004306:	3303      	adds	r3, #3
 8004308:	4a85      	ldr	r2, [pc, #532]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 800430a:	212f      	movs	r1, #47	; 0x2f
 800430c:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+4;
                                	 	        	        uLength2+=4;
 800430e:	4b85      	ldr	r3, [pc, #532]	; (8004524 <HAL_UART_RxCpltCallback+0x2efc>)
 8004310:	781b      	ldrb	r3, [r3, #0]
 8004312:	3304      	adds	r3, #4
 8004314:	b2da      	uxtb	r2, r3
 8004316:	4b83      	ldr	r3, [pc, #524]	; (8004524 <HAL_UART_RxCpltCallback+0x2efc>)
 8004318:	701a      	strb	r2, [r3, #0]
 800431a:	e3a5      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                  	 	        				   }

                	 	        				  }
                	 	        				  else if (uRx_Data[k+1]=='-') {
 800431c:	4b7b      	ldr	r3, [pc, #492]	; (800450c <HAL_UART_RxCpltCallback+0x2ee4>)
 800431e:	681b      	ldr	r3, [r3, #0]
 8004320:	3301      	adds	r3, #1
 8004322:	4a7b      	ldr	r2, [pc, #492]	; (8004510 <HAL_UART_RxCpltCallback+0x2ee8>)
 8004324:	5cd3      	ldrb	r3, [r2, r3]
 8004326:	2b2d      	cmp	r3, #45	; 0x2d
 8004328:	f040 839e 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                	 	        					  if (uRx_Data[k+2]=='.') {
 800432c:	4b77      	ldr	r3, [pc, #476]	; (800450c <HAL_UART_RxCpltCallback+0x2ee4>)
 800432e:	681b      	ldr	r3, [r3, #0]
 8004330:	3302      	adds	r3, #2
 8004332:	4a77      	ldr	r2, [pc, #476]	; (8004510 <HAL_UART_RxCpltCallback+0x2ee8>)
 8004334:	5cd3      	ldrb	r3, [r2, r3]
 8004336:	2b2e      	cmp	r3, #46	; 0x2e
 8004338:	d129      	bne.n	800438e <HAL_UART_RxCpltCallback+0x2d66>
                  	 	        				       uRx_Data1[uLength1]='G';
 800433a:	4b76      	ldr	r3, [pc, #472]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 800433c:	781b      	ldrb	r3, [r3, #0]
 800433e:	461a      	mov	r2, r3
 8004340:	4b75      	ldr	r3, [pc, #468]	; (8004518 <HAL_UART_RxCpltCallback+0x2ef0>)
 8004342:	2147      	movs	r1, #71	; 0x47
 8004344:	5499      	strb	r1, [r3, r2]
                  	 	        				       uLength1++;uRx_Data2[h]='-';
 8004346:	4b73      	ldr	r3, [pc, #460]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 8004348:	781b      	ldrb	r3, [r3, #0]
 800434a:	3301      	adds	r3, #1
 800434c:	b2da      	uxtb	r2, r3
 800434e:	4b71      	ldr	r3, [pc, #452]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 8004350:	701a      	strb	r2, [r3, #0]
 8004352:	4b72      	ldr	r3, [pc, #456]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 8004354:	681b      	ldr	r3, [r3, #0]
 8004356:	4a72      	ldr	r2, [pc, #456]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 8004358:	212d      	movs	r1, #45	; 0x2d
 800435a:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+1]='-';
 800435c:	4b6f      	ldr	r3, [pc, #444]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 800435e:	681b      	ldr	r3, [r3, #0]
 8004360:	3301      	adds	r3, #1
 8004362:	4a6f      	ldr	r2, [pc, #444]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 8004364:	212d      	movs	r1, #45	; 0x2d
 8004366:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+2]='.';
 8004368:	4b6c      	ldr	r3, [pc, #432]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 800436a:	681b      	ldr	r3, [r3, #0]
 800436c:	3302      	adds	r3, #2
 800436e:	4a6c      	ldr	r2, [pc, #432]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 8004370:	212e      	movs	r1, #46	; 0x2e
 8004372:	54d1      	strb	r1, [r2, r3]
                             	 	        	    	uRx_Data2[h+3]='/';
 8004374:	4b69      	ldr	r3, [pc, #420]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 8004376:	681b      	ldr	r3, [r3, #0]
 8004378:	3303      	adds	r3, #3
 800437a:	4a69      	ldr	r2, [pc, #420]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 800437c:	212f      	movs	r1, #47	; 0x2f
 800437e:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+4;
                                	 	        	        uLength2+=4;
 8004380:	4b68      	ldr	r3, [pc, #416]	; (8004524 <HAL_UART_RxCpltCallback+0x2efc>)
 8004382:	781b      	ldrb	r3, [r3, #0]
 8004384:	3304      	adds	r3, #4
 8004386:	b2da      	uxtb	r2, r3
 8004388:	4b66      	ldr	r3, [pc, #408]	; (8004524 <HAL_UART_RxCpltCallback+0x2efc>)
 800438a:	701a      	strb	r2, [r3, #0]
 800438c:	e36c      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                  	 	        				   }
                  	 	        				 else if (uRx_Data[k+2]=='-') {
 800438e:	4b5f      	ldr	r3, [pc, #380]	; (800450c <HAL_UART_RxCpltCallback+0x2ee4>)
 8004390:	681b      	ldr	r3, [r3, #0]
 8004392:	3302      	adds	r3, #2
 8004394:	4a5e      	ldr	r2, [pc, #376]	; (8004510 <HAL_UART_RxCpltCallback+0x2ee8>)
 8004396:	5cd3      	ldrb	r3, [r2, r3]
 8004398:	2b2d      	cmp	r3, #45	; 0x2d
 800439a:	f040 8365 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                  	 	        				       uRx_Data1[uLength1]='O';
 800439e:	4b5d      	ldr	r3, [pc, #372]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 80043a0:	781b      	ldrb	r3, [r3, #0]
 80043a2:	461a      	mov	r2, r3
 80043a4:	4b5c      	ldr	r3, [pc, #368]	; (8004518 <HAL_UART_RxCpltCallback+0x2ef0>)
 80043a6:	214f      	movs	r1, #79	; 0x4f
 80043a8:	5499      	strb	r1, [r3, r2]
                  	 	        				       uLength1++; uRx_Data2[h]='-';
 80043aa:	4b5a      	ldr	r3, [pc, #360]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 80043ac:	781b      	ldrb	r3, [r3, #0]
 80043ae:	3301      	adds	r3, #1
 80043b0:	b2da      	uxtb	r2, r3
 80043b2:	4b58      	ldr	r3, [pc, #352]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 80043b4:	701a      	strb	r2, [r3, #0]
 80043b6:	4b59      	ldr	r3, [pc, #356]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 80043b8:	681b      	ldr	r3, [r3, #0]
 80043ba:	4a59      	ldr	r2, [pc, #356]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 80043bc:	212d      	movs	r1, #45	; 0x2d
 80043be:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+1]='-';
 80043c0:	4b56      	ldr	r3, [pc, #344]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 80043c2:	681b      	ldr	r3, [r3, #0]
 80043c4:	3301      	adds	r3, #1
 80043c6:	4a56      	ldr	r2, [pc, #344]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 80043c8:	212d      	movs	r1, #45	; 0x2d
 80043ca:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+2]='-';
 80043cc:	4b53      	ldr	r3, [pc, #332]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 80043ce:	681b      	ldr	r3, [r3, #0]
 80043d0:	3302      	adds	r3, #2
 80043d2:	4a53      	ldr	r2, [pc, #332]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 80043d4:	212d      	movs	r1, #45	; 0x2d
 80043d6:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+3]='/';
 80043d8:	4b50      	ldr	r3, [pc, #320]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 80043da:	681b      	ldr	r3, [r3, #0]
 80043dc:	3303      	adds	r3, #3
 80043de:	4a50      	ldr	r2, [pc, #320]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 80043e0:	212f      	movs	r1, #47	; 0x2f
 80043e2:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+4;
                                	 	        	        uLength2+=4;
 80043e4:	4b4f      	ldr	r3, [pc, #316]	; (8004524 <HAL_UART_RxCpltCallback+0x2efc>)
 80043e6:	781b      	ldrb	r3, [r3, #0]
 80043e8:	3304      	adds	r3, #4
 80043ea:	b2da      	uxtb	r2, r3
 80043ec:	4b4d      	ldr	r3, [pc, #308]	; (8004524 <HAL_UART_RxCpltCallback+0x2efc>)
 80043ee:	701a      	strb	r2, [r3, #0]
 80043f0:	e33a      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                	 	        				  }

                	 	        			}


                    	 	        		  }else if (i-k==4){
 80043f2:	4b46      	ldr	r3, [pc, #280]	; (800450c <HAL_UART_RxCpltCallback+0x2ee4>)
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80043f8:	1ad3      	subs	r3, r2, r3
 80043fa:	2b04      	cmp	r3, #4
 80043fc:	f040 8334 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>

                    	 	        		if (uRx_Data[k]=='.') {
 8004400:	4b42      	ldr	r3, [pc, #264]	; (800450c <HAL_UART_RxCpltCallback+0x2ee4>)
 8004402:	681b      	ldr	r3, [r3, #0]
 8004404:	4a42      	ldr	r2, [pc, #264]	; (8004510 <HAL_UART_RxCpltCallback+0x2ee8>)
 8004406:	5cd3      	ldrb	r3, [r2, r3]
 8004408:	2b2e      	cmp	r3, #46	; 0x2e
 800440a:	f040 8199 	bne.w	8004740 <HAL_UART_RxCpltCallback+0x3118>
                	 	        				  if (uRx_Data[k+1]=='.') {
 800440e:	4b3f      	ldr	r3, [pc, #252]	; (800450c <HAL_UART_RxCpltCallback+0x2ee4>)
 8004410:	681b      	ldr	r3, [r3, #0]
 8004412:	3301      	adds	r3, #1
 8004414:	4a3e      	ldr	r2, [pc, #248]	; (8004510 <HAL_UART_RxCpltCallback+0x2ee8>)
 8004416:	5cd3      	ldrb	r3, [r2, r3]
 8004418:	2b2e      	cmp	r3, #46	; 0x2e
 800441a:	f040 80c5 	bne.w	80045a8 <HAL_UART_RxCpltCallback+0x2f80>
                	 	        					  if (uRx_Data[k+2]=='.') {
 800441e:	4b3b      	ldr	r3, [pc, #236]	; (800450c <HAL_UART_RxCpltCallback+0x2ee4>)
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	3302      	adds	r3, #2
 8004424:	4a3a      	ldr	r2, [pc, #232]	; (8004510 <HAL_UART_RxCpltCallback+0x2ee8>)
 8004426:	5cd3      	ldrb	r3, [r2, r3]
 8004428:	2b2e      	cmp	r3, #46	; 0x2e
 800442a:	d17d      	bne.n	8004528 <HAL_UART_RxCpltCallback+0x2f00>
                	 	        						  if (uRx_Data[k+3]=='.') {
 800442c:	4b37      	ldr	r3, [pc, #220]	; (800450c <HAL_UART_RxCpltCallback+0x2ee4>)
 800442e:	681b      	ldr	r3, [r3, #0]
 8004430:	3303      	adds	r3, #3
 8004432:	4a37      	ldr	r2, [pc, #220]	; (8004510 <HAL_UART_RxCpltCallback+0x2ee8>)
 8004434:	5cd3      	ldrb	r3, [r2, r3]
 8004436:	2b2e      	cmp	r3, #46	; 0x2e
 8004438:	d12f      	bne.n	800449a <HAL_UART_RxCpltCallback+0x2e72>
                      	 	        				       uRx_Data1[uLength1]='H';
 800443a:	4b36      	ldr	r3, [pc, #216]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 800443c:	781b      	ldrb	r3, [r3, #0]
 800443e:	461a      	mov	r2, r3
 8004440:	4b35      	ldr	r3, [pc, #212]	; (8004518 <HAL_UART_RxCpltCallback+0x2ef0>)
 8004442:	2148      	movs	r1, #72	; 0x48
 8004444:	5499      	strb	r1, [r3, r2]
                      	 	        				       uLength1++;uRx_Data2[h]='.';
 8004446:	4b33      	ldr	r3, [pc, #204]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 8004448:	781b      	ldrb	r3, [r3, #0]
 800444a:	3301      	adds	r3, #1
 800444c:	b2da      	uxtb	r2, r3
 800444e:	4b31      	ldr	r3, [pc, #196]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 8004450:	701a      	strb	r2, [r3, #0]
 8004452:	4b32      	ldr	r3, [pc, #200]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	4a32      	ldr	r2, [pc, #200]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 8004458:	212e      	movs	r1, #46	; 0x2e
 800445a:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+1]='.';
 800445c:	4b2f      	ldr	r3, [pc, #188]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 800445e:	681b      	ldr	r3, [r3, #0]
 8004460:	3301      	adds	r3, #1
 8004462:	4a2f      	ldr	r2, [pc, #188]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 8004464:	212e      	movs	r1, #46	; 0x2e
 8004466:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+2]='.';
 8004468:	4b2c      	ldr	r3, [pc, #176]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 800446a:	681b      	ldr	r3, [r3, #0]
 800446c:	3302      	adds	r3, #2
 800446e:	4a2c      	ldr	r2, [pc, #176]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 8004470:	212e      	movs	r1, #46	; 0x2e
 8004472:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+3]='.';
 8004474:	4b29      	ldr	r3, [pc, #164]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 8004476:	681b      	ldr	r3, [r3, #0]
 8004478:	3303      	adds	r3, #3
 800447a:	4a29      	ldr	r2, [pc, #164]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 800447c:	212e      	movs	r1, #46	; 0x2e
 800447e:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+4]='/';
 8004480:	4b26      	ldr	r3, [pc, #152]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	3304      	adds	r3, #4
 8004486:	4a26      	ldr	r2, [pc, #152]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 8004488:	212f      	movs	r1, #47	; 0x2f
 800448a:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+5;
                                    	 	        	        uLength2+=5;
 800448c:	4b25      	ldr	r3, [pc, #148]	; (8004524 <HAL_UART_RxCpltCallback+0x2efc>)
 800448e:	781b      	ldrb	r3, [r3, #0]
 8004490:	3305      	adds	r3, #5
 8004492:	b2da      	uxtb	r2, r3
 8004494:	4b23      	ldr	r3, [pc, #140]	; (8004524 <HAL_UART_RxCpltCallback+0x2efc>)
 8004496:	701a      	strb	r2, [r3, #0]
 8004498:	e2e6      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                      	 	        				   }
                      	 	        				 else if (uRx_Data[k+3]=='-') {
 800449a:	4b1c      	ldr	r3, [pc, #112]	; (800450c <HAL_UART_RxCpltCallback+0x2ee4>)
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	3303      	adds	r3, #3
 80044a0:	4a1b      	ldr	r2, [pc, #108]	; (8004510 <HAL_UART_RxCpltCallback+0x2ee8>)
 80044a2:	5cd3      	ldrb	r3, [r2, r3]
 80044a4:	2b2d      	cmp	r3, #45	; 0x2d
 80044a6:	f040 82df 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                      	 	        				       uRx_Data1[uLength1]='V';
 80044aa:	4b1a      	ldr	r3, [pc, #104]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 80044ac:	781b      	ldrb	r3, [r3, #0]
 80044ae:	461a      	mov	r2, r3
 80044b0:	4b19      	ldr	r3, [pc, #100]	; (8004518 <HAL_UART_RxCpltCallback+0x2ef0>)
 80044b2:	2156      	movs	r1, #86	; 0x56
 80044b4:	5499      	strb	r1, [r3, r2]
                      	 	        				       uLength1++;uRx_Data2[h]='.';
 80044b6:	4b17      	ldr	r3, [pc, #92]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 80044b8:	781b      	ldrb	r3, [r3, #0]
 80044ba:	3301      	adds	r3, #1
 80044bc:	b2da      	uxtb	r2, r3
 80044be:	4b15      	ldr	r3, [pc, #84]	; (8004514 <HAL_UART_RxCpltCallback+0x2eec>)
 80044c0:	701a      	strb	r2, [r3, #0]
 80044c2:	4b16      	ldr	r3, [pc, #88]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 80044c4:	681b      	ldr	r3, [r3, #0]
 80044c6:	4a16      	ldr	r2, [pc, #88]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 80044c8:	212e      	movs	r1, #46	; 0x2e
 80044ca:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+1]='.';
 80044cc:	4b13      	ldr	r3, [pc, #76]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 80044ce:	681b      	ldr	r3, [r3, #0]
 80044d0:	3301      	adds	r3, #1
 80044d2:	4a13      	ldr	r2, [pc, #76]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 80044d4:	212e      	movs	r1, #46	; 0x2e
 80044d6:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+2]='.';
 80044d8:	4b10      	ldr	r3, [pc, #64]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	3302      	adds	r3, #2
 80044de:	4a10      	ldr	r2, [pc, #64]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 80044e0:	212e      	movs	r1, #46	; 0x2e
 80044e2:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+3]='-';
 80044e4:	4b0d      	ldr	r3, [pc, #52]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	3303      	adds	r3, #3
 80044ea:	4a0d      	ldr	r2, [pc, #52]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 80044ec:	212d      	movs	r1, #45	; 0x2d
 80044ee:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+4]='/';
 80044f0:	4b0a      	ldr	r3, [pc, #40]	; (800451c <HAL_UART_RxCpltCallback+0x2ef4>)
 80044f2:	681b      	ldr	r3, [r3, #0]
 80044f4:	3304      	adds	r3, #4
 80044f6:	4a0a      	ldr	r2, [pc, #40]	; (8004520 <HAL_UART_RxCpltCallback+0x2ef8>)
 80044f8:	212f      	movs	r1, #47	; 0x2f
 80044fa:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+5;
                                    	 	        	        uLength2+=5;
 80044fc:	4b09      	ldr	r3, [pc, #36]	; (8004524 <HAL_UART_RxCpltCallback+0x2efc>)
 80044fe:	781b      	ldrb	r3, [r3, #0]
 8004500:	3305      	adds	r3, #5
 8004502:	b2da      	uxtb	r2, r3
 8004504:	4b07      	ldr	r3, [pc, #28]	; (8004524 <HAL_UART_RxCpltCallback+0x2efc>)
 8004506:	701a      	strb	r2, [r3, #0]
 8004508:	e2ae      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
 800450a:	bf00      	nop
 800450c:	20001434 	.word	0x20001434
 8004510:	2000042c 	.word	0x2000042c
 8004514:	2000142d 	.word	0x2000142d
 8004518:	2000082c 	.word	0x2000082c
 800451c:	20001438 	.word	0x20001438
 8004520:	20000c2c 	.word	0x20000c2c
 8004524:	2000142e 	.word	0x2000142e
                      	 	        				   }

               	 	        				   }
               	 	        				 else if (uRx_Data[k+2]=='-') {
 8004528:	4b7e      	ldr	r3, [pc, #504]	; (8004724 <HAL_UART_RxCpltCallback+0x30fc>)
 800452a:	681b      	ldr	r3, [r3, #0]
 800452c:	3302      	adds	r3, #2
 800452e:	4a7e      	ldr	r2, [pc, #504]	; (8004728 <HAL_UART_RxCpltCallback+0x3100>)
 8004530:	5cd3      	ldrb	r3, [r2, r3]
 8004532:	2b2d      	cmp	r3, #45	; 0x2d
 8004534:	f040 8298 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
               	 	        					 if (uRx_Data[k+3]=='.') {
 8004538:	4b7a      	ldr	r3, [pc, #488]	; (8004724 <HAL_UART_RxCpltCallback+0x30fc>)
 800453a:	681b      	ldr	r3, [r3, #0]
 800453c:	3303      	adds	r3, #3
 800453e:	4a7a      	ldr	r2, [pc, #488]	; (8004728 <HAL_UART_RxCpltCallback+0x3100>)
 8004540:	5cd3      	ldrb	r3, [r2, r3]
 8004542:	2b2e      	cmp	r3, #46	; 0x2e
 8004544:	f040 8290 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
            	 	        				       uRx_Data1[uLength1]='F';
 8004548:	4b78      	ldr	r3, [pc, #480]	; (800472c <HAL_UART_RxCpltCallback+0x3104>)
 800454a:	781b      	ldrb	r3, [r3, #0]
 800454c:	461a      	mov	r2, r3
 800454e:	4b78      	ldr	r3, [pc, #480]	; (8004730 <HAL_UART_RxCpltCallback+0x3108>)
 8004550:	2146      	movs	r1, #70	; 0x46
 8004552:	5499      	strb	r1, [r3, r2]
            	 	        				       uLength1++;uRx_Data2[h]='.';
 8004554:	4b75      	ldr	r3, [pc, #468]	; (800472c <HAL_UART_RxCpltCallback+0x3104>)
 8004556:	781b      	ldrb	r3, [r3, #0]
 8004558:	3301      	adds	r3, #1
 800455a:	b2da      	uxtb	r2, r3
 800455c:	4b73      	ldr	r3, [pc, #460]	; (800472c <HAL_UART_RxCpltCallback+0x3104>)
 800455e:	701a      	strb	r2, [r3, #0]
 8004560:	4b74      	ldr	r3, [pc, #464]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	4a74      	ldr	r2, [pc, #464]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 8004566:	212e      	movs	r1, #46	; 0x2e
 8004568:	54d1      	strb	r1, [r2, r3]
                         	 	        	    	uRx_Data2[h+1]='.';
 800456a:	4b72      	ldr	r3, [pc, #456]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 800456c:	681b      	ldr	r3, [r3, #0]
 800456e:	3301      	adds	r3, #1
 8004570:	4a71      	ldr	r2, [pc, #452]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 8004572:	212e      	movs	r1, #46	; 0x2e
 8004574:	54d1      	strb	r1, [r2, r3]
                         	 	        	    	uRx_Data2[h+2]='-';
 8004576:	4b6f      	ldr	r3, [pc, #444]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 8004578:	681b      	ldr	r3, [r3, #0]
 800457a:	3302      	adds	r3, #2
 800457c:	4a6e      	ldr	r2, [pc, #440]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 800457e:	212d      	movs	r1, #45	; 0x2d
 8004580:	54d1      	strb	r1, [r2, r3]
                         	 	        	    	uRx_Data2[h+3]='.';
 8004582:	4b6c      	ldr	r3, [pc, #432]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 8004584:	681b      	ldr	r3, [r3, #0]
 8004586:	3303      	adds	r3, #3
 8004588:	4a6b      	ldr	r2, [pc, #428]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 800458a:	212e      	movs	r1, #46	; 0x2e
 800458c:	54d1      	strb	r1, [r2, r3]
                         	 	        	    	uRx_Data2[h+4]='/';
 800458e:	4b69      	ldr	r3, [pc, #420]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 8004590:	681b      	ldr	r3, [r3, #0]
 8004592:	3304      	adds	r3, #4
 8004594:	4a68      	ldr	r2, [pc, #416]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 8004596:	212f      	movs	r1, #47	; 0x2f
 8004598:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	//k=k+5;
                            	 	        	        uLength2+=5;
 800459a:	4b68      	ldr	r3, [pc, #416]	; (800473c <HAL_UART_RxCpltCallback+0x3114>)
 800459c:	781b      	ldrb	r3, [r3, #0]
 800459e:	3305      	adds	r3, #5
 80045a0:	b2da      	uxtb	r2, r3
 80045a2:	4b66      	ldr	r3, [pc, #408]	; (800473c <HAL_UART_RxCpltCallback+0x3114>)
 80045a4:	701a      	strb	r2, [r3, #0]
 80045a6:	e25f      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>

            	 	        				   }
               	 	        				   }

                	 	        				   }
                	 	        				 else if (uRx_Data[k+1]=='-') {
 80045a8:	4b5e      	ldr	r3, [pc, #376]	; (8004724 <HAL_UART_RxCpltCallback+0x30fc>)
 80045aa:	681b      	ldr	r3, [r3, #0]
 80045ac:	3301      	adds	r3, #1
 80045ae:	4a5e      	ldr	r2, [pc, #376]	; (8004728 <HAL_UART_RxCpltCallback+0x3100>)
 80045b0:	5cd3      	ldrb	r3, [r2, r3]
 80045b2:	2b2d      	cmp	r3, #45	; 0x2d
 80045b4:	f040 8258 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                	 	        					 if (uRx_Data[k+2]=='.') {
 80045b8:	4b5a      	ldr	r3, [pc, #360]	; (8004724 <HAL_UART_RxCpltCallback+0x30fc>)
 80045ba:	681b      	ldr	r3, [r3, #0]
 80045bc:	3302      	adds	r3, #2
 80045be:	4a5a      	ldr	r2, [pc, #360]	; (8004728 <HAL_UART_RxCpltCallback+0x3100>)
 80045c0:	5cd3      	ldrb	r3, [r2, r3]
 80045c2:	2b2e      	cmp	r3, #46	; 0x2e
 80045c4:	d137      	bne.n	8004636 <HAL_UART_RxCpltCallback+0x300e>
                	 	        						 if (uRx_Data[k+3]=='.') {
 80045c6:	4b57      	ldr	r3, [pc, #348]	; (8004724 <HAL_UART_RxCpltCallback+0x30fc>)
 80045c8:	681b      	ldr	r3, [r3, #0]
 80045ca:	3303      	adds	r3, #3
 80045cc:	4a56      	ldr	r2, [pc, #344]	; (8004728 <HAL_UART_RxCpltCallback+0x3100>)
 80045ce:	5cd3      	ldrb	r3, [r2, r3]
 80045d0:	2b2e      	cmp	r3, #46	; 0x2e
 80045d2:	f040 8249 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                    	 	        				       uRx_Data1[uLength1]='L';
 80045d6:	4b55      	ldr	r3, [pc, #340]	; (800472c <HAL_UART_RxCpltCallback+0x3104>)
 80045d8:	781b      	ldrb	r3, [r3, #0]
 80045da:	461a      	mov	r2, r3
 80045dc:	4b54      	ldr	r3, [pc, #336]	; (8004730 <HAL_UART_RxCpltCallback+0x3108>)
 80045de:	214c      	movs	r1, #76	; 0x4c
 80045e0:	5499      	strb	r1, [r3, r2]
                    	 	        				       uLength1++;uRx_Data2[h]='.';
 80045e2:	4b52      	ldr	r3, [pc, #328]	; (800472c <HAL_UART_RxCpltCallback+0x3104>)
 80045e4:	781b      	ldrb	r3, [r3, #0]
 80045e6:	3301      	adds	r3, #1
 80045e8:	b2da      	uxtb	r2, r3
 80045ea:	4b50      	ldr	r3, [pc, #320]	; (800472c <HAL_UART_RxCpltCallback+0x3104>)
 80045ec:	701a      	strb	r2, [r3, #0]
 80045ee:	4b51      	ldr	r3, [pc, #324]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 80045f0:	681b      	ldr	r3, [r3, #0]
 80045f2:	4a51      	ldr	r2, [pc, #324]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 80045f4:	212e      	movs	r1, #46	; 0x2e
 80045f6:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+1]='-';
 80045f8:	4b4e      	ldr	r3, [pc, #312]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	3301      	adds	r3, #1
 80045fe:	4a4e      	ldr	r2, [pc, #312]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 8004600:	212d      	movs	r1, #45	; 0x2d
 8004602:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+2]='.';
 8004604:	4b4b      	ldr	r3, [pc, #300]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 8004606:	681b      	ldr	r3, [r3, #0]
 8004608:	3302      	adds	r3, #2
 800460a:	4a4b      	ldr	r2, [pc, #300]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 800460c:	212e      	movs	r1, #46	; 0x2e
 800460e:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+3]='.';
 8004610:	4b48      	ldr	r3, [pc, #288]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 8004612:	681b      	ldr	r3, [r3, #0]
 8004614:	3303      	adds	r3, #3
 8004616:	4a48      	ldr	r2, [pc, #288]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 8004618:	212e      	movs	r1, #46	; 0x2e
 800461a:	54d1      	strb	r1, [r2, r3]
                                 	 	        	    	uRx_Data2[h+4]='/';
 800461c:	4b45      	ldr	r3, [pc, #276]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	3304      	adds	r3, #4
 8004622:	4a45      	ldr	r2, [pc, #276]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 8004624:	212f      	movs	r1, #47	; 0x2f
 8004626:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+5;
                                    	 	        	        uLength2+=5;
 8004628:	4b44      	ldr	r3, [pc, #272]	; (800473c <HAL_UART_RxCpltCallback+0x3114>)
 800462a:	781b      	ldrb	r3, [r3, #0]
 800462c:	3305      	adds	r3, #5
 800462e:	b2da      	uxtb	r2, r3
 8004630:	4b42      	ldr	r3, [pc, #264]	; (800473c <HAL_UART_RxCpltCallback+0x3114>)
 8004632:	701a      	strb	r2, [r3, #0]
 8004634:	e218      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                    	 	        				 else if (uRx_Data[k+3]=='-') {

                    	 	        				   }

              	 	        				   }
              	 	        				 else if (uRx_Data[k+2]=='-') {
 8004636:	4b3b      	ldr	r3, [pc, #236]	; (8004724 <HAL_UART_RxCpltCallback+0x30fc>)
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	3302      	adds	r3, #2
 800463c:	4a3a      	ldr	r2, [pc, #232]	; (8004728 <HAL_UART_RxCpltCallback+0x3100>)
 800463e:	5cd3      	ldrb	r3, [r2, r3]
 8004640:	2b2d      	cmp	r3, #45	; 0x2d
 8004642:	f040 8211 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
              	 	        					 if (uRx_Data[k+3]=='.') {
 8004646:	4b37      	ldr	r3, [pc, #220]	; (8004724 <HAL_UART_RxCpltCallback+0x30fc>)
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	3303      	adds	r3, #3
 800464c:	4a36      	ldr	r2, [pc, #216]	; (8004728 <HAL_UART_RxCpltCallback+0x3100>)
 800464e:	5cd3      	ldrb	r3, [r2, r3]
 8004650:	2b2e      	cmp	r3, #46	; 0x2e
 8004652:	d12f      	bne.n	80046b4 <HAL_UART_RxCpltCallback+0x308c>
            	 	        				       uRx_Data1[uLength1]='P';
 8004654:	4b35      	ldr	r3, [pc, #212]	; (800472c <HAL_UART_RxCpltCallback+0x3104>)
 8004656:	781b      	ldrb	r3, [r3, #0]
 8004658:	461a      	mov	r2, r3
 800465a:	4b35      	ldr	r3, [pc, #212]	; (8004730 <HAL_UART_RxCpltCallback+0x3108>)
 800465c:	2150      	movs	r1, #80	; 0x50
 800465e:	5499      	strb	r1, [r3, r2]
            	 	        				       uLength1++;uRx_Data2[h]='.';
 8004660:	4b32      	ldr	r3, [pc, #200]	; (800472c <HAL_UART_RxCpltCallback+0x3104>)
 8004662:	781b      	ldrb	r3, [r3, #0]
 8004664:	3301      	adds	r3, #1
 8004666:	b2da      	uxtb	r2, r3
 8004668:	4b30      	ldr	r3, [pc, #192]	; (800472c <HAL_UART_RxCpltCallback+0x3104>)
 800466a:	701a      	strb	r2, [r3, #0]
 800466c:	4b31      	ldr	r3, [pc, #196]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 800466e:	681b      	ldr	r3, [r3, #0]
 8004670:	4a31      	ldr	r2, [pc, #196]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 8004672:	212e      	movs	r1, #46	; 0x2e
 8004674:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+1]='-';
 8004676:	4b2f      	ldr	r3, [pc, #188]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	3301      	adds	r3, #1
 800467c:	4a2e      	ldr	r2, [pc, #184]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 800467e:	212d      	movs	r1, #45	; 0x2d
 8004680:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+2]='-';
 8004682:	4b2c      	ldr	r3, [pc, #176]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 8004684:	681b      	ldr	r3, [r3, #0]
 8004686:	3302      	adds	r3, #2
 8004688:	4a2b      	ldr	r2, [pc, #172]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 800468a:	212d      	movs	r1, #45	; 0x2d
 800468c:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+3]='.';
 800468e:	4b29      	ldr	r3, [pc, #164]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 8004690:	681b      	ldr	r3, [r3, #0]
 8004692:	3303      	adds	r3, #3
 8004694:	4a28      	ldr	r2, [pc, #160]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 8004696:	212e      	movs	r1, #46	; 0x2e
 8004698:	54d1      	strb	r1, [r2, r3]
                          	 	        	    	uRx_Data2[h+4]='/';
 800469a:	4b26      	ldr	r3, [pc, #152]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	3304      	adds	r3, #4
 80046a0:	4a25      	ldr	r2, [pc, #148]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 80046a2:	212f      	movs	r1, #47	; 0x2f
 80046a4:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	//k=k+5;
                            	 	        	        uLength2+=5;
 80046a6:	4b25      	ldr	r3, [pc, #148]	; (800473c <HAL_UART_RxCpltCallback+0x3114>)
 80046a8:	781b      	ldrb	r3, [r3, #0]
 80046aa:	3305      	adds	r3, #5
 80046ac:	b2da      	uxtb	r2, r3
 80046ae:	4b23      	ldr	r3, [pc, #140]	; (800473c <HAL_UART_RxCpltCallback+0x3114>)
 80046b0:	701a      	strb	r2, [r3, #0]
 80046b2:	e1d9      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
            	 	        				   }
            	 	        				 else if (uRx_Data[k+3]=='-') {
 80046b4:	4b1b      	ldr	r3, [pc, #108]	; (8004724 <HAL_UART_RxCpltCallback+0x30fc>)
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	3303      	adds	r3, #3
 80046ba:	4a1b      	ldr	r2, [pc, #108]	; (8004728 <HAL_UART_RxCpltCallback+0x3100>)
 80046bc:	5cd3      	ldrb	r3, [r2, r3]
 80046be:	2b2d      	cmp	r3, #45	; 0x2d
 80046c0:	f040 81d2 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
            	 	        				       uRx_Data1[uLength1]='J';
 80046c4:	4b19      	ldr	r3, [pc, #100]	; (800472c <HAL_UART_RxCpltCallback+0x3104>)
 80046c6:	781b      	ldrb	r3, [r3, #0]
 80046c8:	461a      	mov	r2, r3
 80046ca:	4b19      	ldr	r3, [pc, #100]	; (8004730 <HAL_UART_RxCpltCallback+0x3108>)
 80046cc:	214a      	movs	r1, #74	; 0x4a
 80046ce:	5499      	strb	r1, [r3, r2]
            	 	        				       uLength1++;uRx_Data2[h]='.';
 80046d0:	4b16      	ldr	r3, [pc, #88]	; (800472c <HAL_UART_RxCpltCallback+0x3104>)
 80046d2:	781b      	ldrb	r3, [r3, #0]
 80046d4:	3301      	adds	r3, #1
 80046d6:	b2da      	uxtb	r2, r3
 80046d8:	4b14      	ldr	r3, [pc, #80]	; (800472c <HAL_UART_RxCpltCallback+0x3104>)
 80046da:	701a      	strb	r2, [r3, #0]
 80046dc:	4b15      	ldr	r3, [pc, #84]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 80046de:	681b      	ldr	r3, [r3, #0]
 80046e0:	4a15      	ldr	r2, [pc, #84]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 80046e2:	212e      	movs	r1, #46	; 0x2e
 80046e4:	54d1      	strb	r1, [r2, r3]
                         	 	        	    	uRx_Data2[h+1]='-';
 80046e6:	4b13      	ldr	r3, [pc, #76]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	3301      	adds	r3, #1
 80046ec:	4a12      	ldr	r2, [pc, #72]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 80046ee:	212d      	movs	r1, #45	; 0x2d
 80046f0:	54d1      	strb	r1, [r2, r3]
                         	 	        	    	uRx_Data2[h+2]='-';
 80046f2:	4b10      	ldr	r3, [pc, #64]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 80046f4:	681b      	ldr	r3, [r3, #0]
 80046f6:	3302      	adds	r3, #2
 80046f8:	4a0f      	ldr	r2, [pc, #60]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 80046fa:	212d      	movs	r1, #45	; 0x2d
 80046fc:	54d1      	strb	r1, [r2, r3]
                         	 	        	    	uRx_Data2[h+3]='-';
 80046fe:	4b0d      	ldr	r3, [pc, #52]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 8004700:	681b      	ldr	r3, [r3, #0]
 8004702:	3303      	adds	r3, #3
 8004704:	4a0c      	ldr	r2, [pc, #48]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 8004706:	212d      	movs	r1, #45	; 0x2d
 8004708:	54d1      	strb	r1, [r2, r3]
                         	 	        	    	uRx_Data2[h+4]='/';
 800470a:	4b0a      	ldr	r3, [pc, #40]	; (8004734 <HAL_UART_RxCpltCallback+0x310c>)
 800470c:	681b      	ldr	r3, [r3, #0]
 800470e:	3304      	adds	r3, #4
 8004710:	4a09      	ldr	r2, [pc, #36]	; (8004738 <HAL_UART_RxCpltCallback+0x3110>)
 8004712:	212f      	movs	r1, #47	; 0x2f
 8004714:	54d1      	strb	r1, [r2, r3]
                            	 	        	    	//k=k+5;
                            	 	        	        uLength2+=5;
 8004716:	4b09      	ldr	r3, [pc, #36]	; (800473c <HAL_UART_RxCpltCallback+0x3114>)
 8004718:	781b      	ldrb	r3, [r3, #0]
 800471a:	3305      	adds	r3, #5
 800471c:	b2da      	uxtb	r2, r3
 800471e:	4b07      	ldr	r3, [pc, #28]	; (800473c <HAL_UART_RxCpltCallback+0x3114>)
 8004720:	701a      	strb	r2, [r3, #0]
 8004722:	e1a1      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
 8004724:	20001434 	.word	0x20001434
 8004728:	2000042c 	.word	0x2000042c
 800472c:	2000142d 	.word	0x2000142d
 8004730:	2000082c 	.word	0x2000082c
 8004734:	20001438 	.word	0x20001438
 8004738:	20000c2c 	.word	0x20000c2c
 800473c:	2000142e 	.word	0x2000142e
              	 	        				   }

                	 	        				   }

                	 	        			  }
                	 	        			 else if (uRx_Data[k]=='-') {
 8004740:	4b7d      	ldr	r3, [pc, #500]	; (8004938 <HAL_UART_RxCpltCallback+0x3310>)
 8004742:	681b      	ldr	r3, [r3, #0]
 8004744:	4a7d      	ldr	r2, [pc, #500]	; (800493c <HAL_UART_RxCpltCallback+0x3314>)
 8004746:	5cd3      	ldrb	r3, [r2, r3]
 8004748:	2b2d      	cmp	r3, #45	; 0x2d
 800474a:	f040 818d 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                	 	        				  if (uRx_Data[k+1]=='.') {
 800474e:	4b7a      	ldr	r3, [pc, #488]	; (8004938 <HAL_UART_RxCpltCallback+0x3310>)
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	3301      	adds	r3, #1
 8004754:	4a79      	ldr	r2, [pc, #484]	; (800493c <HAL_UART_RxCpltCallback+0x3314>)
 8004756:	5cd3      	ldrb	r3, [r2, r3]
 8004758:	2b2e      	cmp	r3, #46	; 0x2e
 800475a:	f040 80fb 	bne.w	8004954 <HAL_UART_RxCpltCallback+0x332c>
                	 	        					  if (uRx_Data[k+2]=='.') {
 800475e:	4b76      	ldr	r3, [pc, #472]	; (8004938 <HAL_UART_RxCpltCallback+0x3310>)
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	3302      	adds	r3, #2
 8004764:	4a75      	ldr	r2, [pc, #468]	; (800493c <HAL_UART_RxCpltCallback+0x3314>)
 8004766:	5cd3      	ldrb	r3, [r2, r3]
 8004768:	2b2e      	cmp	r3, #46	; 0x2e
 800476a:	d16e      	bne.n	800484a <HAL_UART_RxCpltCallback+0x3222>
                	 	        						  if (uRx_Data[k+3]=='.') {
 800476c:	4b72      	ldr	r3, [pc, #456]	; (8004938 <HAL_UART_RxCpltCallback+0x3310>)
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	3303      	adds	r3, #3
 8004772:	4a72      	ldr	r2, [pc, #456]	; (800493c <HAL_UART_RxCpltCallback+0x3314>)
 8004774:	5cd3      	ldrb	r3, [r2, r3]
 8004776:	2b2e      	cmp	r3, #46	; 0x2e
 8004778:	d12f      	bne.n	80047da <HAL_UART_RxCpltCallback+0x31b2>
                     	 	        				       uRx_Data1[uLength1]='B';
 800477a:	4b71      	ldr	r3, [pc, #452]	; (8004940 <HAL_UART_RxCpltCallback+0x3318>)
 800477c:	781b      	ldrb	r3, [r3, #0]
 800477e:	461a      	mov	r2, r3
 8004780:	4b70      	ldr	r3, [pc, #448]	; (8004944 <HAL_UART_RxCpltCallback+0x331c>)
 8004782:	2142      	movs	r1, #66	; 0x42
 8004784:	5499      	strb	r1, [r3, r2]
                     	 	        				       uLength1++;uRx_Data2[h]='-';
 8004786:	4b6e      	ldr	r3, [pc, #440]	; (8004940 <HAL_UART_RxCpltCallback+0x3318>)
 8004788:	781b      	ldrb	r3, [r3, #0]
 800478a:	3301      	adds	r3, #1
 800478c:	b2da      	uxtb	r2, r3
 800478e:	4b6c      	ldr	r3, [pc, #432]	; (8004940 <HAL_UART_RxCpltCallback+0x3318>)
 8004790:	701a      	strb	r2, [r3, #0]
 8004792:	4b6d      	ldr	r3, [pc, #436]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	4a6d      	ldr	r2, [pc, #436]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 8004798:	212d      	movs	r1, #45	; 0x2d
 800479a:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	uRx_Data2[h+1]='.';
 800479c:	4b6a      	ldr	r3, [pc, #424]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 800479e:	681b      	ldr	r3, [r3, #0]
 80047a0:	3301      	adds	r3, #1
 80047a2:	4a6a      	ldr	r2, [pc, #424]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 80047a4:	212e      	movs	r1, #46	; 0x2e
 80047a6:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	uRx_Data2[h+2]='.';
 80047a8:	4b67      	ldr	r3, [pc, #412]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 80047aa:	681b      	ldr	r3, [r3, #0]
 80047ac:	3302      	adds	r3, #2
 80047ae:	4a67      	ldr	r2, [pc, #412]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 80047b0:	212e      	movs	r1, #46	; 0x2e
 80047b2:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	uRx_Data2[h+3]='.';
 80047b4:	4b64      	ldr	r3, [pc, #400]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 80047b6:	681b      	ldr	r3, [r3, #0]
 80047b8:	3303      	adds	r3, #3
 80047ba:	4a64      	ldr	r2, [pc, #400]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 80047bc:	212e      	movs	r1, #46	; 0x2e
 80047be:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	uRx_Data2[h+4]='/';
 80047c0:	4b61      	ldr	r3, [pc, #388]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 80047c2:	681b      	ldr	r3, [r3, #0]
 80047c4:	3304      	adds	r3, #4
 80047c6:	4a61      	ldr	r2, [pc, #388]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 80047c8:	212f      	movs	r1, #47	; 0x2f
 80047ca:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+5;
                                	 	        	        uLength2+=5;
 80047cc:	4b60      	ldr	r3, [pc, #384]	; (8004950 <HAL_UART_RxCpltCallback+0x3328>)
 80047ce:	781b      	ldrb	r3, [r3, #0]
 80047d0:	3305      	adds	r3, #5
 80047d2:	b2da      	uxtb	r2, r3
 80047d4:	4b5e      	ldr	r3, [pc, #376]	; (8004950 <HAL_UART_RxCpltCallback+0x3328>)
 80047d6:	701a      	strb	r2, [r3, #0]
 80047d8:	e146      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                     	 	        				   }
                     	 	        				 else if (uRx_Data[k+3]=='-') {
 80047da:	4b57      	ldr	r3, [pc, #348]	; (8004938 <HAL_UART_RxCpltCallback+0x3310>)
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	3303      	adds	r3, #3
 80047e0:	4a56      	ldr	r2, [pc, #344]	; (800493c <HAL_UART_RxCpltCallback+0x3314>)
 80047e2:	5cd3      	ldrb	r3, [r2, r3]
 80047e4:	2b2d      	cmp	r3, #45	; 0x2d
 80047e6:	f040 813f 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                     	 	        				       uRx_Data1[uLength1]='X';
 80047ea:	4b55      	ldr	r3, [pc, #340]	; (8004940 <HAL_UART_RxCpltCallback+0x3318>)
 80047ec:	781b      	ldrb	r3, [r3, #0]
 80047ee:	461a      	mov	r2, r3
 80047f0:	4b54      	ldr	r3, [pc, #336]	; (8004944 <HAL_UART_RxCpltCallback+0x331c>)
 80047f2:	2158      	movs	r1, #88	; 0x58
 80047f4:	5499      	strb	r1, [r3, r2]
                     	 	        				       uLength1++;uRx_Data2[h]='-';
 80047f6:	4b52      	ldr	r3, [pc, #328]	; (8004940 <HAL_UART_RxCpltCallback+0x3318>)
 80047f8:	781b      	ldrb	r3, [r3, #0]
 80047fa:	3301      	adds	r3, #1
 80047fc:	b2da      	uxtb	r2, r3
 80047fe:	4b50      	ldr	r3, [pc, #320]	; (8004940 <HAL_UART_RxCpltCallback+0x3318>)
 8004800:	701a      	strb	r2, [r3, #0]
 8004802:	4b51      	ldr	r3, [pc, #324]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 8004804:	681b      	ldr	r3, [r3, #0]
 8004806:	4a51      	ldr	r2, [pc, #324]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 8004808:	212d      	movs	r1, #45	; 0x2d
 800480a:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+1]='.';
 800480c:	4b4e      	ldr	r3, [pc, #312]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 800480e:	681b      	ldr	r3, [r3, #0]
 8004810:	3301      	adds	r3, #1
 8004812:	4a4e      	ldr	r2, [pc, #312]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 8004814:	212e      	movs	r1, #46	; 0x2e
 8004816:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+2]='.';
 8004818:	4b4b      	ldr	r3, [pc, #300]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	3302      	adds	r3, #2
 800481e:	4a4b      	ldr	r2, [pc, #300]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 8004820:	212e      	movs	r1, #46	; 0x2e
 8004822:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+3]='-';
 8004824:	4b48      	ldr	r3, [pc, #288]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 8004826:	681b      	ldr	r3, [r3, #0]
 8004828:	3303      	adds	r3, #3
 800482a:	4a48      	ldr	r2, [pc, #288]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 800482c:	212d      	movs	r1, #45	; 0x2d
 800482e:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+4]='/';
 8004830:	4b45      	ldr	r3, [pc, #276]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 8004832:	681b      	ldr	r3, [r3, #0]
 8004834:	3304      	adds	r3, #4
 8004836:	4a45      	ldr	r2, [pc, #276]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 8004838:	212f      	movs	r1, #47	; 0x2f
 800483a:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+5;
                                    	 	        	        uLength2+=5;
 800483c:	4b44      	ldr	r3, [pc, #272]	; (8004950 <HAL_UART_RxCpltCallback+0x3328>)
 800483e:	781b      	ldrb	r3, [r3, #0]
 8004840:	3305      	adds	r3, #5
 8004842:	b2da      	uxtb	r2, r3
 8004844:	4b42      	ldr	r3, [pc, #264]	; (8004950 <HAL_UART_RxCpltCallback+0x3328>)
 8004846:	701a      	strb	r2, [r3, #0]
 8004848:	e10e      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                     	 	        				   }

                  	 	        				   }
                  	 	        				 else if (uRx_Data[k+2]=='-') {
 800484a:	4b3b      	ldr	r3, [pc, #236]	; (8004938 <HAL_UART_RxCpltCallback+0x3310>)
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	3302      	adds	r3, #2
 8004850:	4a3a      	ldr	r2, [pc, #232]	; (800493c <HAL_UART_RxCpltCallback+0x3314>)
 8004852:	5cd3      	ldrb	r3, [r2, r3]
 8004854:	2b2d      	cmp	r3, #45	; 0x2d
 8004856:	f040 8107 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                  	 	        					 if (uRx_Data[k+3]=='.') {
 800485a:	4b37      	ldr	r3, [pc, #220]	; (8004938 <HAL_UART_RxCpltCallback+0x3310>)
 800485c:	681b      	ldr	r3, [r3, #0]
 800485e:	3303      	adds	r3, #3
 8004860:	4a36      	ldr	r2, [pc, #216]	; (800493c <HAL_UART_RxCpltCallback+0x3314>)
 8004862:	5cd3      	ldrb	r3, [r2, r3]
 8004864:	2b2e      	cmp	r3, #46	; 0x2e
 8004866:	d12f      	bne.n	80048c8 <HAL_UART_RxCpltCallback+0x32a0>
                	 	        				       uRx_Data1[uLength1]='C';
 8004868:	4b35      	ldr	r3, [pc, #212]	; (8004940 <HAL_UART_RxCpltCallback+0x3318>)
 800486a:	781b      	ldrb	r3, [r3, #0]
 800486c:	461a      	mov	r2, r3
 800486e:	4b35      	ldr	r3, [pc, #212]	; (8004944 <HAL_UART_RxCpltCallback+0x331c>)
 8004870:	2143      	movs	r1, #67	; 0x43
 8004872:	5499      	strb	r1, [r3, r2]
                	 	        				       uLength1++; uRx_Data2[h]='-';
 8004874:	4b32      	ldr	r3, [pc, #200]	; (8004940 <HAL_UART_RxCpltCallback+0x3318>)
 8004876:	781b      	ldrb	r3, [r3, #0]
 8004878:	3301      	adds	r3, #1
 800487a:	b2da      	uxtb	r2, r3
 800487c:	4b30      	ldr	r3, [pc, #192]	; (8004940 <HAL_UART_RxCpltCallback+0x3318>)
 800487e:	701a      	strb	r2, [r3, #0]
 8004880:	4b31      	ldr	r3, [pc, #196]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	4a31      	ldr	r2, [pc, #196]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 8004886:	212d      	movs	r1, #45	; 0x2d
 8004888:	54d1      	strb	r1, [r2, r3]
                        	 	        	    	     uRx_Data2[h+1]='.';
 800488a:	4b2f      	ldr	r3, [pc, #188]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	3301      	adds	r3, #1
 8004890:	4a2e      	ldr	r2, [pc, #184]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 8004892:	212e      	movs	r1, #46	; 0x2e
 8004894:	54d1      	strb	r1, [r2, r3]
                        	 	        	    	     uRx_Data2[h+2]='-';
 8004896:	4b2c      	ldr	r3, [pc, #176]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 8004898:	681b      	ldr	r3, [r3, #0]
 800489a:	3302      	adds	r3, #2
 800489c:	4a2b      	ldr	r2, [pc, #172]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 800489e:	212d      	movs	r1, #45	; 0x2d
 80048a0:	54d1      	strb	r1, [r2, r3]
                        	 	        	    	     uRx_Data2[h+3]='.';
 80048a2:	4b29      	ldr	r3, [pc, #164]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	3303      	adds	r3, #3
 80048a8:	4a28      	ldr	r2, [pc, #160]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 80048aa:	212e      	movs	r1, #46	; 0x2e
 80048ac:	54d1      	strb	r1, [r2, r3]
                        	 	        	    	     uRx_Data2[h+4]='/';
 80048ae:	4b26      	ldr	r3, [pc, #152]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	3304      	adds	r3, #4
 80048b4:	4a25      	ldr	r2, [pc, #148]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 80048b6:	212f      	movs	r1, #47	; 0x2f
 80048b8:	54d1      	strb	r1, [r2, r3]
                           	 	        	    	//k=k+5;
                           	 	        	        uLength2+=5;
 80048ba:	4b25      	ldr	r3, [pc, #148]	; (8004950 <HAL_UART_RxCpltCallback+0x3328>)
 80048bc:	781b      	ldrb	r3, [r3, #0]
 80048be:	3305      	adds	r3, #5
 80048c0:	b2da      	uxtb	r2, r3
 80048c2:	4b23      	ldr	r3, [pc, #140]	; (8004950 <HAL_UART_RxCpltCallback+0x3328>)
 80048c4:	701a      	strb	r2, [r3, #0]
 80048c6:	e0cf      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                	 	        				   }
                	 	        				 else if (uRx_Data[k+3]=='-') {
 80048c8:	4b1b      	ldr	r3, [pc, #108]	; (8004938 <HAL_UART_RxCpltCallback+0x3310>)
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	3303      	adds	r3, #3
 80048ce:	4a1b      	ldr	r2, [pc, #108]	; (800493c <HAL_UART_RxCpltCallback+0x3314>)
 80048d0:	5cd3      	ldrb	r3, [r2, r3]
 80048d2:	2b2d      	cmp	r3, #45	; 0x2d
 80048d4:	f040 80c8 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                	 	        				       uRx_Data1[uLength1]='Y';
 80048d8:	4b19      	ldr	r3, [pc, #100]	; (8004940 <HAL_UART_RxCpltCallback+0x3318>)
 80048da:	781b      	ldrb	r3, [r3, #0]
 80048dc:	461a      	mov	r2, r3
 80048de:	4b19      	ldr	r3, [pc, #100]	; (8004944 <HAL_UART_RxCpltCallback+0x331c>)
 80048e0:	2159      	movs	r1, #89	; 0x59
 80048e2:	5499      	strb	r1, [r3, r2]
                	 	        				       uLength1++; uRx_Data2[h]='-';
 80048e4:	4b16      	ldr	r3, [pc, #88]	; (8004940 <HAL_UART_RxCpltCallback+0x3318>)
 80048e6:	781b      	ldrb	r3, [r3, #0]
 80048e8:	3301      	adds	r3, #1
 80048ea:	b2da      	uxtb	r2, r3
 80048ec:	4b14      	ldr	r3, [pc, #80]	; (8004940 <HAL_UART_RxCpltCallback+0x3318>)
 80048ee:	701a      	strb	r2, [r3, #0]
 80048f0:	4b15      	ldr	r3, [pc, #84]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	4a15      	ldr	r2, [pc, #84]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 80048f6:	212d      	movs	r1, #45	; 0x2d
 80048f8:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+1]='.';
 80048fa:	4b13      	ldr	r3, [pc, #76]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 80048fc:	681b      	ldr	r3, [r3, #0]
 80048fe:	3301      	adds	r3, #1
 8004900:	4a12      	ldr	r2, [pc, #72]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 8004902:	212e      	movs	r1, #46	; 0x2e
 8004904:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+2]='-';
 8004906:	4b10      	ldr	r3, [pc, #64]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 8004908:	681b      	ldr	r3, [r3, #0]
 800490a:	3302      	adds	r3, #2
 800490c:	4a0f      	ldr	r2, [pc, #60]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 800490e:	212d      	movs	r1, #45	; 0x2d
 8004910:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+3]='-';
 8004912:	4b0d      	ldr	r3, [pc, #52]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 8004914:	681b      	ldr	r3, [r3, #0]
 8004916:	3303      	adds	r3, #3
 8004918:	4a0c      	ldr	r2, [pc, #48]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 800491a:	212d      	movs	r1, #45	; 0x2d
 800491c:	54d1      	strb	r1, [r2, r3]
                              	 	        	    	uRx_Data2[h+4]='/';
 800491e:	4b0a      	ldr	r3, [pc, #40]	; (8004948 <HAL_UART_RxCpltCallback+0x3320>)
 8004920:	681b      	ldr	r3, [r3, #0]
 8004922:	3304      	adds	r3, #4
 8004924:	4a09      	ldr	r2, [pc, #36]	; (800494c <HAL_UART_RxCpltCallback+0x3324>)
 8004926:	212f      	movs	r1, #47	; 0x2f
 8004928:	54d1      	strb	r1, [r2, r3]
                                	 	        	    	//k=k+5;
                                	 	        	        uLength2+=5;
 800492a:	4b09      	ldr	r3, [pc, #36]	; (8004950 <HAL_UART_RxCpltCallback+0x3328>)
 800492c:	781b      	ldrb	r3, [r3, #0]
 800492e:	3305      	adds	r3, #5
 8004930:	b2da      	uxtb	r2, r3
 8004932:	4b07      	ldr	r3, [pc, #28]	; (8004950 <HAL_UART_RxCpltCallback+0x3328>)
 8004934:	701a      	strb	r2, [r3, #0]
 8004936:	e097      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
 8004938:	20001434 	.word	0x20001434
 800493c:	2000042c 	.word	0x2000042c
 8004940:	2000142d 	.word	0x2000142d
 8004944:	2000082c 	.word	0x2000082c
 8004948:	20001438 	.word	0x20001438
 800494c:	20000c2c 	.word	0x20000c2c
 8004950:	2000142e 	.word	0x2000142e
                	 	        				   }

                  	 	        				   }

                	 	        				  }
                	 	        				  else if (uRx_Data[k+1]=='-') {
 8004954:	4b7c      	ldr	r3, [pc, #496]	; (8004b48 <HAL_UART_RxCpltCallback+0x3520>)
 8004956:	681b      	ldr	r3, [r3, #0]
 8004958:	3301      	adds	r3, #1
 800495a:	4a7c      	ldr	r2, [pc, #496]	; (8004b4c <HAL_UART_RxCpltCallback+0x3524>)
 800495c:	5cd3      	ldrb	r3, [r2, r3]
 800495e:	2b2d      	cmp	r3, #45	; 0x2d
 8004960:	f040 8082 	bne.w	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                	 	        					  if (uRx_Data[k+2]=='.') {
 8004964:	4b78      	ldr	r3, [pc, #480]	; (8004b48 <HAL_UART_RxCpltCallback+0x3520>)
 8004966:	681b      	ldr	r3, [r3, #0]
 8004968:	3302      	adds	r3, #2
 800496a:	4a78      	ldr	r2, [pc, #480]	; (8004b4c <HAL_UART_RxCpltCallback+0x3524>)
 800496c:	5cd3      	ldrb	r3, [r2, r3]
 800496e:	2b2e      	cmp	r3, #46	; 0x2e
 8004970:	d16d      	bne.n	8004a4e <HAL_UART_RxCpltCallback+0x3426>
                	 	        						  if (uRx_Data[k+3]=='.') {
 8004972:	4b75      	ldr	r3, [pc, #468]	; (8004b48 <HAL_UART_RxCpltCallback+0x3520>)
 8004974:	681b      	ldr	r3, [r3, #0]
 8004976:	3303      	adds	r3, #3
 8004978:	4a74      	ldr	r2, [pc, #464]	; (8004b4c <HAL_UART_RxCpltCallback+0x3524>)
 800497a:	5cd3      	ldrb	r3, [r2, r3]
 800497c:	2b2e      	cmp	r3, #46	; 0x2e
 800497e:	d12f      	bne.n	80049e0 <HAL_UART_RxCpltCallback+0x33b8>
                     	 	        				       uRx_Data1[uLength1]='Z';
 8004980:	4b73      	ldr	r3, [pc, #460]	; (8004b50 <HAL_UART_RxCpltCallback+0x3528>)
 8004982:	781b      	ldrb	r3, [r3, #0]
 8004984:	461a      	mov	r2, r3
 8004986:	4b73      	ldr	r3, [pc, #460]	; (8004b54 <HAL_UART_RxCpltCallback+0x352c>)
 8004988:	215a      	movs	r1, #90	; 0x5a
 800498a:	5499      	strb	r1, [r3, r2]
                     	 	        				       uLength1++; uRx_Data2[h]='-';
 800498c:	4b70      	ldr	r3, [pc, #448]	; (8004b50 <HAL_UART_RxCpltCallback+0x3528>)
 800498e:	781b      	ldrb	r3, [r3, #0]
 8004990:	3301      	adds	r3, #1
 8004992:	b2da      	uxtb	r2, r3
 8004994:	4b6e      	ldr	r3, [pc, #440]	; (8004b50 <HAL_UART_RxCpltCallback+0x3528>)
 8004996:	701a      	strb	r2, [r3, #0]
 8004998:	4b6f      	ldr	r3, [pc, #444]	; (8004b58 <HAL_UART_RxCpltCallback+0x3530>)
 800499a:	681b      	ldr	r3, [r3, #0]
 800499c:	4a6f      	ldr	r2, [pc, #444]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 800499e:	212d      	movs	r1, #45	; 0x2d
 80049a0:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+1]='-';
 80049a2:	4b6d      	ldr	r3, [pc, #436]	; (8004b58 <HAL_UART_RxCpltCallback+0x3530>)
 80049a4:	681b      	ldr	r3, [r3, #0]
 80049a6:	3301      	adds	r3, #1
 80049a8:	4a6c      	ldr	r2, [pc, #432]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 80049aa:	212d      	movs	r1, #45	; 0x2d
 80049ac:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+2]='.';
 80049ae:	4b6a      	ldr	r3, [pc, #424]	; (8004b58 <HAL_UART_RxCpltCallback+0x3530>)
 80049b0:	681b      	ldr	r3, [r3, #0]
 80049b2:	3302      	adds	r3, #2
 80049b4:	4a69      	ldr	r2, [pc, #420]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 80049b6:	212e      	movs	r1, #46	; 0x2e
 80049b8:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+3]='.';
 80049ba:	4b67      	ldr	r3, [pc, #412]	; (8004b58 <HAL_UART_RxCpltCallback+0x3530>)
 80049bc:	681b      	ldr	r3, [r3, #0]
 80049be:	3303      	adds	r3, #3
 80049c0:	4a66      	ldr	r2, [pc, #408]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 80049c2:	212e      	movs	r1, #46	; 0x2e
 80049c4:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+4]='/';
 80049c6:	4b64      	ldr	r3, [pc, #400]	; (8004b58 <HAL_UART_RxCpltCallback+0x3530>)
 80049c8:	681b      	ldr	r3, [r3, #0]
 80049ca:	3304      	adds	r3, #4
 80049cc:	4a63      	ldr	r2, [pc, #396]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 80049ce:	212f      	movs	r1, #47	; 0x2f
 80049d0:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+5;
                                    	 	        	        uLength2+=5;
 80049d2:	4b63      	ldr	r3, [pc, #396]	; (8004b60 <HAL_UART_RxCpltCallback+0x3538>)
 80049d4:	781b      	ldrb	r3, [r3, #0]
 80049d6:	3305      	adds	r3, #5
 80049d8:	b2da      	uxtb	r2, r3
 80049da:	4b61      	ldr	r3, [pc, #388]	; (8004b60 <HAL_UART_RxCpltCallback+0x3538>)
 80049dc:	701a      	strb	r2, [r3, #0]
 80049de:	e043      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                     	 	        				   }
                     	 	        				 else if (uRx_Data[k+3]=='-') {
 80049e0:	4b59      	ldr	r3, [pc, #356]	; (8004b48 <HAL_UART_RxCpltCallback+0x3520>)
 80049e2:	681b      	ldr	r3, [r3, #0]
 80049e4:	3303      	adds	r3, #3
 80049e6:	4a59      	ldr	r2, [pc, #356]	; (8004b4c <HAL_UART_RxCpltCallback+0x3524>)
 80049e8:	5cd3      	ldrb	r3, [r2, r3]
 80049ea:	2b2d      	cmp	r3, #45	; 0x2d
 80049ec:	d13c      	bne.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                     	 	        				       uRx_Data1[uLength1]='Q';
 80049ee:	4b58      	ldr	r3, [pc, #352]	; (8004b50 <HAL_UART_RxCpltCallback+0x3528>)
 80049f0:	781b      	ldrb	r3, [r3, #0]
 80049f2:	461a      	mov	r2, r3
 80049f4:	4b57      	ldr	r3, [pc, #348]	; (8004b54 <HAL_UART_RxCpltCallback+0x352c>)
 80049f6:	2151      	movs	r1, #81	; 0x51
 80049f8:	5499      	strb	r1, [r3, r2]
                     	 	        				       uLength1++; uRx_Data2[h]='-';
 80049fa:	4b55      	ldr	r3, [pc, #340]	; (8004b50 <HAL_UART_RxCpltCallback+0x3528>)
 80049fc:	781b      	ldrb	r3, [r3, #0]
 80049fe:	3301      	adds	r3, #1
 8004a00:	b2da      	uxtb	r2, r3
 8004a02:	4b53      	ldr	r3, [pc, #332]	; (8004b50 <HAL_UART_RxCpltCallback+0x3528>)
 8004a04:	701a      	strb	r2, [r3, #0]
 8004a06:	4b54      	ldr	r3, [pc, #336]	; (8004b58 <HAL_UART_RxCpltCallback+0x3530>)
 8004a08:	681b      	ldr	r3, [r3, #0]
 8004a0a:	4a54      	ldr	r2, [pc, #336]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 8004a0c:	212d      	movs	r1, #45	; 0x2d
 8004a0e:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+1]='-';
 8004a10:	4b51      	ldr	r3, [pc, #324]	; (8004b58 <HAL_UART_RxCpltCallback+0x3530>)
 8004a12:	681b      	ldr	r3, [r3, #0]
 8004a14:	3301      	adds	r3, #1
 8004a16:	4a51      	ldr	r2, [pc, #324]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 8004a18:	212d      	movs	r1, #45	; 0x2d
 8004a1a:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+2]='.';
 8004a1c:	4b4e      	ldr	r3, [pc, #312]	; (8004b58 <HAL_UART_RxCpltCallback+0x3530>)
 8004a1e:	681b      	ldr	r3, [r3, #0]
 8004a20:	3302      	adds	r3, #2
 8004a22:	4a4e      	ldr	r2, [pc, #312]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 8004a24:	212e      	movs	r1, #46	; 0x2e
 8004a26:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+3]='-';
 8004a28:	4b4b      	ldr	r3, [pc, #300]	; (8004b58 <HAL_UART_RxCpltCallback+0x3530>)
 8004a2a:	681b      	ldr	r3, [r3, #0]
 8004a2c:	3303      	adds	r3, #3
 8004a2e:	4a4b      	ldr	r2, [pc, #300]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 8004a30:	212d      	movs	r1, #45	; 0x2d
 8004a32:	54d1      	strb	r1, [r2, r3]
                                  	 	        	    	uRx_Data2[h+4]='/';
 8004a34:	4b48      	ldr	r3, [pc, #288]	; (8004b58 <HAL_UART_RxCpltCallback+0x3530>)
 8004a36:	681b      	ldr	r3, [r3, #0]
 8004a38:	3304      	adds	r3, #4
 8004a3a:	4a48      	ldr	r2, [pc, #288]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 8004a3c:	212f      	movs	r1, #47	; 0x2f
 8004a3e:	54d1      	strb	r1, [r2, r3]
                                    	 	        	    	//k=k+5;
                                    	 	        	        uLength2+=5;
 8004a40:	4b47      	ldr	r3, [pc, #284]	; (8004b60 <HAL_UART_RxCpltCallback+0x3538>)
 8004a42:	781b      	ldrb	r3, [r3, #0]
 8004a44:	3305      	adds	r3, #5
 8004a46:	b2da      	uxtb	r2, r3
 8004a48:	4b45      	ldr	r3, [pc, #276]	; (8004b60 <HAL_UART_RxCpltCallback+0x3538>)
 8004a4a:	701a      	strb	r2, [r3, #0]
 8004a4c:	e00c      	b.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                     	 	        				   }

                  	 	        				   }
                  	 	        				 else if (uRx_Data[k+2]=='-') {
 8004a4e:	4b3e      	ldr	r3, [pc, #248]	; (8004b48 <HAL_UART_RxCpltCallback+0x3520>)
 8004a50:	681b      	ldr	r3, [r3, #0]
 8004a52:	3302      	adds	r3, #2
 8004a54:	4a3d      	ldr	r2, [pc, #244]	; (8004b4c <HAL_UART_RxCpltCallback+0x3524>)
 8004a56:	5cd3      	ldrb	r3, [r2, r3]
 8004a58:	2b2d      	cmp	r3, #45	; 0x2d
 8004a5a:	d105      	bne.n	8004a68 <HAL_UART_RxCpltCallback+0x3440>
                  	 	        					 if (uRx_Data[k+3]=='.') {
 8004a5c:	4b3a      	ldr	r3, [pc, #232]	; (8004b48 <HAL_UART_RxCpltCallback+0x3520>)
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	3303      	adds	r3, #3
 8004a62:	4a3a      	ldr	r2, [pc, #232]	; (8004b4c <HAL_UART_RxCpltCallback+0x3524>)
 8004a64:	5cd3      	ldrb	r3, [r2, r3]
 8004a66:	2b2e      	cmp	r3, #46	; 0x2e



                    	 	        		  }

                                               k=i+1;
 8004a68:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004a6a:	3301      	adds	r3, #1
 8004a6c:	4a36      	ldr	r2, [pc, #216]	; (8004b48 <HAL_UART_RxCpltCallback+0x3520>)
 8004a6e:	6013      	str	r3, [r2, #0]
                    	 	        	   }

                    	 	         }
                                   //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
                                                           	 	        	//HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
                                                           	 	        	 for (int j=h;j<=uLength2-1;j++){
 8004a70:	4b39      	ldr	r3, [pc, #228]	; (8004b58 <HAL_UART_RxCpltCallback+0x3530>)
 8004a72:	681b      	ldr	r3, [r3, #0]
 8004a74:	61bb      	str	r3, [r7, #24]
 8004a76:	e0b6      	b.n	8004be6 <HAL_UART_RxCpltCallback+0x35be>
                                                           	 	        		 if (uRx_Data2[j]=='.'){
 8004a78:	4a38      	ldr	r2, [pc, #224]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 8004a7a:	69bb      	ldr	r3, [r7, #24]
 8004a7c:	4413      	add	r3, r2
 8004a7e:	781b      	ldrb	r3, [r3, #0]
 8004a80:	2b2e      	cmp	r3, #46	; 0x2e
 8004a82:	d112      	bne.n	8004aaa <HAL_UART_RxCpltCallback+0x3482>
                                                                	 	            HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004a84:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004a88:	4836      	ldr	r0, [pc, #216]	; (8004b64 <HAL_UART_RxCpltCallback+0x353c>)
 8004a8a:	f001 f82a 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	            HAL_Delay(500);
 8004a8e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004a92:	f000 fbef 	bl	8005274 <HAL_Delay>
                                                                	 	            HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004a96:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004a9a:	4832      	ldr	r0, [pc, #200]	; (8004b64 <HAL_UART_RxCpltCallback+0x353c>)
 8004a9c:	f001 f821 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	            HAL_Delay(500);
 8004aa0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004aa4:	f000 fbe6 	bl	8005274 <HAL_Delay>
 8004aa8:	e09a      	b.n	8004be0 <HAL_UART_RxCpltCallback+0x35b8>
                                                                	 	          }
                                                                	 	         else  if (uRx_Data2[j]=='-'){
 8004aaa:	4a2c      	ldr	r2, [pc, #176]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 8004aac:	69bb      	ldr	r3, [r7, #24]
 8004aae:	4413      	add	r3, r2
 8004ab0:	781b      	ldrb	r3, [r3, #0]
 8004ab2:	2b2d      	cmp	r3, #45	; 0x2d
 8004ab4:	d110      	bne.n	8004ad8 <HAL_UART_RxCpltCallback+0x34b0>
                                                                	 	            HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004ab6:	2104      	movs	r1, #4
 8004ab8:	482b      	ldr	r0, [pc, #172]	; (8004b68 <HAL_UART_RxCpltCallback+0x3540>)
 8004aba:	f001 f812 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	            HAL_Delay(500);
 8004abe:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004ac2:	f000 fbd7 	bl	8005274 <HAL_Delay>
                                                                	 	            HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004ac6:	2104      	movs	r1, #4
 8004ac8:	4827      	ldr	r0, [pc, #156]	; (8004b68 <HAL_UART_RxCpltCallback+0x3540>)
 8004aca:	f001 f80a 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	            HAL_Delay(500);
 8004ace:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004ad2:	f000 fbcf 	bl	8005274 <HAL_Delay>
 8004ad6:	e083      	b.n	8004be0 <HAL_UART_RxCpltCallback+0x35b8>

                                                                	 	       }
                                                                	 	         else if (uRx_Data2[j]=='/'){
 8004ad8:	4a20      	ldr	r2, [pc, #128]	; (8004b5c <HAL_UART_RxCpltCallback+0x3534>)
 8004ada:	69bb      	ldr	r3, [r7, #24]
 8004adc:	4413      	add	r3, r2
 8004ade:	781b      	ldrb	r3, [r3, #0]
 8004ae0:	2b2f      	cmp	r3, #47	; 0x2f
 8004ae2:	d143      	bne.n	8004b6c <HAL_UART_RxCpltCallback+0x3544>
                                                                	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004ae4:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004ae8:	481e      	ldr	r0, [pc, #120]	; (8004b64 <HAL_UART_RxCpltCallback+0x353c>)
 8004aea:	f000 fffa 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004aee:	2104      	movs	r1, #4
 8004af0:	481d      	ldr	r0, [pc, #116]	; (8004b68 <HAL_UART_RxCpltCallback+0x3540>)
 8004af2:	f000 fff6 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	        	  HAL_Delay(250);
 8004af6:	20fa      	movs	r0, #250	; 0xfa
 8004af8:	f000 fbbc 	bl	8005274 <HAL_Delay>
                                                                	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004afc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004b00:	4818      	ldr	r0, [pc, #96]	; (8004b64 <HAL_UART_RxCpltCallback+0x353c>)
 8004b02:	f000 ffee 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004b06:	2104      	movs	r1, #4
 8004b08:	4817      	ldr	r0, [pc, #92]	; (8004b68 <HAL_UART_RxCpltCallback+0x3540>)
 8004b0a:	f000 ffea 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	        	  HAL_Delay(250);
 8004b0e:	20fa      	movs	r0, #250	; 0xfa
 8004b10:	f000 fbb0 	bl	8005274 <HAL_Delay>
                                                                	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004b14:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004b18:	4812      	ldr	r0, [pc, #72]	; (8004b64 <HAL_UART_RxCpltCallback+0x353c>)
 8004b1a:	f000 ffe2 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004b1e:	2104      	movs	r1, #4
 8004b20:	4811      	ldr	r0, [pc, #68]	; (8004b68 <HAL_UART_RxCpltCallback+0x3540>)
 8004b22:	f000 ffde 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	        	  HAL_Delay(250);
 8004b26:	20fa      	movs	r0, #250	; 0xfa
 8004b28:	f000 fba4 	bl	8005274 <HAL_Delay>
                                                                	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004b2c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004b30:	480c      	ldr	r0, [pc, #48]	; (8004b64 <HAL_UART_RxCpltCallback+0x353c>)
 8004b32:	f000 ffd6 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004b36:	2104      	movs	r1, #4
 8004b38:	480b      	ldr	r0, [pc, #44]	; (8004b68 <HAL_UART_RxCpltCallback+0x3540>)
 8004b3a:	f000 ffd2 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	        	  HAL_Delay(250);
 8004b3e:	20fa      	movs	r0, #250	; 0xfa
 8004b40:	f000 fb98 	bl	8005274 <HAL_Delay>
 8004b44:	e04c      	b.n	8004be0 <HAL_UART_RxCpltCallback+0x35b8>
 8004b46:	bf00      	nop
 8004b48:	20001434 	.word	0x20001434
 8004b4c:	2000042c 	.word	0x2000042c
 8004b50:	2000142d 	.word	0x2000142d
 8004b54:	2000082c 	.word	0x2000082c
 8004b58:	20001438 	.word	0x20001438
 8004b5c:	20000c2c 	.word	0x20000c2c
 8004b60:	2000142e 	.word	0x2000142e
 8004b64:	40010800 	.word	0x40010800
 8004b68:	40011400 	.word	0x40011400
                                                                	 	            }
                                                                	 	         else if (uRx_Data2[j]=='d'){
 8004b6c:	4ab2      	ldr	r2, [pc, #712]	; (8004e38 <HAL_UART_RxCpltCallback+0x3810>)
 8004b6e:	69bb      	ldr	r3, [r7, #24]
 8004b70:	4413      	add	r3, r2
 8004b72:	781b      	ldrb	r3, [r3, #0]
 8004b74:	2b64      	cmp	r3, #100	; 0x64
 8004b76:	d133      	bne.n	8004be0 <HAL_UART_RxCpltCallback+0x35b8>
                                                                	 	        	 //j=uLength2;
                                                                	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004b78:	2104      	movs	r1, #4
 8004b7a:	48b0      	ldr	r0, [pc, #704]	; (8004e3c <HAL_UART_RxCpltCallback+0x3814>)
 8004b7c:	f000 ffb1 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                                	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004b80:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004b84:	48ae      	ldr	r0, [pc, #696]	; (8004e40 <HAL_UART_RxCpltCallback+0x3818>)
 8004b86:	f000 ffac 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                               	 	        	  HAL_Delay(166);
 8004b8a:	20a6      	movs	r0, #166	; 0xa6
 8004b8c:	f000 fb72 	bl	8005274 <HAL_Delay>
                                                               	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004b90:	2104      	movs	r1, #4
 8004b92:	48aa      	ldr	r0, [pc, #680]	; (8004e3c <HAL_UART_RxCpltCallback+0x3814>)
 8004b94:	f000 ffa5 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                               	 	        	  HAL_Delay(167);
 8004b98:	20a7      	movs	r0, #167	; 0xa7
 8004b9a:	f000 fb6b 	bl	8005274 <HAL_Delay>
                                                               	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004b9e:	2104      	movs	r1, #4
 8004ba0:	48a6      	ldr	r0, [pc, #664]	; (8004e3c <HAL_UART_RxCpltCallback+0x3814>)
 8004ba2:	f000 ff9e 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                               	 	        	  HAL_Delay(166);
 8004ba6:	20a6      	movs	r0, #166	; 0xa6
 8004ba8:	f000 fb64 	bl	8005274 <HAL_Delay>
                                                               	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004bac:	2104      	movs	r1, #4
 8004bae:	48a3      	ldr	r0, [pc, #652]	; (8004e3c <HAL_UART_RxCpltCallback+0x3814>)
 8004bb0:	f000 ff97 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                               	 	        	  HAL_Delay(167);
 8004bb4:	20a7      	movs	r0, #167	; 0xa7
 8004bb6:	f000 fb5d 	bl	8005274 <HAL_Delay>
                                                               	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004bba:	2104      	movs	r1, #4
 8004bbc:	489f      	ldr	r0, [pc, #636]	; (8004e3c <HAL_UART_RxCpltCallback+0x3814>)
 8004bbe:	f000 ff90 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                               	 	        	  HAL_Delay(166);
 8004bc2:	20a6      	movs	r0, #166	; 0xa6
 8004bc4:	f000 fb56 	bl	8005274 <HAL_Delay>
                                                               	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004bc8:	2104      	movs	r1, #4
 8004bca:	489c      	ldr	r0, [pc, #624]	; (8004e3c <HAL_UART_RxCpltCallback+0x3814>)
 8004bcc:	f000 ff89 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                               	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004bd0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004bd4:	489a      	ldr	r0, [pc, #616]	; (8004e40 <HAL_UART_RxCpltCallback+0x3818>)
 8004bd6:	f000 ff84 	bl	8005ae2 <HAL_GPIO_TogglePin>
                                                               	 	        	  HAL_Delay(168);
 8004bda:	20a8      	movs	r0, #168	; 0xa8
 8004bdc:	f000 fb4a 	bl	8005274 <HAL_Delay>
                                                           	 	        	 for (int j=h;j<=uLength2-1;j++){
 8004be0:	69bb      	ldr	r3, [r7, #24]
 8004be2:	3301      	adds	r3, #1
 8004be4:	61bb      	str	r3, [r7, #24]
 8004be6:	4b97      	ldr	r3, [pc, #604]	; (8004e44 <HAL_UART_RxCpltCallback+0x381c>)
 8004be8:	781b      	ldrb	r3, [r3, #0]
 8004bea:	461a      	mov	r2, r3
 8004bec:	69bb      	ldr	r3, [r7, #24]
 8004bee:	4293      	cmp	r3, r2
 8004bf0:	f6ff af42 	blt.w	8004a78 <HAL_UART_RxCpltCallback+0x3450>
                                                                	 	         }
                                                           	 	        	 }
                                                           	 	        	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
                                                           	 	        	//HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
                                                           	 	        	 h=uLength2;
 8004bf4:	4b93      	ldr	r3, [pc, #588]	; (8004e44 <HAL_UART_RxCpltCallback+0x381c>)
 8004bf6:	781b      	ldrb	r3, [r3, #0]
 8004bf8:	461a      	mov	r2, r3
 8004bfa:	4b93      	ldr	r3, [pc, #588]	; (8004e48 <HAL_UART_RxCpltCallback+0x3820>)
 8004bfc:	601a      	str	r2, [r3, #0]
                                   for (int i=0;i<uLength-1;i++){
 8004bfe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004c00:	3301      	adds	r3, #1
 8004c02:	62bb      	str	r3, [r7, #40]	; 0x28
 8004c04:	4b91      	ldr	r3, [pc, #580]	; (8004e4c <HAL_UART_RxCpltCallback+0x3824>)
 8004c06:	781b      	ldrb	r3, [r3, #0]
 8004c08:	3b01      	subs	r3, #1
 8004c0a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8004c0c:	429a      	cmp	r2, r3
 8004c0e:	f6fe af9a 	blt.w	8003b46 <HAL_UART_RxCpltCallback+0x251e>

                        	   }


                                   }
                                   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
 8004c12:	2201      	movs	r2, #1
 8004c14:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004c18:	4889      	ldr	r0, [pc, #548]	; (8004e40 <HAL_UART_RxCpltCallback+0x3818>)
 8004c1a:	f000 ff4a 	bl	8005ab2 <HAL_GPIO_WritePin>
                                   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
 8004c1e:	2201      	movs	r2, #1
 8004c20:	2104      	movs	r1, #4
 8004c22:	4886      	ldr	r0, [pc, #536]	; (8004e3c <HAL_UART_RxCpltCallback+0x3814>)
 8004c24:	f000 ff45 	bl	8005ab2 <HAL_GPIO_WritePin>
                                   HAL_UART_Transmit(&huart1, uRx_Data1, uLength1, 0xffff);
 8004c28:	4b89      	ldr	r3, [pc, #548]	; (8004e50 <HAL_UART_RxCpltCallback+0x3828>)
 8004c2a:	781b      	ldrb	r3, [r3, #0]
 8004c2c:	b29a      	uxth	r2, r3
 8004c2e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004c32:	4988      	ldr	r1, [pc, #544]	; (8004e54 <HAL_UART_RxCpltCallback+0x382c>)
 8004c34:	4888      	ldr	r0, [pc, #544]	; (8004e58 <HAL_UART_RxCpltCallback+0x3830>)
 8004c36:	f001 fbec 	bl	8006412 <HAL_UART_Transmit>
                                   uLength = 0;
 8004c3a:	4b84      	ldr	r3, [pc, #528]	; (8004e4c <HAL_UART_RxCpltCallback+0x3824>)
 8004c3c:	2200      	movs	r2, #0
 8004c3e:	701a      	strb	r2, [r3, #0]
                                   uLength1 = 0;
 8004c40:	4b83      	ldr	r3, [pc, #524]	; (8004e50 <HAL_UART_RxCpltCallback+0x3828>)
 8004c42:	2200      	movs	r2, #0
 8004c44:	701a      	strb	r2, [r3, #0]
                                   uLength2 = 0;
 8004c46:	4b7f      	ldr	r3, [pc, #508]	; (8004e44 <HAL_UART_RxCpltCallback+0x381c>)
 8004c48:	2200      	movs	r2, #0
 8004c4a:	701a      	strb	r2, [r3, #0]
                                   uRx_Data[uLength] = rxBuffer[0];
                                   uLength++;

                       }
            }
}
 8004c4c:	e1eb      	b.n	8005026 <HAL_UART_RxCpltCallback+0x39fe>
                    	   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
 8004c4e:	2201      	movs	r2, #1
 8004c50:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004c54:	487a      	ldr	r0, [pc, #488]	; (8004e40 <HAL_UART_RxCpltCallback+0x3818>)
 8004c56:	f000 ff2c 	bl	8005ab2 <HAL_GPIO_WritePin>
                    	   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
 8004c5a:	2201      	movs	r2, #1
 8004c5c:	2104      	movs	r1, #4
 8004c5e:	4877      	ldr	r0, [pc, #476]	; (8004e3c <HAL_UART_RxCpltCallback+0x3814>)
 8004c60:	f000 ff27 	bl	8005ab2 <HAL_GPIO_WritePin>
                    	   if (uRx_Data0[0]==1){
 8004c64:	4b7d      	ldr	r3, [pc, #500]	; (8004e5c <HAL_UART_RxCpltCallback+0x3834>)
 8004c66:	781b      	ldrb	r3, [r3, #0]
 8004c68:	2b01      	cmp	r3, #1
 8004c6a:	f040 80ff 	bne.w	8004e6c <HAL_UART_RxCpltCallback+0x3844>
                    		uLength3=0;
 8004c6e:	4b7c      	ldr	r3, [pc, #496]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004c70:	2200      	movs	r2, #0
 8004c72:	701a      	strb	r2, [r3, #0]
                    	    uRx_Data3[uLength3]='E';
 8004c74:	4b7a      	ldr	r3, [pc, #488]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004c76:	781b      	ldrb	r3, [r3, #0]
 8004c78:	461a      	mov	r2, r3
 8004c7a:	4b7a      	ldr	r3, [pc, #488]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004c7c:	2145      	movs	r1, #69	; 0x45
 8004c7e:	5499      	strb	r1, [r3, r2]
  	 	        	    	uRx_Data3[uLength3+1]='n';
 8004c80:	4b77      	ldr	r3, [pc, #476]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004c82:	781b      	ldrb	r3, [r3, #0]
 8004c84:	3301      	adds	r3, #1
 8004c86:	4a77      	ldr	r2, [pc, #476]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004c88:	216e      	movs	r1, #110	; 0x6e
 8004c8a:	54d1      	strb	r1, [r2, r3]
  	 	        	    	uRx_Data3[uLength3+2]='c';
 8004c8c:	4b74      	ldr	r3, [pc, #464]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004c8e:	781b      	ldrb	r3, [r3, #0]
 8004c90:	3302      	adds	r3, #2
 8004c92:	4a74      	ldr	r2, [pc, #464]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004c94:	2163      	movs	r1, #99	; 0x63
 8004c96:	54d1      	strb	r1, [r2, r3]
  	 	        	    	uRx_Data3[uLength3+3]='o';
 8004c98:	4b71      	ldr	r3, [pc, #452]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004c9a:	781b      	ldrb	r3, [r3, #0]
 8004c9c:	3303      	adds	r3, #3
 8004c9e:	4a71      	ldr	r2, [pc, #452]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004ca0:	216f      	movs	r1, #111	; 0x6f
 8004ca2:	54d1      	strb	r1, [r2, r3]
  	 	        	    	uRx_Data3[uLength3+4]='d';
 8004ca4:	4b6e      	ldr	r3, [pc, #440]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004ca6:	781b      	ldrb	r3, [r3, #0]
 8004ca8:	3304      	adds	r3, #4
 8004caa:	4a6e      	ldr	r2, [pc, #440]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004cac:	2164      	movs	r1, #100	; 0x64
 8004cae:	54d1      	strb	r1, [r2, r3]
  	 	        	    	uRx_Data3[uLength3+5]='e';
 8004cb0:	4b6b      	ldr	r3, [pc, #428]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004cb2:	781b      	ldrb	r3, [r3, #0]
 8004cb4:	3305      	adds	r3, #5
 8004cb6:	4a6b      	ldr	r2, [pc, #428]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004cb8:	2165      	movs	r1, #101	; 0x65
 8004cba:	54d1      	strb	r1, [r2, r3]
  	 	        	    	uRx_Data3[uLength3+6]=' ';
 8004cbc:	4b68      	ldr	r3, [pc, #416]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004cbe:	781b      	ldrb	r3, [r3, #0]
 8004cc0:	3306      	adds	r3, #6
 8004cc2:	4a68      	ldr	r2, [pc, #416]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004cc4:	2120      	movs	r1, #32
 8004cc6:	54d1      	strb	r1, [r2, r3]
  	 	        	    	uRx_Data3[uLength3+7]='E';
 8004cc8:	4b65      	ldr	r3, [pc, #404]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004cca:	781b      	ldrb	r3, [r3, #0]
 8004ccc:	3307      	adds	r3, #7
 8004cce:	4a65      	ldr	r2, [pc, #404]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004cd0:	2145      	movs	r1, #69	; 0x45
 8004cd2:	54d1      	strb	r1, [r2, r3]
  	 	        	    	uRx_Data3[uLength3+8]='r';
 8004cd4:	4b62      	ldr	r3, [pc, #392]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004cd6:	781b      	ldrb	r3, [r3, #0]
 8004cd8:	3308      	adds	r3, #8
 8004cda:	4a62      	ldr	r2, [pc, #392]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004cdc:	2172      	movs	r1, #114	; 0x72
 8004cde:	54d1      	strb	r1, [r2, r3]
  	 	        	    	uRx_Data3[uLength3+9]='r';
 8004ce0:	4b5f      	ldr	r3, [pc, #380]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004ce2:	781b      	ldrb	r3, [r3, #0]
 8004ce4:	3309      	adds	r3, #9
 8004ce6:	4a5f      	ldr	r2, [pc, #380]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004ce8:	2172      	movs	r1, #114	; 0x72
 8004cea:	54d1      	strb	r1, [r2, r3]
  	 	        	    	uRx_Data3[uLength3+10]='o';
 8004cec:	4b5c      	ldr	r3, [pc, #368]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004cee:	781b      	ldrb	r3, [r3, #0]
 8004cf0:	330a      	adds	r3, #10
 8004cf2:	4a5c      	ldr	r2, [pc, #368]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004cf4:	216f      	movs	r1, #111	; 0x6f
 8004cf6:	54d1      	strb	r1, [r2, r3]
  	 	        	    	uRx_Data3[uLength3+11]='r';
 8004cf8:	4b59      	ldr	r3, [pc, #356]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004cfa:	781b      	ldrb	r3, [r3, #0]
 8004cfc:	330b      	adds	r3, #11
 8004cfe:	4a59      	ldr	r2, [pc, #356]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004d00:	2172      	movs	r1, #114	; 0x72
 8004d02:	54d1      	strb	r1, [r2, r3]
  	 	        	    	uRx_Data3[uLength3+12]=':';
 8004d04:	4b56      	ldr	r3, [pc, #344]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004d06:	781b      	ldrb	r3, [r3, #0]
 8004d08:	330c      	adds	r3, #12
 8004d0a:	4a56      	ldr	r2, [pc, #344]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004d0c:	213a      	movs	r1, #58	; 0x3a
 8004d0e:	54d1      	strb	r1, [r2, r3]
  	 	        	    	uRx_Data3[uLength3+13]=' ';
 8004d10:	4b53      	ldr	r3, [pc, #332]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004d12:	781b      	ldrb	r3, [r3, #0]
 8004d14:	330d      	adds	r3, #13
 8004d16:	4a53      	ldr	r2, [pc, #332]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004d18:	2120      	movs	r1, #32
 8004d1a:	54d1      	strb	r1, [r2, r3]
  	 	        	    	for (int i=0;i<=uLength-1;i++){
 8004d1c:	2300      	movs	r3, #0
 8004d1e:	617b      	str	r3, [r7, #20]
 8004d20:	e00e      	b.n	8004d40 <HAL_UART_RxCpltCallback+0x3718>
  	 	        	    		uRx_Data3[uLength3+i+14]=uRx_Data[i];
 8004d22:	4b4f      	ldr	r3, [pc, #316]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004d24:	781b      	ldrb	r3, [r3, #0]
 8004d26:	461a      	mov	r2, r3
 8004d28:	697b      	ldr	r3, [r7, #20]
 8004d2a:	4413      	add	r3, r2
 8004d2c:	330e      	adds	r3, #14
 8004d2e:	494e      	ldr	r1, [pc, #312]	; (8004e68 <HAL_UART_RxCpltCallback+0x3840>)
 8004d30:	697a      	ldr	r2, [r7, #20]
 8004d32:	440a      	add	r2, r1
 8004d34:	7811      	ldrb	r1, [r2, #0]
 8004d36:	4a4b      	ldr	r2, [pc, #300]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004d38:	54d1      	strb	r1, [r2, r3]
  	 	        	    	for (int i=0;i<=uLength-1;i++){
 8004d3a:	697b      	ldr	r3, [r7, #20]
 8004d3c:	3301      	adds	r3, #1
 8004d3e:	617b      	str	r3, [r7, #20]
 8004d40:	4b42      	ldr	r3, [pc, #264]	; (8004e4c <HAL_UART_RxCpltCallback+0x3824>)
 8004d42:	781b      	ldrb	r3, [r3, #0]
 8004d44:	461a      	mov	r2, r3
 8004d46:	697b      	ldr	r3, [r7, #20]
 8004d48:	4293      	cmp	r3, r2
 8004d4a:	dbea      	blt.n	8004d22 <HAL_UART_RxCpltCallback+0x36fa>
  	 	        	    	uLength1=uLength-1+uLength3+14+1;
 8004d4c:	4b3f      	ldr	r3, [pc, #252]	; (8004e4c <HAL_UART_RxCpltCallback+0x3824>)
 8004d4e:	781a      	ldrb	r2, [r3, #0]
 8004d50:	4b43      	ldr	r3, [pc, #268]	; (8004e60 <HAL_UART_RxCpltCallback+0x3838>)
 8004d52:	781b      	ldrb	r3, [r3, #0]
 8004d54:	4413      	add	r3, r2
 8004d56:	b2db      	uxtb	r3, r3
 8004d58:	330e      	adds	r3, #14
 8004d5a:	b2da      	uxtb	r2, r3
 8004d5c:	4b3c      	ldr	r3, [pc, #240]	; (8004e50 <HAL_UART_RxCpltCallback+0x3828>)
 8004d5e:	701a      	strb	r2, [r3, #0]
  	 	        	    	for (int i=0;i<=uLength1-1;i++){
 8004d60:	2300      	movs	r3, #0
 8004d62:	613b      	str	r3, [r7, #16]
 8004d64:	e00b      	b.n	8004d7e <HAL_UART_RxCpltCallback+0x3756>
  	 	        	    		uRx_Data1[i]=uRx_Data3[i];
 8004d66:	4a3f      	ldr	r2, [pc, #252]	; (8004e64 <HAL_UART_RxCpltCallback+0x383c>)
 8004d68:	693b      	ldr	r3, [r7, #16]
 8004d6a:	4413      	add	r3, r2
 8004d6c:	7819      	ldrb	r1, [r3, #0]
 8004d6e:	4a39      	ldr	r2, [pc, #228]	; (8004e54 <HAL_UART_RxCpltCallback+0x382c>)
 8004d70:	693b      	ldr	r3, [r7, #16]
 8004d72:	4413      	add	r3, r2
 8004d74:	460a      	mov	r2, r1
 8004d76:	701a      	strb	r2, [r3, #0]
  	 	        	    	for (int i=0;i<=uLength1-1;i++){
 8004d78:	693b      	ldr	r3, [r7, #16]
 8004d7a:	3301      	adds	r3, #1
 8004d7c:	613b      	str	r3, [r7, #16]
 8004d7e:	4b34      	ldr	r3, [pc, #208]	; (8004e50 <HAL_UART_RxCpltCallback+0x3828>)
 8004d80:	781b      	ldrb	r3, [r3, #0]
 8004d82:	461a      	mov	r2, r3
 8004d84:	693b      	ldr	r3, [r7, #16]
 8004d86:	4293      	cmp	r3, r2
 8004d88:	dbed      	blt.n	8004d66 <HAL_UART_RxCpltCallback+0x373e>
  	 	        	      HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004d8a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004d8e:	482c      	ldr	r0, [pc, #176]	; (8004e40 <HAL_UART_RxCpltCallback+0x3818>)
 8004d90:	f000 fea7 	bl	8005ae2 <HAL_GPIO_TogglePin>
      	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004d94:	2104      	movs	r1, #4
 8004d96:	4829      	ldr	r0, [pc, #164]	; (8004e3c <HAL_UART_RxCpltCallback+0x3814>)
 8004d98:	f000 fea3 	bl	8005ae2 <HAL_GPIO_TogglePin>
      	 	        	  HAL_Delay(166);
 8004d9c:	20a6      	movs	r0, #166	; 0xa6
 8004d9e:	f000 fa69 	bl	8005274 <HAL_Delay>
      	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004da2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004da6:	4826      	ldr	r0, [pc, #152]	; (8004e40 <HAL_UART_RxCpltCallback+0x3818>)
 8004da8:	f000 fe9b 	bl	8005ae2 <HAL_GPIO_TogglePin>
      	 	        	  HAL_Delay(167);
 8004dac:	20a7      	movs	r0, #167	; 0xa7
 8004dae:	f000 fa61 	bl	8005274 <HAL_Delay>
      	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004db2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004db6:	4822      	ldr	r0, [pc, #136]	; (8004e40 <HAL_UART_RxCpltCallback+0x3818>)
 8004db8:	f000 fe93 	bl	8005ae2 <HAL_GPIO_TogglePin>
      	 	        	  HAL_Delay(166);
 8004dbc:	20a6      	movs	r0, #166	; 0xa6
 8004dbe:	f000 fa59 	bl	8005274 <HAL_Delay>
      	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004dc2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004dc6:	481e      	ldr	r0, [pc, #120]	; (8004e40 <HAL_UART_RxCpltCallback+0x3818>)
 8004dc8:	f000 fe8b 	bl	8005ae2 <HAL_GPIO_TogglePin>
      	 	        	  HAL_Delay(167);
 8004dcc:	20a7      	movs	r0, #167	; 0xa7
 8004dce:	f000 fa51 	bl	8005274 <HAL_Delay>
      	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004dd2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004dd6:	481a      	ldr	r0, [pc, #104]	; (8004e40 <HAL_UART_RxCpltCallback+0x3818>)
 8004dd8:	f000 fe83 	bl	8005ae2 <HAL_GPIO_TogglePin>
      	 	        	  HAL_Delay(166);
 8004ddc:	20a6      	movs	r0, #166	; 0xa6
 8004dde:	f000 fa49 	bl	8005274 <HAL_Delay>
      	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004de2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004de6:	4816      	ldr	r0, [pc, #88]	; (8004e40 <HAL_UART_RxCpltCallback+0x3818>)
 8004de8:	f000 fe7b 	bl	8005ae2 <HAL_GPIO_TogglePin>
      	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004dec:	2104      	movs	r1, #4
 8004dee:	4813      	ldr	r0, [pc, #76]	; (8004e3c <HAL_UART_RxCpltCallback+0x3814>)
 8004df0:	f000 fe77 	bl	8005ae2 <HAL_GPIO_TogglePin>
      	 	        	  HAL_Delay(168);
 8004df4:	20a8      	movs	r0, #168	; 0xa8
 8004df6:	f000 fa3d 	bl	8005274 <HAL_Delay>
      	 	        	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
 8004dfa:	2201      	movs	r2, #1
 8004dfc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004e00:	480f      	ldr	r0, [pc, #60]	; (8004e40 <HAL_UART_RxCpltCallback+0x3818>)
 8004e02:	f000 fe56 	bl	8005ab2 <HAL_GPIO_WritePin>
                          HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
 8004e06:	2201      	movs	r2, #1
 8004e08:	2104      	movs	r1, #4
 8004e0a:	480c      	ldr	r0, [pc, #48]	; (8004e3c <HAL_UART_RxCpltCallback+0x3814>)
 8004e0c:	f000 fe51 	bl	8005ab2 <HAL_GPIO_WritePin>
                          HAL_UART_Transmit(&huart1, uRx_Data1, uLength1, 0xffff);
 8004e10:	4b0f      	ldr	r3, [pc, #60]	; (8004e50 <HAL_UART_RxCpltCallback+0x3828>)
 8004e12:	781b      	ldrb	r3, [r3, #0]
 8004e14:	b29a      	uxth	r2, r3
 8004e16:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004e1a:	490e      	ldr	r1, [pc, #56]	; (8004e54 <HAL_UART_RxCpltCallback+0x382c>)
 8004e1c:	480e      	ldr	r0, [pc, #56]	; (8004e58 <HAL_UART_RxCpltCallback+0x3830>)
 8004e1e:	f001 faf8 	bl	8006412 <HAL_UART_Transmit>
                          uLength = 0;
 8004e22:	4b0a      	ldr	r3, [pc, #40]	; (8004e4c <HAL_UART_RxCpltCallback+0x3824>)
 8004e24:	2200      	movs	r2, #0
 8004e26:	701a      	strb	r2, [r3, #0]
                          uLength1 = 0;
 8004e28:	4b09      	ldr	r3, [pc, #36]	; (8004e50 <HAL_UART_RxCpltCallback+0x3828>)
 8004e2a:	2200      	movs	r2, #0
 8004e2c:	701a      	strb	r2, [r3, #0]
                          uLength2 = 0;
 8004e2e:	4b05      	ldr	r3, [pc, #20]	; (8004e44 <HAL_UART_RxCpltCallback+0x381c>)
 8004e30:	2200      	movs	r2, #0
 8004e32:	701a      	strb	r2, [r3, #0]
}
 8004e34:	e0f7      	b.n	8005026 <HAL_UART_RxCpltCallback+0x39fe>
 8004e36:	bf00      	nop
 8004e38:	20000c2c 	.word	0x20000c2c
 8004e3c:	40011400 	.word	0x40011400
 8004e40:	40010800 	.word	0x40010800
 8004e44:	2000142e 	.word	0x2000142e
 8004e48:	20001438 	.word	0x20001438
 8004e4c:	2000142c 	.word	0x2000142c
 8004e50:	2000142d 	.word	0x2000142d
 8004e54:	2000082c 	.word	0x2000082c
 8004e58:	2000143c 	.word	0x2000143c
 8004e5c:	20000428 	.word	0x20000428
 8004e60:	2000142f 	.word	0x2000142f
 8004e64:	2000102c 	.word	0x2000102c
 8004e68:	2000042c 	.word	0x2000042c
                    	   h=0;
 8004e6c:	4b70      	ldr	r3, [pc, #448]	; (8005030 <HAL_UART_RxCpltCallback+0x3a08>)
 8004e6e:	2200      	movs	r2, #0
 8004e70:	601a      	str	r2, [r3, #0]
                    	   for (int j=h;j<=uLength2-1;j++){
 8004e72:	4b6f      	ldr	r3, [pc, #444]	; (8005030 <HAL_UART_RxCpltCallback+0x3a08>)
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	60fb      	str	r3, [r7, #12]
 8004e78:	e0a3      	b.n	8004fc2 <HAL_UART_RxCpltCallback+0x399a>
     	 	        		 if (uRx_Data2[j]=='.'){
 8004e7a:	4a6e      	ldr	r2, [pc, #440]	; (8005034 <HAL_UART_RxCpltCallback+0x3a0c>)
 8004e7c:	68fb      	ldr	r3, [r7, #12]
 8004e7e:	4413      	add	r3, r2
 8004e80:	781b      	ldrb	r3, [r3, #0]
 8004e82:	2b2e      	cmp	r3, #46	; 0x2e
 8004e84:	d112      	bne.n	8004eac <HAL_UART_RxCpltCallback+0x3884>
          	 	            HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004e86:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004e8a:	486b      	ldr	r0, [pc, #428]	; (8005038 <HAL_UART_RxCpltCallback+0x3a10>)
 8004e8c:	f000 fe29 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	            HAL_Delay(500);
 8004e90:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004e94:	f000 f9ee 	bl	8005274 <HAL_Delay>
          	 	            HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004e98:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004e9c:	4866      	ldr	r0, [pc, #408]	; (8005038 <HAL_UART_RxCpltCallback+0x3a10>)
 8004e9e:	f000 fe20 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	            HAL_Delay(500);
 8004ea2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004ea6:	f000 f9e5 	bl	8005274 <HAL_Delay>
 8004eaa:	e087      	b.n	8004fbc <HAL_UART_RxCpltCallback+0x3994>
          	 	         else  if (uRx_Data2[j]=='-'){
 8004eac:	4a61      	ldr	r2, [pc, #388]	; (8005034 <HAL_UART_RxCpltCallback+0x3a0c>)
 8004eae:	68fb      	ldr	r3, [r7, #12]
 8004eb0:	4413      	add	r3, r2
 8004eb2:	781b      	ldrb	r3, [r3, #0]
 8004eb4:	2b2d      	cmp	r3, #45	; 0x2d
 8004eb6:	d110      	bne.n	8004eda <HAL_UART_RxCpltCallback+0x38b2>
          	 	            HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004eb8:	2104      	movs	r1, #4
 8004eba:	4860      	ldr	r0, [pc, #384]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004ebc:	f000 fe11 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	            HAL_Delay(500);
 8004ec0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004ec4:	f000 f9d6 	bl	8005274 <HAL_Delay>
          	 	            HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004ec8:	2104      	movs	r1, #4
 8004eca:	485c      	ldr	r0, [pc, #368]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004ecc:	f000 fe09 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	            HAL_Delay(500);
 8004ed0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004ed4:	f000 f9ce 	bl	8005274 <HAL_Delay>
 8004ed8:	e070      	b.n	8004fbc <HAL_UART_RxCpltCallback+0x3994>
          	 	         else if (uRx_Data2[j]=='/'){
 8004eda:	4a56      	ldr	r2, [pc, #344]	; (8005034 <HAL_UART_RxCpltCallback+0x3a0c>)
 8004edc:	68fb      	ldr	r3, [r7, #12]
 8004ede:	4413      	add	r3, r2
 8004ee0:	781b      	ldrb	r3, [r3, #0]
 8004ee2:	2b2f      	cmp	r3, #47	; 0x2f
 8004ee4:	d130      	bne.n	8004f48 <HAL_UART_RxCpltCallback+0x3920>
          	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004ee6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004eea:	4853      	ldr	r0, [pc, #332]	; (8005038 <HAL_UART_RxCpltCallback+0x3a10>)
 8004eec:	f000 fdf9 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004ef0:	2104      	movs	r1, #4
 8004ef2:	4852      	ldr	r0, [pc, #328]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004ef4:	f000 fdf5 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	        	  HAL_Delay(250);
 8004ef8:	20fa      	movs	r0, #250	; 0xfa
 8004efa:	f000 f9bb 	bl	8005274 <HAL_Delay>
          	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004efe:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004f02:	484d      	ldr	r0, [pc, #308]	; (8005038 <HAL_UART_RxCpltCallback+0x3a10>)
 8004f04:	f000 fded 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004f08:	2104      	movs	r1, #4
 8004f0a:	484c      	ldr	r0, [pc, #304]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004f0c:	f000 fde9 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	        	  HAL_Delay(250);
 8004f10:	20fa      	movs	r0, #250	; 0xfa
 8004f12:	f000 f9af 	bl	8005274 <HAL_Delay>
          	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004f16:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004f1a:	4847      	ldr	r0, [pc, #284]	; (8005038 <HAL_UART_RxCpltCallback+0x3a10>)
 8004f1c:	f000 fde1 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004f20:	2104      	movs	r1, #4
 8004f22:	4846      	ldr	r0, [pc, #280]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004f24:	f000 fddd 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	        	  HAL_Delay(250);
 8004f28:	20fa      	movs	r0, #250	; 0xfa
 8004f2a:	f000 f9a3 	bl	8005274 <HAL_Delay>
          	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004f2e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004f32:	4841      	ldr	r0, [pc, #260]	; (8005038 <HAL_UART_RxCpltCallback+0x3a10>)
 8004f34:	f000 fdd5 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004f38:	2104      	movs	r1, #4
 8004f3a:	4840      	ldr	r0, [pc, #256]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004f3c:	f000 fdd1 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	        	  HAL_Delay(250);
 8004f40:	20fa      	movs	r0, #250	; 0xfa
 8004f42:	f000 f997 	bl	8005274 <HAL_Delay>
 8004f46:	e039      	b.n	8004fbc <HAL_UART_RxCpltCallback+0x3994>
          	 	         else if (uRx_Data2[j]=='d'){
 8004f48:	4a3a      	ldr	r2, [pc, #232]	; (8005034 <HAL_UART_RxCpltCallback+0x3a0c>)
 8004f4a:	68fb      	ldr	r3, [r7, #12]
 8004f4c:	4413      	add	r3, r2
 8004f4e:	781b      	ldrb	r3, [r3, #0]
 8004f50:	2b64      	cmp	r3, #100	; 0x64
 8004f52:	d133      	bne.n	8004fbc <HAL_UART_RxCpltCallback+0x3994>
          	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004f54:	2104      	movs	r1, #4
 8004f56:	4839      	ldr	r0, [pc, #228]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004f58:	f000 fdc3 	bl	8005ae2 <HAL_GPIO_TogglePin>
          	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004f5c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004f60:	4835      	ldr	r0, [pc, #212]	; (8005038 <HAL_UART_RxCpltCallback+0x3a10>)
 8004f62:	f000 fdbe 	bl	8005ae2 <HAL_GPIO_TogglePin>
         	 	        	  HAL_Delay(166);
 8004f66:	20a6      	movs	r0, #166	; 0xa6
 8004f68:	f000 f984 	bl	8005274 <HAL_Delay>
         	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004f6c:	2104      	movs	r1, #4
 8004f6e:	4833      	ldr	r0, [pc, #204]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004f70:	f000 fdb7 	bl	8005ae2 <HAL_GPIO_TogglePin>
         	 	        	  HAL_Delay(167);
 8004f74:	20a7      	movs	r0, #167	; 0xa7
 8004f76:	f000 f97d 	bl	8005274 <HAL_Delay>
         	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004f7a:	2104      	movs	r1, #4
 8004f7c:	482f      	ldr	r0, [pc, #188]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004f7e:	f000 fdb0 	bl	8005ae2 <HAL_GPIO_TogglePin>
         	 	        	  HAL_Delay(166);
 8004f82:	20a6      	movs	r0, #166	; 0xa6
 8004f84:	f000 f976 	bl	8005274 <HAL_Delay>
         	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004f88:	2104      	movs	r1, #4
 8004f8a:	482c      	ldr	r0, [pc, #176]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004f8c:	f000 fda9 	bl	8005ae2 <HAL_GPIO_TogglePin>
         	 	        	  HAL_Delay(167);
 8004f90:	20a7      	movs	r0, #167	; 0xa7
 8004f92:	f000 f96f 	bl	8005274 <HAL_Delay>
         	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004f96:	2104      	movs	r1, #4
 8004f98:	4828      	ldr	r0, [pc, #160]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004f9a:	f000 fda2 	bl	8005ae2 <HAL_GPIO_TogglePin>
         	 	        	  HAL_Delay(166);
 8004f9e:	20a6      	movs	r0, #166	; 0xa6
 8004fa0:	f000 f968 	bl	8005274 <HAL_Delay>
         	 	        	  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 8004fa4:	2104      	movs	r1, #4
 8004fa6:	4825      	ldr	r0, [pc, #148]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004fa8:	f000 fd9b 	bl	8005ae2 <HAL_GPIO_TogglePin>
         	 	        	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8004fac:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004fb0:	4821      	ldr	r0, [pc, #132]	; (8005038 <HAL_UART_RxCpltCallback+0x3a10>)
 8004fb2:	f000 fd96 	bl	8005ae2 <HAL_GPIO_TogglePin>
         	 	        	  HAL_Delay(168);
 8004fb6:	20a8      	movs	r0, #168	; 0xa8
 8004fb8:	f000 f95c 	bl	8005274 <HAL_Delay>
                    	   for (int j=h;j<=uLength2-1;j++){
 8004fbc:	68fb      	ldr	r3, [r7, #12]
 8004fbe:	3301      	adds	r3, #1
 8004fc0:	60fb      	str	r3, [r7, #12]
 8004fc2:	4b1f      	ldr	r3, [pc, #124]	; (8005040 <HAL_UART_RxCpltCallback+0x3a18>)
 8004fc4:	781b      	ldrb	r3, [r3, #0]
 8004fc6:	461a      	mov	r2, r3
 8004fc8:	68fb      	ldr	r3, [r7, #12]
 8004fca:	4293      	cmp	r3, r2
 8004fcc:	f6ff af55 	blt.w	8004e7a <HAL_UART_RxCpltCallback+0x3852>
                       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8,GPIO_PIN_SET);
 8004fd0:	2201      	movs	r2, #1
 8004fd2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004fd6:	4818      	ldr	r0, [pc, #96]	; (8005038 <HAL_UART_RxCpltCallback+0x3a10>)
 8004fd8:	f000 fd6b 	bl	8005ab2 <HAL_GPIO_WritePin>
                       HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2,GPIO_PIN_SET);
 8004fdc:	2201      	movs	r2, #1
 8004fde:	2104      	movs	r1, #4
 8004fe0:	4816      	ldr	r0, [pc, #88]	; (800503c <HAL_UART_RxCpltCallback+0x3a14>)
 8004fe2:	f000 fd66 	bl	8005ab2 <HAL_GPIO_WritePin>
                       HAL_UART_Transmit(&huart1, uRx_Data1, uLength1, 0xffff);
 8004fe6:	4b17      	ldr	r3, [pc, #92]	; (8005044 <HAL_UART_RxCpltCallback+0x3a1c>)
 8004fe8:	781b      	ldrb	r3, [r3, #0]
 8004fea:	b29a      	uxth	r2, r3
 8004fec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004ff0:	4915      	ldr	r1, [pc, #84]	; (8005048 <HAL_UART_RxCpltCallback+0x3a20>)
 8004ff2:	4816      	ldr	r0, [pc, #88]	; (800504c <HAL_UART_RxCpltCallback+0x3a24>)
 8004ff4:	f001 fa0d 	bl	8006412 <HAL_UART_Transmit>
                       uLength = 0;
 8004ff8:	4b15      	ldr	r3, [pc, #84]	; (8005050 <HAL_UART_RxCpltCallback+0x3a28>)
 8004ffa:	2200      	movs	r2, #0
 8004ffc:	701a      	strb	r2, [r3, #0]
                       uLength1 = 0;
 8004ffe:	4b11      	ldr	r3, [pc, #68]	; (8005044 <HAL_UART_RxCpltCallback+0x3a1c>)
 8005000:	2200      	movs	r2, #0
 8005002:	701a      	strb	r2, [r3, #0]
                       uLength2 = 0;
 8005004:	4b0e      	ldr	r3, [pc, #56]	; (8005040 <HAL_UART_RxCpltCallback+0x3a18>)
 8005006:	2200      	movs	r2, #0
 8005008:	701a      	strb	r2, [r3, #0]
}
 800500a:	e00c      	b.n	8005026 <HAL_UART_RxCpltCallback+0x39fe>
                                   uRx_Data[uLength] = rxBuffer[0];
 800500c:	4b10      	ldr	r3, [pc, #64]	; (8005050 <HAL_UART_RxCpltCallback+0x3a28>)
 800500e:	781b      	ldrb	r3, [r3, #0]
 8005010:	461a      	mov	r2, r3
 8005012:	4b10      	ldr	r3, [pc, #64]	; (8005054 <HAL_UART_RxCpltCallback+0x3a2c>)
 8005014:	7819      	ldrb	r1, [r3, #0]
 8005016:	4b10      	ldr	r3, [pc, #64]	; (8005058 <HAL_UART_RxCpltCallback+0x3a30>)
 8005018:	5499      	strb	r1, [r3, r2]
                                   uLength++;
 800501a:	4b0d      	ldr	r3, [pc, #52]	; (8005050 <HAL_UART_RxCpltCallback+0x3a28>)
 800501c:	781b      	ldrb	r3, [r3, #0]
 800501e:	3301      	adds	r3, #1
 8005020:	b2da      	uxtb	r2, r3
 8005022:	4b0b      	ldr	r3, [pc, #44]	; (8005050 <HAL_UART_RxCpltCallback+0x3a28>)
 8005024:	701a      	strb	r2, [r3, #0]
}
 8005026:	bf00      	nop
 8005028:	3750      	adds	r7, #80	; 0x50
 800502a:	46bd      	mov	sp, r7
 800502c:	bd80      	pop	{r7, pc}
 800502e:	bf00      	nop
 8005030:	20001438 	.word	0x20001438
 8005034:	20000c2c 	.word	0x20000c2c
 8005038:	40010800 	.word	0x40010800
 800503c:	40011400 	.word	0x40011400
 8005040:	2000142e 	.word	0x2000142e
 8005044:	2000142d 	.word	0x2000142d
 8005048:	2000082c 	.word	0x2000082c
 800504c:	2000143c 	.word	0x2000143c
 8005050:	2000142c 	.word	0x2000142c
 8005054:	20000028 	.word	0x20000028
 8005058:	2000042c 	.word	0x2000042c

0800505c <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 800505c:	b480      	push	{r7}
 800505e:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8005060:	bf00      	nop
 8005062:	46bd      	mov	sp, r7
 8005064:	bc80      	pop	{r7}
 8005066:	4770      	bx	lr

08005068 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8005068:	b580      	push	{r7, lr}
 800506a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 800506c:	4b11      	ldr	r3, [pc, #68]	; (80050b4 <MX_USART1_UART_Init+0x4c>)
 800506e:	4a12      	ldr	r2, [pc, #72]	; (80050b8 <MX_USART1_UART_Init+0x50>)
 8005070:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8005072:	4b10      	ldr	r3, [pc, #64]	; (80050b4 <MX_USART1_UART_Init+0x4c>)
 8005074:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8005078:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800507a:	4b0e      	ldr	r3, [pc, #56]	; (80050b4 <MX_USART1_UART_Init+0x4c>)
 800507c:	2200      	movs	r2, #0
 800507e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8005080:	4b0c      	ldr	r3, [pc, #48]	; (80050b4 <MX_USART1_UART_Init+0x4c>)
 8005082:	2200      	movs	r2, #0
 8005084:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8005086:	4b0b      	ldr	r3, [pc, #44]	; (80050b4 <MX_USART1_UART_Init+0x4c>)
 8005088:	2200      	movs	r2, #0
 800508a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800508c:	4b09      	ldr	r3, [pc, #36]	; (80050b4 <MX_USART1_UART_Init+0x4c>)
 800508e:	220c      	movs	r2, #12
 8005090:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8005092:	4b08      	ldr	r3, [pc, #32]	; (80050b4 <MX_USART1_UART_Init+0x4c>)
 8005094:	2200      	movs	r2, #0
 8005096:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8005098:	4b06      	ldr	r3, [pc, #24]	; (80050b4 <MX_USART1_UART_Init+0x4c>)
 800509a:	2200      	movs	r2, #0
 800509c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800509e:	4805      	ldr	r0, [pc, #20]	; (80050b4 <MX_USART1_UART_Init+0x4c>)
 80050a0:	f001 f96a 	bl	8006378 <HAL_UART_Init>
 80050a4:	4603      	mov	r3, r0
 80050a6:	2b00      	cmp	r3, #0
 80050a8:	d001      	beq.n	80050ae <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80050aa:	f7fb f9ac 	bl	8000406 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80050ae:	bf00      	nop
 80050b0:	bd80      	pop	{r7, pc}
 80050b2:	bf00      	nop
 80050b4:	2000143c 	.word	0x2000143c
 80050b8:	40013800 	.word	0x40013800

080050bc <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80050bc:	b580      	push	{r7, lr}
 80050be:	b088      	sub	sp, #32
 80050c0:	af00      	add	r7, sp, #0
 80050c2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80050c4:	f107 0310 	add.w	r3, r7, #16
 80050c8:	2200      	movs	r2, #0
 80050ca:	601a      	str	r2, [r3, #0]
 80050cc:	605a      	str	r2, [r3, #4]
 80050ce:	609a      	str	r2, [r3, #8]
 80050d0:	60da      	str	r2, [r3, #12]
  if(uartHandle->Instance==USART1)
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	681b      	ldr	r3, [r3, #0]
 80050d6:	4a20      	ldr	r2, [pc, #128]	; (8005158 <HAL_UART_MspInit+0x9c>)
 80050d8:	4293      	cmp	r3, r2
 80050da:	d139      	bne.n	8005150 <HAL_UART_MspInit+0x94>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80050dc:	4b1f      	ldr	r3, [pc, #124]	; (800515c <HAL_UART_MspInit+0xa0>)
 80050de:	699b      	ldr	r3, [r3, #24]
 80050e0:	4a1e      	ldr	r2, [pc, #120]	; (800515c <HAL_UART_MspInit+0xa0>)
 80050e2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80050e6:	6193      	str	r3, [r2, #24]
 80050e8:	4b1c      	ldr	r3, [pc, #112]	; (800515c <HAL_UART_MspInit+0xa0>)
 80050ea:	699b      	ldr	r3, [r3, #24]
 80050ec:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80050f0:	60fb      	str	r3, [r7, #12]
 80050f2:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80050f4:	4b19      	ldr	r3, [pc, #100]	; (800515c <HAL_UART_MspInit+0xa0>)
 80050f6:	699b      	ldr	r3, [r3, #24]
 80050f8:	4a18      	ldr	r2, [pc, #96]	; (800515c <HAL_UART_MspInit+0xa0>)
 80050fa:	f043 0304 	orr.w	r3, r3, #4
 80050fe:	6193      	str	r3, [r2, #24]
 8005100:	4b16      	ldr	r3, [pc, #88]	; (800515c <HAL_UART_MspInit+0xa0>)
 8005102:	699b      	ldr	r3, [r3, #24]
 8005104:	f003 0304 	and.w	r3, r3, #4
 8005108:	60bb      	str	r3, [r7, #8]
 800510a:	68bb      	ldr	r3, [r7, #8]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800510c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005110:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8005112:	2302      	movs	r3, #2
 8005114:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8005116:	2303      	movs	r3, #3
 8005118:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800511a:	f107 0310 	add.w	r3, r7, #16
 800511e:	4619      	mov	r1, r3
 8005120:	480f      	ldr	r0, [pc, #60]	; (8005160 <HAL_UART_MspInit+0xa4>)
 8005122:	f000 fb1b 	bl	800575c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8005126:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800512a:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800512c:	2300      	movs	r3, #0
 800512e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005130:	2300      	movs	r3, #0
 8005132:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8005134:	f107 0310 	add.w	r3, r7, #16
 8005138:	4619      	mov	r1, r3
 800513a:	4809      	ldr	r0, [pc, #36]	; (8005160 <HAL_UART_MspInit+0xa4>)
 800513c:	f000 fb0e 	bl	800575c <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 1, 0);
 8005140:	2200      	movs	r2, #0
 8005142:	2101      	movs	r1, #1
 8005144:	2025      	movs	r0, #37	; 0x25
 8005146:	f000 f990 	bl	800546a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 800514a:	2025      	movs	r0, #37	; 0x25
 800514c:	f000 f9a9 	bl	80054a2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8005150:	bf00      	nop
 8005152:	3720      	adds	r7, #32
 8005154:	46bd      	mov	sp, r7
 8005156:	bd80      	pop	{r7, pc}
 8005158:	40013800 	.word	0x40013800
 800515c:	40021000 	.word	0x40021000
 8005160:	40010800 	.word	0x40010800

08005164 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8005164:	480c      	ldr	r0, [pc, #48]	; (8005198 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8005166:	490d      	ldr	r1, [pc, #52]	; (800519c <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8005168:	4a0d      	ldr	r2, [pc, #52]	; (80051a0 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800516a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800516c:	e002      	b.n	8005174 <LoopCopyDataInit>

0800516e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800516e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8005170:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8005172:	3304      	adds	r3, #4

08005174 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8005174:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8005176:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8005178:	d3f9      	bcc.n	800516e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800517a:	4a0a      	ldr	r2, [pc, #40]	; (80051a4 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 800517c:	4c0a      	ldr	r4, [pc, #40]	; (80051a8 <LoopFillZerobss+0x22>)
  movs r3, #0
 800517e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8005180:	e001      	b.n	8005186 <LoopFillZerobss>

08005182 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8005182:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8005184:	3204      	adds	r2, #4

08005186 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8005186:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8005188:	d3fb      	bcc.n	8005182 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 800518a:	f7ff ff67 	bl	800505c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800518e:	f001 fe33 	bl	8006df8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8005192:	f7fb f8e9 	bl	8000368 <main>
  bx lr
 8005196:	4770      	bx	lr
  ldr r0, =_sdata
 8005198:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800519c:	2000000c 	.word	0x2000000c
  ldr r2, =_sidata
 80051a0:	08006e88 	.word	0x08006e88
  ldr r2, =_sbss
 80051a4:	2000000c 	.word	0x2000000c
  ldr r4, =_ebss
 80051a8:	20001484 	.word	0x20001484

080051ac <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80051ac:	e7fe      	b.n	80051ac <ADC1_2_IRQHandler>
	...

080051b0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80051b0:	b580      	push	{r7, lr}
 80051b2:	af00      	add	r7, sp, #0
    defined(STM32F102x6) || defined(STM32F102xB) || \
    defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) || \
    defined(STM32F105xC) || defined(STM32F107xC)

  /* Prefetch buffer is not available on value line devices */
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80051b4:	4b08      	ldr	r3, [pc, #32]	; (80051d8 <HAL_Init+0x28>)
 80051b6:	681b      	ldr	r3, [r3, #0]
 80051b8:	4a07      	ldr	r2, [pc, #28]	; (80051d8 <HAL_Init+0x28>)
 80051ba:	f043 0310 	orr.w	r3, r3, #16
 80051be:	6013      	str	r3, [r2, #0]
#endif
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80051c0:	2003      	movs	r0, #3
 80051c2:	f000 f947 	bl	8005454 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80051c6:	2000      	movs	r0, #0
 80051c8:	f000 f808 	bl	80051dc <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80051cc:	f7fb f920 	bl	8000410 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80051d0:	2300      	movs	r3, #0
}
 80051d2:	4618      	mov	r0, r3
 80051d4:	bd80      	pop	{r7, pc}
 80051d6:	bf00      	nop
 80051d8:	40022000 	.word	0x40022000

080051dc <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80051dc:	b580      	push	{r7, lr}
 80051de:	b082      	sub	sp, #8
 80051e0:	af00      	add	r7, sp, #0
 80051e2:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80051e4:	4b12      	ldr	r3, [pc, #72]	; (8005230 <HAL_InitTick+0x54>)
 80051e6:	681a      	ldr	r2, [r3, #0]
 80051e8:	4b12      	ldr	r3, [pc, #72]	; (8005234 <HAL_InitTick+0x58>)
 80051ea:	781b      	ldrb	r3, [r3, #0]
 80051ec:	4619      	mov	r1, r3
 80051ee:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80051f2:	fbb3 f3f1 	udiv	r3, r3, r1
 80051f6:	fbb2 f3f3 	udiv	r3, r2, r3
 80051fa:	4618      	mov	r0, r3
 80051fc:	f000 f95f 	bl	80054be <HAL_SYSTICK_Config>
 8005200:	4603      	mov	r3, r0
 8005202:	2b00      	cmp	r3, #0
 8005204:	d001      	beq.n	800520a <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8005206:	2301      	movs	r3, #1
 8005208:	e00e      	b.n	8005228 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800520a:	687b      	ldr	r3, [r7, #4]
 800520c:	2b0f      	cmp	r3, #15
 800520e:	d80a      	bhi.n	8005226 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8005210:	2200      	movs	r2, #0
 8005212:	6879      	ldr	r1, [r7, #4]
 8005214:	f04f 30ff 	mov.w	r0, #4294967295
 8005218:	f000 f927 	bl	800546a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 800521c:	4a06      	ldr	r2, [pc, #24]	; (8005238 <HAL_InitTick+0x5c>)
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8005222:	2300      	movs	r3, #0
 8005224:	e000      	b.n	8005228 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8005226:	2301      	movs	r3, #1
}
 8005228:	4618      	mov	r0, r3
 800522a:	3708      	adds	r7, #8
 800522c:	46bd      	mov	sp, r7
 800522e:	bd80      	pop	{r7, pc}
 8005230:	20000000 	.word	0x20000000
 8005234:	20000008 	.word	0x20000008
 8005238:	20000004 	.word	0x20000004

0800523c <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 800523c:	b480      	push	{r7}
 800523e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8005240:	4b05      	ldr	r3, [pc, #20]	; (8005258 <HAL_IncTick+0x1c>)
 8005242:	781b      	ldrb	r3, [r3, #0]
 8005244:	461a      	mov	r2, r3
 8005246:	4b05      	ldr	r3, [pc, #20]	; (800525c <HAL_IncTick+0x20>)
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	4413      	add	r3, r2
 800524c:	4a03      	ldr	r2, [pc, #12]	; (800525c <HAL_IncTick+0x20>)
 800524e:	6013      	str	r3, [r2, #0]
}
 8005250:	bf00      	nop
 8005252:	46bd      	mov	sp, r7
 8005254:	bc80      	pop	{r7}
 8005256:	4770      	bx	lr
 8005258:	20000008 	.word	0x20000008
 800525c:	20001480 	.word	0x20001480

08005260 <HAL_GetTick>:
  * @note  This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8005260:	b480      	push	{r7}
 8005262:	af00      	add	r7, sp, #0
  return uwTick;
 8005264:	4b02      	ldr	r3, [pc, #8]	; (8005270 <HAL_GetTick+0x10>)
 8005266:	681b      	ldr	r3, [r3, #0]
}
 8005268:	4618      	mov	r0, r3
 800526a:	46bd      	mov	sp, r7
 800526c:	bc80      	pop	{r7}
 800526e:	4770      	bx	lr
 8005270:	20001480 	.word	0x20001480

08005274 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005274:	b580      	push	{r7, lr}
 8005276:	b084      	sub	sp, #16
 8005278:	af00      	add	r7, sp, #0
 800527a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 800527c:	f7ff fff0 	bl	8005260 <HAL_GetTick>
 8005280:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8005282:	687b      	ldr	r3, [r7, #4]
 8005284:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005286:	68fb      	ldr	r3, [r7, #12]
 8005288:	f1b3 3fff 	cmp.w	r3, #4294967295
 800528c:	d005      	beq.n	800529a <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 800528e:	4b0a      	ldr	r3, [pc, #40]	; (80052b8 <HAL_Delay+0x44>)
 8005290:	781b      	ldrb	r3, [r3, #0]
 8005292:	461a      	mov	r2, r3
 8005294:	68fb      	ldr	r3, [r7, #12]
 8005296:	4413      	add	r3, r2
 8005298:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 800529a:	bf00      	nop
 800529c:	f7ff ffe0 	bl	8005260 <HAL_GetTick>
 80052a0:	4602      	mov	r2, r0
 80052a2:	68bb      	ldr	r3, [r7, #8]
 80052a4:	1ad3      	subs	r3, r2, r3
 80052a6:	68fa      	ldr	r2, [r7, #12]
 80052a8:	429a      	cmp	r2, r3
 80052aa:	d8f7      	bhi.n	800529c <HAL_Delay+0x28>
  {
  }
}
 80052ac:	bf00      	nop
 80052ae:	bf00      	nop
 80052b0:	3710      	adds	r7, #16
 80052b2:	46bd      	mov	sp, r7
 80052b4:	bd80      	pop	{r7, pc}
 80052b6:	bf00      	nop
 80052b8:	20000008 	.word	0x20000008

080052bc <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80052bc:	b480      	push	{r7}
 80052be:	b085      	sub	sp, #20
 80052c0:	af00      	add	r7, sp, #0
 80052c2:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80052c4:	687b      	ldr	r3, [r7, #4]
 80052c6:	f003 0307 	and.w	r3, r3, #7
 80052ca:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80052cc:	4b0c      	ldr	r3, [pc, #48]	; (8005300 <__NVIC_SetPriorityGrouping+0x44>)
 80052ce:	68db      	ldr	r3, [r3, #12]
 80052d0:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80052d2:	68ba      	ldr	r2, [r7, #8]
 80052d4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80052d8:	4013      	ands	r3, r2
 80052da:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 80052dc:	68fb      	ldr	r3, [r7, #12]
 80052de:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80052e0:	68bb      	ldr	r3, [r7, #8]
 80052e2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80052e4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80052e8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80052ec:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80052ee:	4a04      	ldr	r2, [pc, #16]	; (8005300 <__NVIC_SetPriorityGrouping+0x44>)
 80052f0:	68bb      	ldr	r3, [r7, #8]
 80052f2:	60d3      	str	r3, [r2, #12]
}
 80052f4:	bf00      	nop
 80052f6:	3714      	adds	r7, #20
 80052f8:	46bd      	mov	sp, r7
 80052fa:	bc80      	pop	{r7}
 80052fc:	4770      	bx	lr
 80052fe:	bf00      	nop
 8005300:	e000ed00 	.word	0xe000ed00

08005304 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8005304:	b480      	push	{r7}
 8005306:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8005308:	4b04      	ldr	r3, [pc, #16]	; (800531c <__NVIC_GetPriorityGrouping+0x18>)
 800530a:	68db      	ldr	r3, [r3, #12]
 800530c:	0a1b      	lsrs	r3, r3, #8
 800530e:	f003 0307 	and.w	r3, r3, #7
}
 8005312:	4618      	mov	r0, r3
 8005314:	46bd      	mov	sp, r7
 8005316:	bc80      	pop	{r7}
 8005318:	4770      	bx	lr
 800531a:	bf00      	nop
 800531c:	e000ed00 	.word	0xe000ed00

08005320 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8005320:	b480      	push	{r7}
 8005322:	b083      	sub	sp, #12
 8005324:	af00      	add	r7, sp, #0
 8005326:	4603      	mov	r3, r0
 8005328:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800532a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800532e:	2b00      	cmp	r3, #0
 8005330:	db0b      	blt.n	800534a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005332:	79fb      	ldrb	r3, [r7, #7]
 8005334:	f003 021f 	and.w	r2, r3, #31
 8005338:	4906      	ldr	r1, [pc, #24]	; (8005354 <__NVIC_EnableIRQ+0x34>)
 800533a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800533e:	095b      	lsrs	r3, r3, #5
 8005340:	2001      	movs	r0, #1
 8005342:	fa00 f202 	lsl.w	r2, r0, r2
 8005346:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800534a:	bf00      	nop
 800534c:	370c      	adds	r7, #12
 800534e:	46bd      	mov	sp, r7
 8005350:	bc80      	pop	{r7}
 8005352:	4770      	bx	lr
 8005354:	e000e100 	.word	0xe000e100

08005358 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8005358:	b480      	push	{r7}
 800535a:	b083      	sub	sp, #12
 800535c:	af00      	add	r7, sp, #0
 800535e:	4603      	mov	r3, r0
 8005360:	6039      	str	r1, [r7, #0]
 8005362:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8005364:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005368:	2b00      	cmp	r3, #0
 800536a:	db0a      	blt.n	8005382 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800536c:	683b      	ldr	r3, [r7, #0]
 800536e:	b2da      	uxtb	r2, r3
 8005370:	490c      	ldr	r1, [pc, #48]	; (80053a4 <__NVIC_SetPriority+0x4c>)
 8005372:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005376:	0112      	lsls	r2, r2, #4
 8005378:	b2d2      	uxtb	r2, r2
 800537a:	440b      	add	r3, r1
 800537c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8005380:	e00a      	b.n	8005398 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005382:	683b      	ldr	r3, [r7, #0]
 8005384:	b2da      	uxtb	r2, r3
 8005386:	4908      	ldr	r1, [pc, #32]	; (80053a8 <__NVIC_SetPriority+0x50>)
 8005388:	79fb      	ldrb	r3, [r7, #7]
 800538a:	f003 030f 	and.w	r3, r3, #15
 800538e:	3b04      	subs	r3, #4
 8005390:	0112      	lsls	r2, r2, #4
 8005392:	b2d2      	uxtb	r2, r2
 8005394:	440b      	add	r3, r1
 8005396:	761a      	strb	r2, [r3, #24]
}
 8005398:	bf00      	nop
 800539a:	370c      	adds	r7, #12
 800539c:	46bd      	mov	sp, r7
 800539e:	bc80      	pop	{r7}
 80053a0:	4770      	bx	lr
 80053a2:	bf00      	nop
 80053a4:	e000e100 	.word	0xe000e100
 80053a8:	e000ed00 	.word	0xe000ed00

080053ac <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80053ac:	b480      	push	{r7}
 80053ae:	b089      	sub	sp, #36	; 0x24
 80053b0:	af00      	add	r7, sp, #0
 80053b2:	60f8      	str	r0, [r7, #12]
 80053b4:	60b9      	str	r1, [r7, #8]
 80053b6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80053b8:	68fb      	ldr	r3, [r7, #12]
 80053ba:	f003 0307 	and.w	r3, r3, #7
 80053be:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80053c0:	69fb      	ldr	r3, [r7, #28]
 80053c2:	f1c3 0307 	rsb	r3, r3, #7
 80053c6:	2b04      	cmp	r3, #4
 80053c8:	bf28      	it	cs
 80053ca:	2304      	movcs	r3, #4
 80053cc:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80053ce:	69fb      	ldr	r3, [r7, #28]
 80053d0:	3304      	adds	r3, #4
 80053d2:	2b06      	cmp	r3, #6
 80053d4:	d902      	bls.n	80053dc <NVIC_EncodePriority+0x30>
 80053d6:	69fb      	ldr	r3, [r7, #28]
 80053d8:	3b03      	subs	r3, #3
 80053da:	e000      	b.n	80053de <NVIC_EncodePriority+0x32>
 80053dc:	2300      	movs	r3, #0
 80053de:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80053e0:	f04f 32ff 	mov.w	r2, #4294967295
 80053e4:	69bb      	ldr	r3, [r7, #24]
 80053e6:	fa02 f303 	lsl.w	r3, r2, r3
 80053ea:	43da      	mvns	r2, r3
 80053ec:	68bb      	ldr	r3, [r7, #8]
 80053ee:	401a      	ands	r2, r3
 80053f0:	697b      	ldr	r3, [r7, #20]
 80053f2:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80053f4:	f04f 31ff 	mov.w	r1, #4294967295
 80053f8:	697b      	ldr	r3, [r7, #20]
 80053fa:	fa01 f303 	lsl.w	r3, r1, r3
 80053fe:	43d9      	mvns	r1, r3
 8005400:	687b      	ldr	r3, [r7, #4]
 8005402:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005404:	4313      	orrs	r3, r2
         );
}
 8005406:	4618      	mov	r0, r3
 8005408:	3724      	adds	r7, #36	; 0x24
 800540a:	46bd      	mov	sp, r7
 800540c:	bc80      	pop	{r7}
 800540e:	4770      	bx	lr

08005410 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8005410:	b580      	push	{r7, lr}
 8005412:	b082      	sub	sp, #8
 8005414:	af00      	add	r7, sp, #0
 8005416:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	3b01      	subs	r3, #1
 800541c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8005420:	d301      	bcc.n	8005426 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8005422:	2301      	movs	r3, #1
 8005424:	e00f      	b.n	8005446 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8005426:	4a0a      	ldr	r2, [pc, #40]	; (8005450 <SysTick_Config+0x40>)
 8005428:	687b      	ldr	r3, [r7, #4]
 800542a:	3b01      	subs	r3, #1
 800542c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800542e:	210f      	movs	r1, #15
 8005430:	f04f 30ff 	mov.w	r0, #4294967295
 8005434:	f7ff ff90 	bl	8005358 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8005438:	4b05      	ldr	r3, [pc, #20]	; (8005450 <SysTick_Config+0x40>)
 800543a:	2200      	movs	r2, #0
 800543c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800543e:	4b04      	ldr	r3, [pc, #16]	; (8005450 <SysTick_Config+0x40>)
 8005440:	2207      	movs	r2, #7
 8005442:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8005444:	2300      	movs	r3, #0
}
 8005446:	4618      	mov	r0, r3
 8005448:	3708      	adds	r7, #8
 800544a:	46bd      	mov	sp, r7
 800544c:	bd80      	pop	{r7, pc}
 800544e:	bf00      	nop
 8005450:	e000e010 	.word	0xe000e010

08005454 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8005454:	b580      	push	{r7, lr}
 8005456:	b082      	sub	sp, #8
 8005458:	af00      	add	r7, sp, #0
 800545a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800545c:	6878      	ldr	r0, [r7, #4]
 800545e:	f7ff ff2d 	bl	80052bc <__NVIC_SetPriorityGrouping>
}
 8005462:	bf00      	nop
 8005464:	3708      	adds	r7, #8
 8005466:	46bd      	mov	sp, r7
 8005468:	bd80      	pop	{r7, pc}

0800546a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800546a:	b580      	push	{r7, lr}
 800546c:	b086      	sub	sp, #24
 800546e:	af00      	add	r7, sp, #0
 8005470:	4603      	mov	r3, r0
 8005472:	60b9      	str	r1, [r7, #8]
 8005474:	607a      	str	r2, [r7, #4]
 8005476:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8005478:	2300      	movs	r3, #0
 800547a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800547c:	f7ff ff42 	bl	8005304 <__NVIC_GetPriorityGrouping>
 8005480:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8005482:	687a      	ldr	r2, [r7, #4]
 8005484:	68b9      	ldr	r1, [r7, #8]
 8005486:	6978      	ldr	r0, [r7, #20]
 8005488:	f7ff ff90 	bl	80053ac <NVIC_EncodePriority>
 800548c:	4602      	mov	r2, r0
 800548e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8005492:	4611      	mov	r1, r2
 8005494:	4618      	mov	r0, r3
 8005496:	f7ff ff5f 	bl	8005358 <__NVIC_SetPriority>
}
 800549a:	bf00      	nop
 800549c:	3718      	adds	r7, #24
 800549e:	46bd      	mov	sp, r7
 80054a0:	bd80      	pop	{r7, pc}

080054a2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f10xxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80054a2:	b580      	push	{r7, lr}
 80054a4:	b082      	sub	sp, #8
 80054a6:	af00      	add	r7, sp, #0
 80054a8:	4603      	mov	r3, r0
 80054aa:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80054ac:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80054b0:	4618      	mov	r0, r3
 80054b2:	f7ff ff35 	bl	8005320 <__NVIC_EnableIRQ>
}
 80054b6:	bf00      	nop
 80054b8:	3708      	adds	r7, #8
 80054ba:	46bd      	mov	sp, r7
 80054bc:	bd80      	pop	{r7, pc}

080054be <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80054be:	b580      	push	{r7, lr}
 80054c0:	b082      	sub	sp, #8
 80054c2:	af00      	add	r7, sp, #0
 80054c4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80054c6:	6878      	ldr	r0, [r7, #4]
 80054c8:	f7ff ffa2 	bl	8005410 <SysTick_Config>
 80054cc:	4603      	mov	r3, r0
}
 80054ce:	4618      	mov	r0, r3
 80054d0:	3708      	adds	r7, #8
 80054d2:	46bd      	mov	sp, r7
 80054d4:	bd80      	pop	{r7, pc}

080054d6 <HAL_DMA_Abort>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 80054d6:	b480      	push	{r7}
 80054d8:	b085      	sub	sp, #20
 80054da:	af00      	add	r7, sp, #0
 80054dc:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80054de:	2300      	movs	r3, #0
 80054e0:	73fb      	strb	r3, [r7, #15]
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80054e8:	2b02      	cmp	r3, #2
 80054ea:	d008      	beq.n	80054fe <HAL_DMA_Abort+0x28>
  {
    /* no transfer ongoing */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80054ec:	687b      	ldr	r3, [r7, #4]
 80054ee:	2204      	movs	r2, #4
 80054f0:	639a      	str	r2, [r3, #56]	; 0x38
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	2200      	movs	r2, #0
 80054f6:	f883 2020 	strb.w	r2, [r3, #32]
    
    return HAL_ERROR;
 80054fa:	2301      	movs	r3, #1
 80054fc:	e020      	b.n	8005540 <HAL_DMA_Abort+0x6a>
  }
  else

  {
    /* Disable DMA IT */
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 80054fe:	687b      	ldr	r3, [r7, #4]
 8005500:	681b      	ldr	r3, [r3, #0]
 8005502:	681a      	ldr	r2, [r3, #0]
 8005504:	687b      	ldr	r3, [r7, #4]
 8005506:	681b      	ldr	r3, [r3, #0]
 8005508:	f022 020e 	bic.w	r2, r2, #14
 800550c:	601a      	str	r2, [r3, #0]
      
    /* Disable the channel */
    __HAL_DMA_DISABLE(hdma);
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	681b      	ldr	r3, [r3, #0]
 8005512:	681a      	ldr	r2, [r3, #0]
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	681b      	ldr	r3, [r3, #0]
 8005518:	f022 0201 	bic.w	r2, r2, #1
 800551c:	601a      	str	r2, [r3, #0]
      
    /* Clear all flags */
    hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << hdma->ChannelIndex);
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005522:	687b      	ldr	r3, [r7, #4]
 8005524:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005526:	2101      	movs	r1, #1
 8005528:	fa01 f202 	lsl.w	r2, r1, r2
 800552c:	605a      	str	r2, [r3, #4]
  }
  /* Change the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	2201      	movs	r2, #1
 8005532:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21

  /* Process Unlocked */
  __HAL_UNLOCK(hdma);      
 8005536:	687b      	ldr	r3, [r7, #4]
 8005538:	2200      	movs	r2, #0
 800553a:	f883 2020 	strb.w	r2, [r3, #32]
  
  return status; 
 800553e:	7bfb      	ldrb	r3, [r7, #15]
}
 8005540:	4618      	mov	r0, r3
 8005542:	3714      	adds	r7, #20
 8005544:	46bd      	mov	sp, r7
 8005546:	bc80      	pop	{r7}
 8005548:	4770      	bx	lr
	...

0800554c <HAL_DMA_Abort_IT>:
  * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{  
 800554c:	b580      	push	{r7, lr}
 800554e:	b084      	sub	sp, #16
 8005550:	af00      	add	r7, sp, #0
 8005552:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8005554:	2300      	movs	r3, #0
 8005556:	73fb      	strb	r3, [r7, #15]
  
  if(HAL_DMA_STATE_BUSY != hdma->State)
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800555e:	2b02      	cmp	r3, #2
 8005560:	d005      	beq.n	800556e <HAL_DMA_Abort_IT+0x22>
  {
    /* no transfer ongoing */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8005562:	687b      	ldr	r3, [r7, #4]
 8005564:	2204      	movs	r2, #4
 8005566:	639a      	str	r2, [r3, #56]	; 0x38
        
    status = HAL_ERROR;
 8005568:	2301      	movs	r3, #1
 800556a:	73fb      	strb	r3, [r7, #15]
 800556c:	e0d6      	b.n	800571c <HAL_DMA_Abort_IT+0x1d0>
  }
  else
  { 
    /* Disable DMA IT */
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	681b      	ldr	r3, [r3, #0]
 8005572:	681a      	ldr	r2, [r3, #0]
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	681b      	ldr	r3, [r3, #0]
 8005578:	f022 020e 	bic.w	r2, r2, #14
 800557c:	601a      	str	r2, [r3, #0]

    /* Disable the channel */
    __HAL_DMA_DISABLE(hdma);
 800557e:	687b      	ldr	r3, [r7, #4]
 8005580:	681b      	ldr	r3, [r3, #0]
 8005582:	681a      	ldr	r2, [r3, #0]
 8005584:	687b      	ldr	r3, [r7, #4]
 8005586:	681b      	ldr	r3, [r3, #0]
 8005588:	f022 0201 	bic.w	r2, r2, #1
 800558c:	601a      	str	r2, [r3, #0]

    /* Clear all flags */
    __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_GI_FLAG_INDEX(hdma));
 800558e:	687b      	ldr	r3, [r7, #4]
 8005590:	681b      	ldr	r3, [r3, #0]
 8005592:	461a      	mov	r2, r3
 8005594:	4b64      	ldr	r3, [pc, #400]	; (8005728 <HAL_DMA_Abort_IT+0x1dc>)
 8005596:	429a      	cmp	r2, r3
 8005598:	d958      	bls.n	800564c <HAL_DMA_Abort_IT+0x100>
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	681b      	ldr	r3, [r3, #0]
 800559e:	4a63      	ldr	r2, [pc, #396]	; (800572c <HAL_DMA_Abort_IT+0x1e0>)
 80055a0:	4293      	cmp	r3, r2
 80055a2:	d04f      	beq.n	8005644 <HAL_DMA_Abort_IT+0xf8>
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	681b      	ldr	r3, [r3, #0]
 80055a8:	4a61      	ldr	r2, [pc, #388]	; (8005730 <HAL_DMA_Abort_IT+0x1e4>)
 80055aa:	4293      	cmp	r3, r2
 80055ac:	d048      	beq.n	8005640 <HAL_DMA_Abort_IT+0xf4>
 80055ae:	687b      	ldr	r3, [r7, #4]
 80055b0:	681b      	ldr	r3, [r3, #0]
 80055b2:	4a60      	ldr	r2, [pc, #384]	; (8005734 <HAL_DMA_Abort_IT+0x1e8>)
 80055b4:	4293      	cmp	r3, r2
 80055b6:	d040      	beq.n	800563a <HAL_DMA_Abort_IT+0xee>
 80055b8:	687b      	ldr	r3, [r7, #4]
 80055ba:	681b      	ldr	r3, [r3, #0]
 80055bc:	4a5e      	ldr	r2, [pc, #376]	; (8005738 <HAL_DMA_Abort_IT+0x1ec>)
 80055be:	4293      	cmp	r3, r2
 80055c0:	d038      	beq.n	8005634 <HAL_DMA_Abort_IT+0xe8>
 80055c2:	687b      	ldr	r3, [r7, #4]
 80055c4:	681b      	ldr	r3, [r3, #0]
 80055c6:	4a5d      	ldr	r2, [pc, #372]	; (800573c <HAL_DMA_Abort_IT+0x1f0>)
 80055c8:	4293      	cmp	r3, r2
 80055ca:	d030      	beq.n	800562e <HAL_DMA_Abort_IT+0xe2>
 80055cc:	687b      	ldr	r3, [r7, #4]
 80055ce:	681b      	ldr	r3, [r3, #0]
 80055d0:	4a5b      	ldr	r2, [pc, #364]	; (8005740 <HAL_DMA_Abort_IT+0x1f4>)
 80055d2:	4293      	cmp	r3, r2
 80055d4:	d028      	beq.n	8005628 <HAL_DMA_Abort_IT+0xdc>
 80055d6:	687b      	ldr	r3, [r7, #4]
 80055d8:	681b      	ldr	r3, [r3, #0]
 80055da:	4a53      	ldr	r2, [pc, #332]	; (8005728 <HAL_DMA_Abort_IT+0x1dc>)
 80055dc:	4293      	cmp	r3, r2
 80055de:	d020      	beq.n	8005622 <HAL_DMA_Abort_IT+0xd6>
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	681b      	ldr	r3, [r3, #0]
 80055e4:	4a57      	ldr	r2, [pc, #348]	; (8005744 <HAL_DMA_Abort_IT+0x1f8>)
 80055e6:	4293      	cmp	r3, r2
 80055e8:	d019      	beq.n	800561e <HAL_DMA_Abort_IT+0xd2>
 80055ea:	687b      	ldr	r3, [r7, #4]
 80055ec:	681b      	ldr	r3, [r3, #0]
 80055ee:	4a56      	ldr	r2, [pc, #344]	; (8005748 <HAL_DMA_Abort_IT+0x1fc>)
 80055f0:	4293      	cmp	r3, r2
 80055f2:	d012      	beq.n	800561a <HAL_DMA_Abort_IT+0xce>
 80055f4:	687b      	ldr	r3, [r7, #4]
 80055f6:	681b      	ldr	r3, [r3, #0]
 80055f8:	4a54      	ldr	r2, [pc, #336]	; (800574c <HAL_DMA_Abort_IT+0x200>)
 80055fa:	4293      	cmp	r3, r2
 80055fc:	d00a      	beq.n	8005614 <HAL_DMA_Abort_IT+0xc8>
 80055fe:	687b      	ldr	r3, [r7, #4]
 8005600:	681b      	ldr	r3, [r3, #0]
 8005602:	4a53      	ldr	r2, [pc, #332]	; (8005750 <HAL_DMA_Abort_IT+0x204>)
 8005604:	4293      	cmp	r3, r2
 8005606:	d102      	bne.n	800560e <HAL_DMA_Abort_IT+0xc2>
 8005608:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800560c:	e01b      	b.n	8005646 <HAL_DMA_Abort_IT+0xfa>
 800560e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8005612:	e018      	b.n	8005646 <HAL_DMA_Abort_IT+0xfa>
 8005614:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005618:	e015      	b.n	8005646 <HAL_DMA_Abort_IT+0xfa>
 800561a:	2310      	movs	r3, #16
 800561c:	e013      	b.n	8005646 <HAL_DMA_Abort_IT+0xfa>
 800561e:	2301      	movs	r3, #1
 8005620:	e011      	b.n	8005646 <HAL_DMA_Abort_IT+0xfa>
 8005622:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005626:	e00e      	b.n	8005646 <HAL_DMA_Abort_IT+0xfa>
 8005628:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800562c:	e00b      	b.n	8005646 <HAL_DMA_Abort_IT+0xfa>
 800562e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8005632:	e008      	b.n	8005646 <HAL_DMA_Abort_IT+0xfa>
 8005634:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005638:	e005      	b.n	8005646 <HAL_DMA_Abort_IT+0xfa>
 800563a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800563e:	e002      	b.n	8005646 <HAL_DMA_Abort_IT+0xfa>
 8005640:	2310      	movs	r3, #16
 8005642:	e000      	b.n	8005646 <HAL_DMA_Abort_IT+0xfa>
 8005644:	2301      	movs	r3, #1
 8005646:	4a43      	ldr	r2, [pc, #268]	; (8005754 <HAL_DMA_Abort_IT+0x208>)
 8005648:	6053      	str	r3, [r2, #4]
 800564a:	e057      	b.n	80056fc <HAL_DMA_Abort_IT+0x1b0>
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	681b      	ldr	r3, [r3, #0]
 8005650:	4a36      	ldr	r2, [pc, #216]	; (800572c <HAL_DMA_Abort_IT+0x1e0>)
 8005652:	4293      	cmp	r3, r2
 8005654:	d04f      	beq.n	80056f6 <HAL_DMA_Abort_IT+0x1aa>
 8005656:	687b      	ldr	r3, [r7, #4]
 8005658:	681b      	ldr	r3, [r3, #0]
 800565a:	4a35      	ldr	r2, [pc, #212]	; (8005730 <HAL_DMA_Abort_IT+0x1e4>)
 800565c:	4293      	cmp	r3, r2
 800565e:	d048      	beq.n	80056f2 <HAL_DMA_Abort_IT+0x1a6>
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	681b      	ldr	r3, [r3, #0]
 8005664:	4a33      	ldr	r2, [pc, #204]	; (8005734 <HAL_DMA_Abort_IT+0x1e8>)
 8005666:	4293      	cmp	r3, r2
 8005668:	d040      	beq.n	80056ec <HAL_DMA_Abort_IT+0x1a0>
 800566a:	687b      	ldr	r3, [r7, #4]
 800566c:	681b      	ldr	r3, [r3, #0]
 800566e:	4a32      	ldr	r2, [pc, #200]	; (8005738 <HAL_DMA_Abort_IT+0x1ec>)
 8005670:	4293      	cmp	r3, r2
 8005672:	d038      	beq.n	80056e6 <HAL_DMA_Abort_IT+0x19a>
 8005674:	687b      	ldr	r3, [r7, #4]
 8005676:	681b      	ldr	r3, [r3, #0]
 8005678:	4a30      	ldr	r2, [pc, #192]	; (800573c <HAL_DMA_Abort_IT+0x1f0>)
 800567a:	4293      	cmp	r3, r2
 800567c:	d030      	beq.n	80056e0 <HAL_DMA_Abort_IT+0x194>
 800567e:	687b      	ldr	r3, [r7, #4]
 8005680:	681b      	ldr	r3, [r3, #0]
 8005682:	4a2f      	ldr	r2, [pc, #188]	; (8005740 <HAL_DMA_Abort_IT+0x1f4>)
 8005684:	4293      	cmp	r3, r2
 8005686:	d028      	beq.n	80056da <HAL_DMA_Abort_IT+0x18e>
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	681b      	ldr	r3, [r3, #0]
 800568c:	4a26      	ldr	r2, [pc, #152]	; (8005728 <HAL_DMA_Abort_IT+0x1dc>)
 800568e:	4293      	cmp	r3, r2
 8005690:	d020      	beq.n	80056d4 <HAL_DMA_Abort_IT+0x188>
 8005692:	687b      	ldr	r3, [r7, #4]
 8005694:	681b      	ldr	r3, [r3, #0]
 8005696:	4a2b      	ldr	r2, [pc, #172]	; (8005744 <HAL_DMA_Abort_IT+0x1f8>)
 8005698:	4293      	cmp	r3, r2
 800569a:	d019      	beq.n	80056d0 <HAL_DMA_Abort_IT+0x184>
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	681b      	ldr	r3, [r3, #0]
 80056a0:	4a29      	ldr	r2, [pc, #164]	; (8005748 <HAL_DMA_Abort_IT+0x1fc>)
 80056a2:	4293      	cmp	r3, r2
 80056a4:	d012      	beq.n	80056cc <HAL_DMA_Abort_IT+0x180>
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	681b      	ldr	r3, [r3, #0]
 80056aa:	4a28      	ldr	r2, [pc, #160]	; (800574c <HAL_DMA_Abort_IT+0x200>)
 80056ac:	4293      	cmp	r3, r2
 80056ae:	d00a      	beq.n	80056c6 <HAL_DMA_Abort_IT+0x17a>
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	681b      	ldr	r3, [r3, #0]
 80056b4:	4a26      	ldr	r2, [pc, #152]	; (8005750 <HAL_DMA_Abort_IT+0x204>)
 80056b6:	4293      	cmp	r3, r2
 80056b8:	d102      	bne.n	80056c0 <HAL_DMA_Abort_IT+0x174>
 80056ba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80056be:	e01b      	b.n	80056f8 <HAL_DMA_Abort_IT+0x1ac>
 80056c0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80056c4:	e018      	b.n	80056f8 <HAL_DMA_Abort_IT+0x1ac>
 80056c6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80056ca:	e015      	b.n	80056f8 <HAL_DMA_Abort_IT+0x1ac>
 80056cc:	2310      	movs	r3, #16
 80056ce:	e013      	b.n	80056f8 <HAL_DMA_Abort_IT+0x1ac>
 80056d0:	2301      	movs	r3, #1
 80056d2:	e011      	b.n	80056f8 <HAL_DMA_Abort_IT+0x1ac>
 80056d4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80056d8:	e00e      	b.n	80056f8 <HAL_DMA_Abort_IT+0x1ac>
 80056da:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 80056de:	e00b      	b.n	80056f8 <HAL_DMA_Abort_IT+0x1ac>
 80056e0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80056e4:	e008      	b.n	80056f8 <HAL_DMA_Abort_IT+0x1ac>
 80056e6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80056ea:	e005      	b.n	80056f8 <HAL_DMA_Abort_IT+0x1ac>
 80056ec:	f44f 7380 	mov.w	r3, #256	; 0x100
 80056f0:	e002      	b.n	80056f8 <HAL_DMA_Abort_IT+0x1ac>
 80056f2:	2310      	movs	r3, #16
 80056f4:	e000      	b.n	80056f8 <HAL_DMA_Abort_IT+0x1ac>
 80056f6:	2301      	movs	r3, #1
 80056f8:	4a17      	ldr	r2, [pc, #92]	; (8005758 <HAL_DMA_Abort_IT+0x20c>)
 80056fa:	6053      	str	r3, [r2, #4]

    /* Change the DMA state */
    hdma->State = HAL_DMA_STATE_READY;
 80056fc:	687b      	ldr	r3, [r7, #4]
 80056fe:	2201      	movs	r2, #1
 8005700:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	2200      	movs	r2, #0
 8005708:	f883 2020 	strb.w	r2, [r3, #32]

    /* Call User Abort callback */
    if(hdma->XferAbortCallback != NULL)
 800570c:	687b      	ldr	r3, [r7, #4]
 800570e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005710:	2b00      	cmp	r3, #0
 8005712:	d003      	beq.n	800571c <HAL_DMA_Abort_IT+0x1d0>
    {
      hdma->XferAbortCallback(hdma);
 8005714:	687b      	ldr	r3, [r7, #4]
 8005716:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005718:	6878      	ldr	r0, [r7, #4]
 800571a:	4798      	blx	r3
    } 
  }
  return status;
 800571c:	7bfb      	ldrb	r3, [r7, #15]
}
 800571e:	4618      	mov	r0, r3
 8005720:	3710      	adds	r7, #16
 8005722:	46bd      	mov	sp, r7
 8005724:	bd80      	pop	{r7, pc}
 8005726:	bf00      	nop
 8005728:	40020080 	.word	0x40020080
 800572c:	40020008 	.word	0x40020008
 8005730:	4002001c 	.word	0x4002001c
 8005734:	40020030 	.word	0x40020030
 8005738:	40020044 	.word	0x40020044
 800573c:	40020058 	.word	0x40020058
 8005740:	4002006c 	.word	0x4002006c
 8005744:	40020408 	.word	0x40020408
 8005748:	4002041c 	.word	0x4002041c
 800574c:	40020430 	.word	0x40020430
 8005750:	40020444 	.word	0x40020444
 8005754:	40020400 	.word	0x40020400
 8005758:	40020000 	.word	0x40020000

0800575c <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800575c:	b480      	push	{r7}
 800575e:	b08b      	sub	sp, #44	; 0x2c
 8005760:	af00      	add	r7, sp, #0
 8005762:	6078      	str	r0, [r7, #4]
 8005764:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8005766:	2300      	movs	r3, #0
 8005768:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t ioposition;
  uint32_t iocurrent;
  uint32_t temp;
  uint32_t config = 0x00u;
 800576a:	2300      	movs	r3, #0
 800576c:	623b      	str	r3, [r7, #32]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800576e:	e179      	b.n	8005a64 <HAL_GPIO_Init+0x308>
  {
    /* Get the IO position */
    ioposition = (0x01uL << position);
 8005770:	2201      	movs	r2, #1
 8005772:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005774:	fa02 f303 	lsl.w	r3, r2, r3
 8005778:	61fb      	str	r3, [r7, #28]

    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800577a:	683b      	ldr	r3, [r7, #0]
 800577c:	681b      	ldr	r3, [r3, #0]
 800577e:	69fa      	ldr	r2, [r7, #28]
 8005780:	4013      	ands	r3, r2
 8005782:	61bb      	str	r3, [r7, #24]

    if (iocurrent == ioposition)
 8005784:	69ba      	ldr	r2, [r7, #24]
 8005786:	69fb      	ldr	r3, [r7, #28]
 8005788:	429a      	cmp	r2, r3
 800578a:	f040 8168 	bne.w	8005a5e <HAL_GPIO_Init+0x302>
    {
      /* Check the Alternate function parameters */
      assert_param(IS_GPIO_AF_INSTANCE(GPIOx));

      /* Based on the required mode, filling config variable with MODEy[1:0] and CNFy[3:2] corresponding bits */
      switch (GPIO_Init->Mode)
 800578e:	683b      	ldr	r3, [r7, #0]
 8005790:	685b      	ldr	r3, [r3, #4]
 8005792:	4a96      	ldr	r2, [pc, #600]	; (80059ec <HAL_GPIO_Init+0x290>)
 8005794:	4293      	cmp	r3, r2
 8005796:	d05e      	beq.n	8005856 <HAL_GPIO_Init+0xfa>
 8005798:	4a94      	ldr	r2, [pc, #592]	; (80059ec <HAL_GPIO_Init+0x290>)
 800579a:	4293      	cmp	r3, r2
 800579c:	d875      	bhi.n	800588a <HAL_GPIO_Init+0x12e>
 800579e:	4a94      	ldr	r2, [pc, #592]	; (80059f0 <HAL_GPIO_Init+0x294>)
 80057a0:	4293      	cmp	r3, r2
 80057a2:	d058      	beq.n	8005856 <HAL_GPIO_Init+0xfa>
 80057a4:	4a92      	ldr	r2, [pc, #584]	; (80059f0 <HAL_GPIO_Init+0x294>)
 80057a6:	4293      	cmp	r3, r2
 80057a8:	d86f      	bhi.n	800588a <HAL_GPIO_Init+0x12e>
 80057aa:	4a92      	ldr	r2, [pc, #584]	; (80059f4 <HAL_GPIO_Init+0x298>)
 80057ac:	4293      	cmp	r3, r2
 80057ae:	d052      	beq.n	8005856 <HAL_GPIO_Init+0xfa>
 80057b0:	4a90      	ldr	r2, [pc, #576]	; (80059f4 <HAL_GPIO_Init+0x298>)
 80057b2:	4293      	cmp	r3, r2
 80057b4:	d869      	bhi.n	800588a <HAL_GPIO_Init+0x12e>
 80057b6:	4a90      	ldr	r2, [pc, #576]	; (80059f8 <HAL_GPIO_Init+0x29c>)
 80057b8:	4293      	cmp	r3, r2
 80057ba:	d04c      	beq.n	8005856 <HAL_GPIO_Init+0xfa>
 80057bc:	4a8e      	ldr	r2, [pc, #568]	; (80059f8 <HAL_GPIO_Init+0x29c>)
 80057be:	4293      	cmp	r3, r2
 80057c0:	d863      	bhi.n	800588a <HAL_GPIO_Init+0x12e>
 80057c2:	4a8e      	ldr	r2, [pc, #568]	; (80059fc <HAL_GPIO_Init+0x2a0>)
 80057c4:	4293      	cmp	r3, r2
 80057c6:	d046      	beq.n	8005856 <HAL_GPIO_Init+0xfa>
 80057c8:	4a8c      	ldr	r2, [pc, #560]	; (80059fc <HAL_GPIO_Init+0x2a0>)
 80057ca:	4293      	cmp	r3, r2
 80057cc:	d85d      	bhi.n	800588a <HAL_GPIO_Init+0x12e>
 80057ce:	2b12      	cmp	r3, #18
 80057d0:	d82a      	bhi.n	8005828 <HAL_GPIO_Init+0xcc>
 80057d2:	2b12      	cmp	r3, #18
 80057d4:	d859      	bhi.n	800588a <HAL_GPIO_Init+0x12e>
 80057d6:	a201      	add	r2, pc, #4	; (adr r2, 80057dc <HAL_GPIO_Init+0x80>)
 80057d8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80057dc:	08005857 	.word	0x08005857
 80057e0:	08005831 	.word	0x08005831
 80057e4:	08005843 	.word	0x08005843
 80057e8:	08005885 	.word	0x08005885
 80057ec:	0800588b 	.word	0x0800588b
 80057f0:	0800588b 	.word	0x0800588b
 80057f4:	0800588b 	.word	0x0800588b
 80057f8:	0800588b 	.word	0x0800588b
 80057fc:	0800588b 	.word	0x0800588b
 8005800:	0800588b 	.word	0x0800588b
 8005804:	0800588b 	.word	0x0800588b
 8005808:	0800588b 	.word	0x0800588b
 800580c:	0800588b 	.word	0x0800588b
 8005810:	0800588b 	.word	0x0800588b
 8005814:	0800588b 	.word	0x0800588b
 8005818:	0800588b 	.word	0x0800588b
 800581c:	0800588b 	.word	0x0800588b
 8005820:	08005839 	.word	0x08005839
 8005824:	0800584d 	.word	0x0800584d
 8005828:	4a75      	ldr	r2, [pc, #468]	; (8005a00 <HAL_GPIO_Init+0x2a4>)
 800582a:	4293      	cmp	r3, r2
 800582c:	d013      	beq.n	8005856 <HAL_GPIO_Init+0xfa>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
          break;

        /* Parameters are checked with assert_param */
        default:
          break;
 800582e:	e02c      	b.n	800588a <HAL_GPIO_Init+0x12e>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_PP;
 8005830:	683b      	ldr	r3, [r7, #0]
 8005832:	68db      	ldr	r3, [r3, #12]
 8005834:	623b      	str	r3, [r7, #32]
          break;
 8005836:	e029      	b.n	800588c <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_OD;
 8005838:	683b      	ldr	r3, [r7, #0]
 800583a:	68db      	ldr	r3, [r3, #12]
 800583c:	3304      	adds	r3, #4
 800583e:	623b      	str	r3, [r7, #32]
          break;
 8005840:	e024      	b.n	800588c <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_PP;
 8005842:	683b      	ldr	r3, [r7, #0]
 8005844:	68db      	ldr	r3, [r3, #12]
 8005846:	3308      	adds	r3, #8
 8005848:	623b      	str	r3, [r7, #32]
          break;
 800584a:	e01f      	b.n	800588c <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_OD;
 800584c:	683b      	ldr	r3, [r7, #0]
 800584e:	68db      	ldr	r3, [r3, #12]
 8005850:	330c      	adds	r3, #12
 8005852:	623b      	str	r3, [r7, #32]
          break;
 8005854:	e01a      	b.n	800588c <HAL_GPIO_Init+0x130>
          if (GPIO_Init->Pull == GPIO_NOPULL)
 8005856:	683b      	ldr	r3, [r7, #0]
 8005858:	689b      	ldr	r3, [r3, #8]
 800585a:	2b00      	cmp	r3, #0
 800585c:	d102      	bne.n	8005864 <HAL_GPIO_Init+0x108>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_FLOATING;
 800585e:	2304      	movs	r3, #4
 8005860:	623b      	str	r3, [r7, #32]
          break;
 8005862:	e013      	b.n	800588c <HAL_GPIO_Init+0x130>
          else if (GPIO_Init->Pull == GPIO_PULLUP)
 8005864:	683b      	ldr	r3, [r7, #0]
 8005866:	689b      	ldr	r3, [r3, #8]
 8005868:	2b01      	cmp	r3, #1
 800586a:	d105      	bne.n	8005878 <HAL_GPIO_Init+0x11c>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 800586c:	2308      	movs	r3, #8
 800586e:	623b      	str	r3, [r7, #32]
            GPIOx->BSRR = ioposition;
 8005870:	687b      	ldr	r3, [r7, #4]
 8005872:	69fa      	ldr	r2, [r7, #28]
 8005874:	611a      	str	r2, [r3, #16]
          break;
 8005876:	e009      	b.n	800588c <HAL_GPIO_Init+0x130>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 8005878:	2308      	movs	r3, #8
 800587a:	623b      	str	r3, [r7, #32]
            GPIOx->BRR = ioposition;
 800587c:	687b      	ldr	r3, [r7, #4]
 800587e:	69fa      	ldr	r2, [r7, #28]
 8005880:	615a      	str	r2, [r3, #20]
          break;
 8005882:	e003      	b.n	800588c <HAL_GPIO_Init+0x130>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
 8005884:	2300      	movs	r3, #0
 8005886:	623b      	str	r3, [r7, #32]
          break;
 8005888:	e000      	b.n	800588c <HAL_GPIO_Init+0x130>
          break;
 800588a:	bf00      	nop
      }

      /* Check if the current bit belongs to first half or last half of the pin count number
       in order to address CRH or CRL register*/
      configregister = (iocurrent < GPIO_PIN_8) ? &GPIOx->CRL     : &GPIOx->CRH;
 800588c:	69bb      	ldr	r3, [r7, #24]
 800588e:	2bff      	cmp	r3, #255	; 0xff
 8005890:	d801      	bhi.n	8005896 <HAL_GPIO_Init+0x13a>
 8005892:	687b      	ldr	r3, [r7, #4]
 8005894:	e001      	b.n	800589a <HAL_GPIO_Init+0x13e>
 8005896:	687b      	ldr	r3, [r7, #4]
 8005898:	3304      	adds	r3, #4
 800589a:	617b      	str	r3, [r7, #20]
      registeroffset = (iocurrent < GPIO_PIN_8) ? (position << 2u) : ((position - 8u) << 2u);
 800589c:	69bb      	ldr	r3, [r7, #24]
 800589e:	2bff      	cmp	r3, #255	; 0xff
 80058a0:	d802      	bhi.n	80058a8 <HAL_GPIO_Init+0x14c>
 80058a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80058a4:	009b      	lsls	r3, r3, #2
 80058a6:	e002      	b.n	80058ae <HAL_GPIO_Init+0x152>
 80058a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80058aa:	3b08      	subs	r3, #8
 80058ac:	009b      	lsls	r3, r3, #2
 80058ae:	613b      	str	r3, [r7, #16]

      /* Apply the new configuration of the pin to the register */
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 80058b0:	697b      	ldr	r3, [r7, #20]
 80058b2:	681a      	ldr	r2, [r3, #0]
 80058b4:	210f      	movs	r1, #15
 80058b6:	693b      	ldr	r3, [r7, #16]
 80058b8:	fa01 f303 	lsl.w	r3, r1, r3
 80058bc:	43db      	mvns	r3, r3
 80058be:	401a      	ands	r2, r3
 80058c0:	6a39      	ldr	r1, [r7, #32]
 80058c2:	693b      	ldr	r3, [r7, #16]
 80058c4:	fa01 f303 	lsl.w	r3, r1, r3
 80058c8:	431a      	orrs	r2, r3
 80058ca:	697b      	ldr	r3, [r7, #20]
 80058cc:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80058ce:	683b      	ldr	r3, [r7, #0]
 80058d0:	685b      	ldr	r3, [r3, #4]
 80058d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80058d6:	2b00      	cmp	r3, #0
 80058d8:	f000 80c1 	beq.w	8005a5e <HAL_GPIO_Init+0x302>
      {
        /* Enable AFIO Clock */
        __HAL_RCC_AFIO_CLK_ENABLE();
 80058dc:	4b49      	ldr	r3, [pc, #292]	; (8005a04 <HAL_GPIO_Init+0x2a8>)
 80058de:	699b      	ldr	r3, [r3, #24]
 80058e0:	4a48      	ldr	r2, [pc, #288]	; (8005a04 <HAL_GPIO_Init+0x2a8>)
 80058e2:	f043 0301 	orr.w	r3, r3, #1
 80058e6:	6193      	str	r3, [r2, #24]
 80058e8:	4b46      	ldr	r3, [pc, #280]	; (8005a04 <HAL_GPIO_Init+0x2a8>)
 80058ea:	699b      	ldr	r3, [r3, #24]
 80058ec:	f003 0301 	and.w	r3, r3, #1
 80058f0:	60bb      	str	r3, [r7, #8]
 80058f2:	68bb      	ldr	r3, [r7, #8]
        temp = AFIO->EXTICR[position >> 2u];
 80058f4:	4a44      	ldr	r2, [pc, #272]	; (8005a08 <HAL_GPIO_Init+0x2ac>)
 80058f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80058f8:	089b      	lsrs	r3, r3, #2
 80058fa:	3302      	adds	r3, #2
 80058fc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005900:	60fb      	str	r3, [r7, #12]
        CLEAR_BIT(temp, (0x0Fu) << (4u * (position & 0x03u)));
 8005902:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005904:	f003 0303 	and.w	r3, r3, #3
 8005908:	009b      	lsls	r3, r3, #2
 800590a:	220f      	movs	r2, #15
 800590c:	fa02 f303 	lsl.w	r3, r2, r3
 8005910:	43db      	mvns	r3, r3
 8005912:	68fa      	ldr	r2, [r7, #12]
 8005914:	4013      	ands	r3, r2
 8005916:	60fb      	str	r3, [r7, #12]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4u * (position & 0x03u)));
 8005918:	687b      	ldr	r3, [r7, #4]
 800591a:	4a3c      	ldr	r2, [pc, #240]	; (8005a0c <HAL_GPIO_Init+0x2b0>)
 800591c:	4293      	cmp	r3, r2
 800591e:	d01f      	beq.n	8005960 <HAL_GPIO_Init+0x204>
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	4a3b      	ldr	r2, [pc, #236]	; (8005a10 <HAL_GPIO_Init+0x2b4>)
 8005924:	4293      	cmp	r3, r2
 8005926:	d019      	beq.n	800595c <HAL_GPIO_Init+0x200>
 8005928:	687b      	ldr	r3, [r7, #4]
 800592a:	4a3a      	ldr	r2, [pc, #232]	; (8005a14 <HAL_GPIO_Init+0x2b8>)
 800592c:	4293      	cmp	r3, r2
 800592e:	d013      	beq.n	8005958 <HAL_GPIO_Init+0x1fc>
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	4a39      	ldr	r2, [pc, #228]	; (8005a18 <HAL_GPIO_Init+0x2bc>)
 8005934:	4293      	cmp	r3, r2
 8005936:	d00d      	beq.n	8005954 <HAL_GPIO_Init+0x1f8>
 8005938:	687b      	ldr	r3, [r7, #4]
 800593a:	4a38      	ldr	r2, [pc, #224]	; (8005a1c <HAL_GPIO_Init+0x2c0>)
 800593c:	4293      	cmp	r3, r2
 800593e:	d007      	beq.n	8005950 <HAL_GPIO_Init+0x1f4>
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	4a37      	ldr	r2, [pc, #220]	; (8005a20 <HAL_GPIO_Init+0x2c4>)
 8005944:	4293      	cmp	r3, r2
 8005946:	d101      	bne.n	800594c <HAL_GPIO_Init+0x1f0>
 8005948:	2305      	movs	r3, #5
 800594a:	e00a      	b.n	8005962 <HAL_GPIO_Init+0x206>
 800594c:	2306      	movs	r3, #6
 800594e:	e008      	b.n	8005962 <HAL_GPIO_Init+0x206>
 8005950:	2304      	movs	r3, #4
 8005952:	e006      	b.n	8005962 <HAL_GPIO_Init+0x206>
 8005954:	2303      	movs	r3, #3
 8005956:	e004      	b.n	8005962 <HAL_GPIO_Init+0x206>
 8005958:	2302      	movs	r3, #2
 800595a:	e002      	b.n	8005962 <HAL_GPIO_Init+0x206>
 800595c:	2301      	movs	r3, #1
 800595e:	e000      	b.n	8005962 <HAL_GPIO_Init+0x206>
 8005960:	2300      	movs	r3, #0
 8005962:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005964:	f002 0203 	and.w	r2, r2, #3
 8005968:	0092      	lsls	r2, r2, #2
 800596a:	4093      	lsls	r3, r2
 800596c:	68fa      	ldr	r2, [r7, #12]
 800596e:	4313      	orrs	r3, r2
 8005970:	60fb      	str	r3, [r7, #12]
        AFIO->EXTICR[position >> 2u] = temp;
 8005972:	4925      	ldr	r1, [pc, #148]	; (8005a08 <HAL_GPIO_Init+0x2ac>)
 8005974:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005976:	089b      	lsrs	r3, r3, #2
 8005978:	3302      	adds	r3, #2
 800597a:	68fa      	ldr	r2, [r7, #12]
 800597c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]


        /* Configure the interrupt mask */
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8005980:	683b      	ldr	r3, [r7, #0]
 8005982:	685b      	ldr	r3, [r3, #4]
 8005984:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005988:	2b00      	cmp	r3, #0
 800598a:	d006      	beq.n	800599a <HAL_GPIO_Init+0x23e>
        {
          SET_BIT(EXTI->IMR, iocurrent);
 800598c:	4b25      	ldr	r3, [pc, #148]	; (8005a24 <HAL_GPIO_Init+0x2c8>)
 800598e:	681a      	ldr	r2, [r3, #0]
 8005990:	4924      	ldr	r1, [pc, #144]	; (8005a24 <HAL_GPIO_Init+0x2c8>)
 8005992:	69bb      	ldr	r3, [r7, #24]
 8005994:	4313      	orrs	r3, r2
 8005996:	600b      	str	r3, [r1, #0]
 8005998:	e006      	b.n	80059a8 <HAL_GPIO_Init+0x24c>
        }
        else
        {
          CLEAR_BIT(EXTI->IMR, iocurrent);
 800599a:	4b22      	ldr	r3, [pc, #136]	; (8005a24 <HAL_GPIO_Init+0x2c8>)
 800599c:	681a      	ldr	r2, [r3, #0]
 800599e:	69bb      	ldr	r3, [r7, #24]
 80059a0:	43db      	mvns	r3, r3
 80059a2:	4920      	ldr	r1, [pc, #128]	; (8005a24 <HAL_GPIO_Init+0x2c8>)
 80059a4:	4013      	ands	r3, r2
 80059a6:	600b      	str	r3, [r1, #0]
        }

        /* Configure the event mask */
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80059a8:	683b      	ldr	r3, [r7, #0]
 80059aa:	685b      	ldr	r3, [r3, #4]
 80059ac:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80059b0:	2b00      	cmp	r3, #0
 80059b2:	d006      	beq.n	80059c2 <HAL_GPIO_Init+0x266>
        {
          SET_BIT(EXTI->EMR, iocurrent);
 80059b4:	4b1b      	ldr	r3, [pc, #108]	; (8005a24 <HAL_GPIO_Init+0x2c8>)
 80059b6:	685a      	ldr	r2, [r3, #4]
 80059b8:	491a      	ldr	r1, [pc, #104]	; (8005a24 <HAL_GPIO_Init+0x2c8>)
 80059ba:	69bb      	ldr	r3, [r7, #24]
 80059bc:	4313      	orrs	r3, r2
 80059be:	604b      	str	r3, [r1, #4]
 80059c0:	e006      	b.n	80059d0 <HAL_GPIO_Init+0x274>
        }
        else
        {
          CLEAR_BIT(EXTI->EMR, iocurrent);
 80059c2:	4b18      	ldr	r3, [pc, #96]	; (8005a24 <HAL_GPIO_Init+0x2c8>)
 80059c4:	685a      	ldr	r2, [r3, #4]
 80059c6:	69bb      	ldr	r3, [r7, #24]
 80059c8:	43db      	mvns	r3, r3
 80059ca:	4916      	ldr	r1, [pc, #88]	; (8005a24 <HAL_GPIO_Init+0x2c8>)
 80059cc:	4013      	ands	r3, r2
 80059ce:	604b      	str	r3, [r1, #4]
        }

        /* Enable or disable the rising trigger */
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80059d0:	683b      	ldr	r3, [r7, #0]
 80059d2:	685b      	ldr	r3, [r3, #4]
 80059d4:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80059d8:	2b00      	cmp	r3, #0
 80059da:	d025      	beq.n	8005a28 <HAL_GPIO_Init+0x2cc>
        {
          SET_BIT(EXTI->RTSR, iocurrent);
 80059dc:	4b11      	ldr	r3, [pc, #68]	; (8005a24 <HAL_GPIO_Init+0x2c8>)
 80059de:	689a      	ldr	r2, [r3, #8]
 80059e0:	4910      	ldr	r1, [pc, #64]	; (8005a24 <HAL_GPIO_Init+0x2c8>)
 80059e2:	69bb      	ldr	r3, [r7, #24]
 80059e4:	4313      	orrs	r3, r2
 80059e6:	608b      	str	r3, [r1, #8]
 80059e8:	e025      	b.n	8005a36 <HAL_GPIO_Init+0x2da>
 80059ea:	bf00      	nop
 80059ec:	10320000 	.word	0x10320000
 80059f0:	10310000 	.word	0x10310000
 80059f4:	10220000 	.word	0x10220000
 80059f8:	10210000 	.word	0x10210000
 80059fc:	10120000 	.word	0x10120000
 8005a00:	10110000 	.word	0x10110000
 8005a04:	40021000 	.word	0x40021000
 8005a08:	40010000 	.word	0x40010000
 8005a0c:	40010800 	.word	0x40010800
 8005a10:	40010c00 	.word	0x40010c00
 8005a14:	40011000 	.word	0x40011000
 8005a18:	40011400 	.word	0x40011400
 8005a1c:	40011800 	.word	0x40011800
 8005a20:	40011c00 	.word	0x40011c00
 8005a24:	40010400 	.word	0x40010400
        }
        else
        {
          CLEAR_BIT(EXTI->RTSR, iocurrent);
 8005a28:	4b15      	ldr	r3, [pc, #84]	; (8005a80 <HAL_GPIO_Init+0x324>)
 8005a2a:	689a      	ldr	r2, [r3, #8]
 8005a2c:	69bb      	ldr	r3, [r7, #24]
 8005a2e:	43db      	mvns	r3, r3
 8005a30:	4913      	ldr	r1, [pc, #76]	; (8005a80 <HAL_GPIO_Init+0x324>)
 8005a32:	4013      	ands	r3, r2
 8005a34:	608b      	str	r3, [r1, #8]
        }

        /* Enable or disable the falling trigger */
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8005a36:	683b      	ldr	r3, [r7, #0]
 8005a38:	685b      	ldr	r3, [r3, #4]
 8005a3a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005a3e:	2b00      	cmp	r3, #0
 8005a40:	d006      	beq.n	8005a50 <HAL_GPIO_Init+0x2f4>
        {
          SET_BIT(EXTI->FTSR, iocurrent);
 8005a42:	4b0f      	ldr	r3, [pc, #60]	; (8005a80 <HAL_GPIO_Init+0x324>)
 8005a44:	68da      	ldr	r2, [r3, #12]
 8005a46:	490e      	ldr	r1, [pc, #56]	; (8005a80 <HAL_GPIO_Init+0x324>)
 8005a48:	69bb      	ldr	r3, [r7, #24]
 8005a4a:	4313      	orrs	r3, r2
 8005a4c:	60cb      	str	r3, [r1, #12]
 8005a4e:	e006      	b.n	8005a5e <HAL_GPIO_Init+0x302>
        }
        else
        {
          CLEAR_BIT(EXTI->FTSR, iocurrent);
 8005a50:	4b0b      	ldr	r3, [pc, #44]	; (8005a80 <HAL_GPIO_Init+0x324>)
 8005a52:	68da      	ldr	r2, [r3, #12]
 8005a54:	69bb      	ldr	r3, [r7, #24]
 8005a56:	43db      	mvns	r3, r3
 8005a58:	4909      	ldr	r1, [pc, #36]	; (8005a80 <HAL_GPIO_Init+0x324>)
 8005a5a:	4013      	ands	r3, r2
 8005a5c:	60cb      	str	r3, [r1, #12]
        }
      }
    }

	position++;
 8005a5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005a60:	3301      	adds	r3, #1
 8005a62:	627b      	str	r3, [r7, #36]	; 0x24
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8005a64:	683b      	ldr	r3, [r7, #0]
 8005a66:	681a      	ldr	r2, [r3, #0]
 8005a68:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005a6a:	fa22 f303 	lsr.w	r3, r2, r3
 8005a6e:	2b00      	cmp	r3, #0
 8005a70:	f47f ae7e 	bne.w	8005770 <HAL_GPIO_Init+0x14>
  }
}
 8005a74:	bf00      	nop
 8005a76:	bf00      	nop
 8005a78:	372c      	adds	r7, #44	; 0x2c
 8005a7a:	46bd      	mov	sp, r7
 8005a7c:	bc80      	pop	{r7}
 8005a7e:	4770      	bx	lr
 8005a80:	40010400 	.word	0x40010400

08005a84 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin: specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 8005a84:	b480      	push	{r7}
 8005a86:	b085      	sub	sp, #20
 8005a88:	af00      	add	r7, sp, #0
 8005a8a:	6078      	str	r0, [r7, #4]
 8005a8c:	460b      	mov	r3, r1
 8005a8e:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8005a90:	687b      	ldr	r3, [r7, #4]
 8005a92:	689a      	ldr	r2, [r3, #8]
 8005a94:	887b      	ldrh	r3, [r7, #2]
 8005a96:	4013      	ands	r3, r2
 8005a98:	2b00      	cmp	r3, #0
 8005a9a:	d002      	beq.n	8005aa2 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 8005a9c:	2301      	movs	r3, #1
 8005a9e:	73fb      	strb	r3, [r7, #15]
 8005aa0:	e001      	b.n	8005aa6 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8005aa2:	2300      	movs	r3, #0
 8005aa4:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8005aa6:	7bfb      	ldrb	r3, [r7, #15]
}
 8005aa8:	4618      	mov	r0, r3
 8005aaa:	3714      	adds	r7, #20
 8005aac:	46bd      	mov	sp, r7
 8005aae:	bc80      	pop	{r7}
 8005ab0:	4770      	bx	lr

08005ab2 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8005ab2:	b480      	push	{r7}
 8005ab4:	b083      	sub	sp, #12
 8005ab6:	af00      	add	r7, sp, #0
 8005ab8:	6078      	str	r0, [r7, #4]
 8005aba:	460b      	mov	r3, r1
 8005abc:	807b      	strh	r3, [r7, #2]
 8005abe:	4613      	mov	r3, r2
 8005ac0:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8005ac2:	787b      	ldrb	r3, [r7, #1]
 8005ac4:	2b00      	cmp	r3, #0
 8005ac6:	d003      	beq.n	8005ad0 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8005ac8:	887a      	ldrh	r2, [r7, #2]
 8005aca:	687b      	ldr	r3, [r7, #4]
 8005acc:	611a      	str	r2, [r3, #16]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
  }
}
 8005ace:	e003      	b.n	8005ad8 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
 8005ad0:	887b      	ldrh	r3, [r7, #2]
 8005ad2:	041a      	lsls	r2, r3, #16
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	611a      	str	r2, [r3, #16]
}
 8005ad8:	bf00      	nop
 8005ada:	370c      	adds	r7, #12
 8005adc:	46bd      	mov	sp, r7
 8005ade:	bc80      	pop	{r7}
 8005ae0:	4770      	bx	lr

08005ae2 <HAL_GPIO_TogglePin>:
  * @param  GPIOx: where x can be (A..G depending on device used) to select the GPIO peripheral
  * @param  GPIO_Pin: Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 8005ae2:	b480      	push	{r7}
 8005ae4:	b085      	sub	sp, #20
 8005ae6:	af00      	add	r7, sp, #0
 8005ae8:	6078      	str	r0, [r7, #4]
 8005aea:	460b      	mov	r3, r1
 8005aec:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 8005aee:	687b      	ldr	r3, [r7, #4]
 8005af0:	68db      	ldr	r3, [r3, #12]
 8005af2:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8005af4:	887a      	ldrh	r2, [r7, #2]
 8005af6:	68fb      	ldr	r3, [r7, #12]
 8005af8:	4013      	ands	r3, r2
 8005afa:	041a      	lsls	r2, r3, #16
 8005afc:	68fb      	ldr	r3, [r7, #12]
 8005afe:	43d9      	mvns	r1, r3
 8005b00:	887b      	ldrh	r3, [r7, #2]
 8005b02:	400b      	ands	r3, r1
 8005b04:	431a      	orrs	r2, r3
 8005b06:	687b      	ldr	r3, [r7, #4]
 8005b08:	611a      	str	r2, [r3, #16]
}
 8005b0a:	bf00      	nop
 8005b0c:	3714      	adds	r7, #20
 8005b0e:	46bd      	mov	sp, r7
 8005b10:	bc80      	pop	{r7}
 8005b12:	4770      	bx	lr

08005b14 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin: Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8005b14:	b580      	push	{r7, lr}
 8005b16:	b082      	sub	sp, #8
 8005b18:	af00      	add	r7, sp, #0
 8005b1a:	4603      	mov	r3, r0
 8005b1c:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if (__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u)
 8005b1e:	4b08      	ldr	r3, [pc, #32]	; (8005b40 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8005b20:	695a      	ldr	r2, [r3, #20]
 8005b22:	88fb      	ldrh	r3, [r7, #6]
 8005b24:	4013      	ands	r3, r2
 8005b26:	2b00      	cmp	r3, #0
 8005b28:	d006      	beq.n	8005b38 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8005b2a:	4a05      	ldr	r2, [pc, #20]	; (8005b40 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8005b2c:	88fb      	ldrh	r3, [r7, #6]
 8005b2e:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8005b30:	88fb      	ldrh	r3, [r7, #6]
 8005b32:	4618      	mov	r0, r3
 8005b34:	f7fa fcee 	bl	8000514 <HAL_GPIO_EXTI_Callback>
  }
}
 8005b38:	bf00      	nop
 8005b3a:	3708      	adds	r7, #8
 8005b3c:	46bd      	mov	sp, r7
 8005b3e:	bd80      	pop	{r7, pc}
 8005b40:	40010400 	.word	0x40010400

08005b44 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005b44:	b580      	push	{r7, lr}
 8005b46:	b086      	sub	sp, #24
 8005b48:	af00      	add	r7, sp, #0
 8005b4a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005b4c:	687b      	ldr	r3, [r7, #4]
 8005b4e:	2b00      	cmp	r3, #0
 8005b50:	d101      	bne.n	8005b56 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8005b52:	2301      	movs	r3, #1
 8005b54:	e272      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005b56:	687b      	ldr	r3, [r7, #4]
 8005b58:	681b      	ldr	r3, [r3, #0]
 8005b5a:	f003 0301 	and.w	r3, r3, #1
 8005b5e:	2b00      	cmp	r3, #0
 8005b60:	f000 8087 	beq.w	8005c72 <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8005b64:	4b92      	ldr	r3, [pc, #584]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005b66:	685b      	ldr	r3, [r3, #4]
 8005b68:	f003 030c 	and.w	r3, r3, #12
 8005b6c:	2b04      	cmp	r3, #4
 8005b6e:	d00c      	beq.n	8005b8a <HAL_RCC_OscConfig+0x46>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8005b70:	4b8f      	ldr	r3, [pc, #572]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005b72:	685b      	ldr	r3, [r3, #4]
 8005b74:	f003 030c 	and.w	r3, r3, #12
 8005b78:	2b08      	cmp	r3, #8
 8005b7a:	d112      	bne.n	8005ba2 <HAL_RCC_OscConfig+0x5e>
 8005b7c:	4b8c      	ldr	r3, [pc, #560]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005b7e:	685b      	ldr	r3, [r3, #4]
 8005b80:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005b84:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005b88:	d10b      	bne.n	8005ba2 <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005b8a:	4b89      	ldr	r3, [pc, #548]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005b8c:	681b      	ldr	r3, [r3, #0]
 8005b8e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005b92:	2b00      	cmp	r3, #0
 8005b94:	d06c      	beq.n	8005c70 <HAL_RCC_OscConfig+0x12c>
 8005b96:	687b      	ldr	r3, [r7, #4]
 8005b98:	685b      	ldr	r3, [r3, #4]
 8005b9a:	2b00      	cmp	r3, #0
 8005b9c:	d168      	bne.n	8005c70 <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 8005b9e:	2301      	movs	r3, #1
 8005ba0:	e24c      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	685b      	ldr	r3, [r3, #4]
 8005ba6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005baa:	d106      	bne.n	8005bba <HAL_RCC_OscConfig+0x76>
 8005bac:	4b80      	ldr	r3, [pc, #512]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005bae:	681b      	ldr	r3, [r3, #0]
 8005bb0:	4a7f      	ldr	r2, [pc, #508]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005bb2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005bb6:	6013      	str	r3, [r2, #0]
 8005bb8:	e02e      	b.n	8005c18 <HAL_RCC_OscConfig+0xd4>
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	685b      	ldr	r3, [r3, #4]
 8005bbe:	2b00      	cmp	r3, #0
 8005bc0:	d10c      	bne.n	8005bdc <HAL_RCC_OscConfig+0x98>
 8005bc2:	4b7b      	ldr	r3, [pc, #492]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005bc4:	681b      	ldr	r3, [r3, #0]
 8005bc6:	4a7a      	ldr	r2, [pc, #488]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005bc8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005bcc:	6013      	str	r3, [r2, #0]
 8005bce:	4b78      	ldr	r3, [pc, #480]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005bd0:	681b      	ldr	r3, [r3, #0]
 8005bd2:	4a77      	ldr	r2, [pc, #476]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005bd4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005bd8:	6013      	str	r3, [r2, #0]
 8005bda:	e01d      	b.n	8005c18 <HAL_RCC_OscConfig+0xd4>
 8005bdc:	687b      	ldr	r3, [r7, #4]
 8005bde:	685b      	ldr	r3, [r3, #4]
 8005be0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005be4:	d10c      	bne.n	8005c00 <HAL_RCC_OscConfig+0xbc>
 8005be6:	4b72      	ldr	r3, [pc, #456]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005be8:	681b      	ldr	r3, [r3, #0]
 8005bea:	4a71      	ldr	r2, [pc, #452]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005bec:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005bf0:	6013      	str	r3, [r2, #0]
 8005bf2:	4b6f      	ldr	r3, [pc, #444]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005bf4:	681b      	ldr	r3, [r3, #0]
 8005bf6:	4a6e      	ldr	r2, [pc, #440]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005bf8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005bfc:	6013      	str	r3, [r2, #0]
 8005bfe:	e00b      	b.n	8005c18 <HAL_RCC_OscConfig+0xd4>
 8005c00:	4b6b      	ldr	r3, [pc, #428]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005c02:	681b      	ldr	r3, [r3, #0]
 8005c04:	4a6a      	ldr	r2, [pc, #424]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005c06:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005c0a:	6013      	str	r3, [r2, #0]
 8005c0c:	4b68      	ldr	r3, [pc, #416]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005c0e:	681b      	ldr	r3, [r3, #0]
 8005c10:	4a67      	ldr	r2, [pc, #412]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005c12:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005c16:	6013      	str	r3, [r2, #0]


      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	685b      	ldr	r3, [r3, #4]
 8005c1c:	2b00      	cmp	r3, #0
 8005c1e:	d013      	beq.n	8005c48 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005c20:	f7ff fb1e 	bl	8005260 <HAL_GetTick>
 8005c24:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005c26:	e008      	b.n	8005c3a <HAL_RCC_OscConfig+0xf6>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005c28:	f7ff fb1a 	bl	8005260 <HAL_GetTick>
 8005c2c:	4602      	mov	r2, r0
 8005c2e:	693b      	ldr	r3, [r7, #16]
 8005c30:	1ad3      	subs	r3, r2, r3
 8005c32:	2b64      	cmp	r3, #100	; 0x64
 8005c34:	d901      	bls.n	8005c3a <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 8005c36:	2303      	movs	r3, #3
 8005c38:	e200      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005c3a:	4b5d      	ldr	r3, [pc, #372]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005c3c:	681b      	ldr	r3, [r3, #0]
 8005c3e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005c42:	2b00      	cmp	r3, #0
 8005c44:	d0f0      	beq.n	8005c28 <HAL_RCC_OscConfig+0xe4>
 8005c46:	e014      	b.n	8005c72 <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005c48:	f7ff fb0a 	bl	8005260 <HAL_GetTick>
 8005c4c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005c4e:	e008      	b.n	8005c62 <HAL_RCC_OscConfig+0x11e>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005c50:	f7ff fb06 	bl	8005260 <HAL_GetTick>
 8005c54:	4602      	mov	r2, r0
 8005c56:	693b      	ldr	r3, [r7, #16]
 8005c58:	1ad3      	subs	r3, r2, r3
 8005c5a:	2b64      	cmp	r3, #100	; 0x64
 8005c5c:	d901      	bls.n	8005c62 <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 8005c5e:	2303      	movs	r3, #3
 8005c60:	e1ec      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005c62:	4b53      	ldr	r3, [pc, #332]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005c64:	681b      	ldr	r3, [r3, #0]
 8005c66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005c6a:	2b00      	cmp	r3, #0
 8005c6c:	d1f0      	bne.n	8005c50 <HAL_RCC_OscConfig+0x10c>
 8005c6e:	e000      	b.n	8005c72 <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005c70:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	681b      	ldr	r3, [r3, #0]
 8005c76:	f003 0302 	and.w	r3, r3, #2
 8005c7a:	2b00      	cmp	r3, #0
 8005c7c:	d063      	beq.n	8005d46 <HAL_RCC_OscConfig+0x202>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8005c7e:	4b4c      	ldr	r3, [pc, #304]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005c80:	685b      	ldr	r3, [r3, #4]
 8005c82:	f003 030c 	and.w	r3, r3, #12
 8005c86:	2b00      	cmp	r3, #0
 8005c88:	d00b      	beq.n	8005ca2 <HAL_RCC_OscConfig+0x15e>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI_DIV2)))
 8005c8a:	4b49      	ldr	r3, [pc, #292]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005c8c:	685b      	ldr	r3, [r3, #4]
 8005c8e:	f003 030c 	and.w	r3, r3, #12
 8005c92:	2b08      	cmp	r3, #8
 8005c94:	d11c      	bne.n	8005cd0 <HAL_RCC_OscConfig+0x18c>
 8005c96:	4b46      	ldr	r3, [pc, #280]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005c98:	685b      	ldr	r3, [r3, #4]
 8005c9a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005c9e:	2b00      	cmp	r3, #0
 8005ca0:	d116      	bne.n	8005cd0 <HAL_RCC_OscConfig+0x18c>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005ca2:	4b43      	ldr	r3, [pc, #268]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005ca4:	681b      	ldr	r3, [r3, #0]
 8005ca6:	f003 0302 	and.w	r3, r3, #2
 8005caa:	2b00      	cmp	r3, #0
 8005cac:	d005      	beq.n	8005cba <HAL_RCC_OscConfig+0x176>
 8005cae:	687b      	ldr	r3, [r7, #4]
 8005cb0:	691b      	ldr	r3, [r3, #16]
 8005cb2:	2b01      	cmp	r3, #1
 8005cb4:	d001      	beq.n	8005cba <HAL_RCC_OscConfig+0x176>
      {
        return HAL_ERROR;
 8005cb6:	2301      	movs	r3, #1
 8005cb8:	e1c0      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005cba:	4b3d      	ldr	r3, [pc, #244]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005cbc:	681b      	ldr	r3, [r3, #0]
 8005cbe:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	695b      	ldr	r3, [r3, #20]
 8005cc6:	00db      	lsls	r3, r3, #3
 8005cc8:	4939      	ldr	r1, [pc, #228]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005cca:	4313      	orrs	r3, r2
 8005ccc:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005cce:	e03a      	b.n	8005d46 <HAL_RCC_OscConfig+0x202>
      }
    }
    else
    {
      /* Check the HSI State */
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8005cd0:	687b      	ldr	r3, [r7, #4]
 8005cd2:	691b      	ldr	r3, [r3, #16]
 8005cd4:	2b00      	cmp	r3, #0
 8005cd6:	d020      	beq.n	8005d1a <HAL_RCC_OscConfig+0x1d6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8005cd8:	4b36      	ldr	r3, [pc, #216]	; (8005db4 <HAL_RCC_OscConfig+0x270>)
 8005cda:	2201      	movs	r2, #1
 8005cdc:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005cde:	f7ff fabf 	bl	8005260 <HAL_GetTick>
 8005ce2:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005ce4:	e008      	b.n	8005cf8 <HAL_RCC_OscConfig+0x1b4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005ce6:	f7ff fabb 	bl	8005260 <HAL_GetTick>
 8005cea:	4602      	mov	r2, r0
 8005cec:	693b      	ldr	r3, [r7, #16]
 8005cee:	1ad3      	subs	r3, r2, r3
 8005cf0:	2b02      	cmp	r3, #2
 8005cf2:	d901      	bls.n	8005cf8 <HAL_RCC_OscConfig+0x1b4>
          {
            return HAL_TIMEOUT;
 8005cf4:	2303      	movs	r3, #3
 8005cf6:	e1a1      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005cf8:	4b2d      	ldr	r3, [pc, #180]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005cfa:	681b      	ldr	r3, [r3, #0]
 8005cfc:	f003 0302 	and.w	r3, r3, #2
 8005d00:	2b00      	cmp	r3, #0
 8005d02:	d0f0      	beq.n	8005ce6 <HAL_RCC_OscConfig+0x1a2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005d04:	4b2a      	ldr	r3, [pc, #168]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005d06:	681b      	ldr	r3, [r3, #0]
 8005d08:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005d0c:	687b      	ldr	r3, [r7, #4]
 8005d0e:	695b      	ldr	r3, [r3, #20]
 8005d10:	00db      	lsls	r3, r3, #3
 8005d12:	4927      	ldr	r1, [pc, #156]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005d14:	4313      	orrs	r3, r2
 8005d16:	600b      	str	r3, [r1, #0]
 8005d18:	e015      	b.n	8005d46 <HAL_RCC_OscConfig+0x202>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005d1a:	4b26      	ldr	r3, [pc, #152]	; (8005db4 <HAL_RCC_OscConfig+0x270>)
 8005d1c:	2200      	movs	r2, #0
 8005d1e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005d20:	f7ff fa9e 	bl	8005260 <HAL_GetTick>
 8005d24:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005d26:	e008      	b.n	8005d3a <HAL_RCC_OscConfig+0x1f6>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005d28:	f7ff fa9a 	bl	8005260 <HAL_GetTick>
 8005d2c:	4602      	mov	r2, r0
 8005d2e:	693b      	ldr	r3, [r7, #16]
 8005d30:	1ad3      	subs	r3, r2, r3
 8005d32:	2b02      	cmp	r3, #2
 8005d34:	d901      	bls.n	8005d3a <HAL_RCC_OscConfig+0x1f6>
          {
            return HAL_TIMEOUT;
 8005d36:	2303      	movs	r3, #3
 8005d38:	e180      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005d3a:	4b1d      	ldr	r3, [pc, #116]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005d3c:	681b      	ldr	r3, [r3, #0]
 8005d3e:	f003 0302 	and.w	r3, r3, #2
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	d1f0      	bne.n	8005d28 <HAL_RCC_OscConfig+0x1e4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005d46:	687b      	ldr	r3, [r7, #4]
 8005d48:	681b      	ldr	r3, [r3, #0]
 8005d4a:	f003 0308 	and.w	r3, r3, #8
 8005d4e:	2b00      	cmp	r3, #0
 8005d50:	d03a      	beq.n	8005dc8 <HAL_RCC_OscConfig+0x284>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	699b      	ldr	r3, [r3, #24]
 8005d56:	2b00      	cmp	r3, #0
 8005d58:	d019      	beq.n	8005d8e <HAL_RCC_OscConfig+0x24a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8005d5a:	4b17      	ldr	r3, [pc, #92]	; (8005db8 <HAL_RCC_OscConfig+0x274>)
 8005d5c:	2201      	movs	r2, #1
 8005d5e:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005d60:	f7ff fa7e 	bl	8005260 <HAL_GetTick>
 8005d64:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005d66:	e008      	b.n	8005d7a <HAL_RCC_OscConfig+0x236>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005d68:	f7ff fa7a 	bl	8005260 <HAL_GetTick>
 8005d6c:	4602      	mov	r2, r0
 8005d6e:	693b      	ldr	r3, [r7, #16]
 8005d70:	1ad3      	subs	r3, r2, r3
 8005d72:	2b02      	cmp	r3, #2
 8005d74:	d901      	bls.n	8005d7a <HAL_RCC_OscConfig+0x236>
        {
          return HAL_TIMEOUT;
 8005d76:	2303      	movs	r3, #3
 8005d78:	e160      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005d7a:	4b0d      	ldr	r3, [pc, #52]	; (8005db0 <HAL_RCC_OscConfig+0x26c>)
 8005d7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d7e:	f003 0302 	and.w	r3, r3, #2
 8005d82:	2b00      	cmp	r3, #0
 8005d84:	d0f0      	beq.n	8005d68 <HAL_RCC_OscConfig+0x224>
        }
      }
      /*  To have a fully stabilized clock in the specified range, a software delay of 1ms
          should be added.*/
      RCC_Delay(1);
 8005d86:	2001      	movs	r0, #1
 8005d88:	f000 fad8 	bl	800633c <RCC_Delay>
 8005d8c:	e01c      	b.n	8005dc8 <HAL_RCC_OscConfig+0x284>
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005d8e:	4b0a      	ldr	r3, [pc, #40]	; (8005db8 <HAL_RCC_OscConfig+0x274>)
 8005d90:	2200      	movs	r2, #0
 8005d92:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005d94:	f7ff fa64 	bl	8005260 <HAL_GetTick>
 8005d98:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005d9a:	e00f      	b.n	8005dbc <HAL_RCC_OscConfig+0x278>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005d9c:	f7ff fa60 	bl	8005260 <HAL_GetTick>
 8005da0:	4602      	mov	r2, r0
 8005da2:	693b      	ldr	r3, [r7, #16]
 8005da4:	1ad3      	subs	r3, r2, r3
 8005da6:	2b02      	cmp	r3, #2
 8005da8:	d908      	bls.n	8005dbc <HAL_RCC_OscConfig+0x278>
        {
          return HAL_TIMEOUT;
 8005daa:	2303      	movs	r3, #3
 8005dac:	e146      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
 8005dae:	bf00      	nop
 8005db0:	40021000 	.word	0x40021000
 8005db4:	42420000 	.word	0x42420000
 8005db8:	42420480 	.word	0x42420480
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005dbc:	4b92      	ldr	r3, [pc, #584]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005dbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005dc0:	f003 0302 	and.w	r3, r3, #2
 8005dc4:	2b00      	cmp	r3, #0
 8005dc6:	d1e9      	bne.n	8005d9c <HAL_RCC_OscConfig+0x258>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005dc8:	687b      	ldr	r3, [r7, #4]
 8005dca:	681b      	ldr	r3, [r3, #0]
 8005dcc:	f003 0304 	and.w	r3, r3, #4
 8005dd0:	2b00      	cmp	r3, #0
 8005dd2:	f000 80a6 	beq.w	8005f22 <HAL_RCC_OscConfig+0x3de>
  {
    FlagStatus       pwrclkchanged = RESET;
 8005dd6:	2300      	movs	r3, #0
 8005dd8:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005dda:	4b8b      	ldr	r3, [pc, #556]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005ddc:	69db      	ldr	r3, [r3, #28]
 8005dde:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005de2:	2b00      	cmp	r3, #0
 8005de4:	d10d      	bne.n	8005e02 <HAL_RCC_OscConfig+0x2be>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8005de6:	4b88      	ldr	r3, [pc, #544]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005de8:	69db      	ldr	r3, [r3, #28]
 8005dea:	4a87      	ldr	r2, [pc, #540]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005dec:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005df0:	61d3      	str	r3, [r2, #28]
 8005df2:	4b85      	ldr	r3, [pc, #532]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005df4:	69db      	ldr	r3, [r3, #28]
 8005df6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005dfa:	60bb      	str	r3, [r7, #8]
 8005dfc:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8005dfe:	2301      	movs	r3, #1
 8005e00:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005e02:	4b82      	ldr	r3, [pc, #520]	; (800600c <HAL_RCC_OscConfig+0x4c8>)
 8005e04:	681b      	ldr	r3, [r3, #0]
 8005e06:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005e0a:	2b00      	cmp	r3, #0
 8005e0c:	d118      	bne.n	8005e40 <HAL_RCC_OscConfig+0x2fc>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005e0e:	4b7f      	ldr	r3, [pc, #508]	; (800600c <HAL_RCC_OscConfig+0x4c8>)
 8005e10:	681b      	ldr	r3, [r3, #0]
 8005e12:	4a7e      	ldr	r2, [pc, #504]	; (800600c <HAL_RCC_OscConfig+0x4c8>)
 8005e14:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005e18:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8005e1a:	f7ff fa21 	bl	8005260 <HAL_GetTick>
 8005e1e:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005e20:	e008      	b.n	8005e34 <HAL_RCC_OscConfig+0x2f0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005e22:	f7ff fa1d 	bl	8005260 <HAL_GetTick>
 8005e26:	4602      	mov	r2, r0
 8005e28:	693b      	ldr	r3, [r7, #16]
 8005e2a:	1ad3      	subs	r3, r2, r3
 8005e2c:	2b64      	cmp	r3, #100	; 0x64
 8005e2e:	d901      	bls.n	8005e34 <HAL_RCC_OscConfig+0x2f0>
        {
          return HAL_TIMEOUT;
 8005e30:	2303      	movs	r3, #3
 8005e32:	e103      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005e34:	4b75      	ldr	r3, [pc, #468]	; (800600c <HAL_RCC_OscConfig+0x4c8>)
 8005e36:	681b      	ldr	r3, [r3, #0]
 8005e38:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005e3c:	2b00      	cmp	r3, #0
 8005e3e:	d0f0      	beq.n	8005e22 <HAL_RCC_OscConfig+0x2de>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	68db      	ldr	r3, [r3, #12]
 8005e44:	2b01      	cmp	r3, #1
 8005e46:	d106      	bne.n	8005e56 <HAL_RCC_OscConfig+0x312>
 8005e48:	4b6f      	ldr	r3, [pc, #444]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005e4a:	6a1b      	ldr	r3, [r3, #32]
 8005e4c:	4a6e      	ldr	r2, [pc, #440]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005e4e:	f043 0301 	orr.w	r3, r3, #1
 8005e52:	6213      	str	r3, [r2, #32]
 8005e54:	e02d      	b.n	8005eb2 <HAL_RCC_OscConfig+0x36e>
 8005e56:	687b      	ldr	r3, [r7, #4]
 8005e58:	68db      	ldr	r3, [r3, #12]
 8005e5a:	2b00      	cmp	r3, #0
 8005e5c:	d10c      	bne.n	8005e78 <HAL_RCC_OscConfig+0x334>
 8005e5e:	4b6a      	ldr	r3, [pc, #424]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005e60:	6a1b      	ldr	r3, [r3, #32]
 8005e62:	4a69      	ldr	r2, [pc, #420]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005e64:	f023 0301 	bic.w	r3, r3, #1
 8005e68:	6213      	str	r3, [r2, #32]
 8005e6a:	4b67      	ldr	r3, [pc, #412]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005e6c:	6a1b      	ldr	r3, [r3, #32]
 8005e6e:	4a66      	ldr	r2, [pc, #408]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005e70:	f023 0304 	bic.w	r3, r3, #4
 8005e74:	6213      	str	r3, [r2, #32]
 8005e76:	e01c      	b.n	8005eb2 <HAL_RCC_OscConfig+0x36e>
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	68db      	ldr	r3, [r3, #12]
 8005e7c:	2b05      	cmp	r3, #5
 8005e7e:	d10c      	bne.n	8005e9a <HAL_RCC_OscConfig+0x356>
 8005e80:	4b61      	ldr	r3, [pc, #388]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005e82:	6a1b      	ldr	r3, [r3, #32]
 8005e84:	4a60      	ldr	r2, [pc, #384]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005e86:	f043 0304 	orr.w	r3, r3, #4
 8005e8a:	6213      	str	r3, [r2, #32]
 8005e8c:	4b5e      	ldr	r3, [pc, #376]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005e8e:	6a1b      	ldr	r3, [r3, #32]
 8005e90:	4a5d      	ldr	r2, [pc, #372]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005e92:	f043 0301 	orr.w	r3, r3, #1
 8005e96:	6213      	str	r3, [r2, #32]
 8005e98:	e00b      	b.n	8005eb2 <HAL_RCC_OscConfig+0x36e>
 8005e9a:	4b5b      	ldr	r3, [pc, #364]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005e9c:	6a1b      	ldr	r3, [r3, #32]
 8005e9e:	4a5a      	ldr	r2, [pc, #360]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005ea0:	f023 0301 	bic.w	r3, r3, #1
 8005ea4:	6213      	str	r3, [r2, #32]
 8005ea6:	4b58      	ldr	r3, [pc, #352]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005ea8:	6a1b      	ldr	r3, [r3, #32]
 8005eaa:	4a57      	ldr	r2, [pc, #348]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005eac:	f023 0304 	bic.w	r3, r3, #4
 8005eb0:	6213      	str	r3, [r2, #32]
    /* Check the LSE State */
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8005eb2:	687b      	ldr	r3, [r7, #4]
 8005eb4:	68db      	ldr	r3, [r3, #12]
 8005eb6:	2b00      	cmp	r3, #0
 8005eb8:	d015      	beq.n	8005ee6 <HAL_RCC_OscConfig+0x3a2>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005eba:	f7ff f9d1 	bl	8005260 <HAL_GetTick>
 8005ebe:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005ec0:	e00a      	b.n	8005ed8 <HAL_RCC_OscConfig+0x394>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005ec2:	f7ff f9cd 	bl	8005260 <HAL_GetTick>
 8005ec6:	4602      	mov	r2, r0
 8005ec8:	693b      	ldr	r3, [r7, #16]
 8005eca:	1ad3      	subs	r3, r2, r3
 8005ecc:	f241 3288 	movw	r2, #5000	; 0x1388
 8005ed0:	4293      	cmp	r3, r2
 8005ed2:	d901      	bls.n	8005ed8 <HAL_RCC_OscConfig+0x394>
        {
          return HAL_TIMEOUT;
 8005ed4:	2303      	movs	r3, #3
 8005ed6:	e0b1      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005ed8:	4b4b      	ldr	r3, [pc, #300]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005eda:	6a1b      	ldr	r3, [r3, #32]
 8005edc:	f003 0302 	and.w	r3, r3, #2
 8005ee0:	2b00      	cmp	r3, #0
 8005ee2:	d0ee      	beq.n	8005ec2 <HAL_RCC_OscConfig+0x37e>
 8005ee4:	e014      	b.n	8005f10 <HAL_RCC_OscConfig+0x3cc>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005ee6:	f7ff f9bb 	bl	8005260 <HAL_GetTick>
 8005eea:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005eec:	e00a      	b.n	8005f04 <HAL_RCC_OscConfig+0x3c0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005eee:	f7ff f9b7 	bl	8005260 <HAL_GetTick>
 8005ef2:	4602      	mov	r2, r0
 8005ef4:	693b      	ldr	r3, [r7, #16]
 8005ef6:	1ad3      	subs	r3, r2, r3
 8005ef8:	f241 3288 	movw	r2, #5000	; 0x1388
 8005efc:	4293      	cmp	r3, r2
 8005efe:	d901      	bls.n	8005f04 <HAL_RCC_OscConfig+0x3c0>
        {
          return HAL_TIMEOUT;
 8005f00:	2303      	movs	r3, #3
 8005f02:	e09b      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005f04:	4b40      	ldr	r3, [pc, #256]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005f06:	6a1b      	ldr	r3, [r3, #32]
 8005f08:	f003 0302 	and.w	r3, r3, #2
 8005f0c:	2b00      	cmp	r3, #0
 8005f0e:	d1ee      	bne.n	8005eee <HAL_RCC_OscConfig+0x3aa>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if (pwrclkchanged == SET)
 8005f10:	7dfb      	ldrb	r3, [r7, #23]
 8005f12:	2b01      	cmp	r3, #1
 8005f14:	d105      	bne.n	8005f22 <HAL_RCC_OscConfig+0x3de>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005f16:	4b3c      	ldr	r3, [pc, #240]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005f18:	69db      	ldr	r3, [r3, #28]
 8005f1a:	4a3b      	ldr	r2, [pc, #236]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005f1c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005f20:	61d3      	str	r3, [r2, #28]

#endif /* RCC_CR_PLL2ON */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005f22:	687b      	ldr	r3, [r7, #4]
 8005f24:	69db      	ldr	r3, [r3, #28]
 8005f26:	2b00      	cmp	r3, #0
 8005f28:	f000 8087 	beq.w	800603a <HAL_RCC_OscConfig+0x4f6>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8005f2c:	4b36      	ldr	r3, [pc, #216]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005f2e:	685b      	ldr	r3, [r3, #4]
 8005f30:	f003 030c 	and.w	r3, r3, #12
 8005f34:	2b08      	cmp	r3, #8
 8005f36:	d061      	beq.n	8005ffc <HAL_RCC_OscConfig+0x4b8>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005f38:	687b      	ldr	r3, [r7, #4]
 8005f3a:	69db      	ldr	r3, [r3, #28]
 8005f3c:	2b02      	cmp	r3, #2
 8005f3e:	d146      	bne.n	8005fce <HAL_RCC_OscConfig+0x48a>
        /* Check the parameters */
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005f40:	4b33      	ldr	r3, [pc, #204]	; (8006010 <HAL_RCC_OscConfig+0x4cc>)
 8005f42:	2200      	movs	r2, #0
 8005f44:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005f46:	f7ff f98b 	bl	8005260 <HAL_GetTick>
 8005f4a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8005f4c:	e008      	b.n	8005f60 <HAL_RCC_OscConfig+0x41c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005f4e:	f7ff f987 	bl	8005260 <HAL_GetTick>
 8005f52:	4602      	mov	r2, r0
 8005f54:	693b      	ldr	r3, [r7, #16]
 8005f56:	1ad3      	subs	r3, r2, r3
 8005f58:	2b02      	cmp	r3, #2
 8005f5a:	d901      	bls.n	8005f60 <HAL_RCC_OscConfig+0x41c>
          {
            return HAL_TIMEOUT;
 8005f5c:	2303      	movs	r3, #3
 8005f5e:	e06d      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8005f60:	4b29      	ldr	r3, [pc, #164]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005f62:	681b      	ldr	r3, [r3, #0]
 8005f64:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005f68:	2b00      	cmp	r3, #0
 8005f6a:	d1f0      	bne.n	8005f4e <HAL_RCC_OscConfig+0x40a>
          }
        }

        /* Configure the HSE prediv factor --------------------------------*/
        /* It can be written only when the PLL is disabled. Not used in PLL source is different than HSE */
        if (RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 8005f6c:	687b      	ldr	r3, [r7, #4]
 8005f6e:	6a1b      	ldr	r3, [r3, #32]
 8005f70:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005f74:	d108      	bne.n	8005f88 <HAL_RCC_OscConfig+0x444>
          /* Set PREDIV1 source */
          SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
#endif /* RCC_CFGR2_PREDIV1SRC */

          /* Set PREDIV1 Value */
          __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 8005f76:	4b24      	ldr	r3, [pc, #144]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005f78:	685b      	ldr	r3, [r3, #4]
 8005f7a:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8005f7e:	687b      	ldr	r3, [r7, #4]
 8005f80:	689b      	ldr	r3, [r3, #8]
 8005f82:	4921      	ldr	r1, [pc, #132]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005f84:	4313      	orrs	r3, r2
 8005f86:	604b      	str	r3, [r1, #4]
        }

        /* Configure the main PLL clock source and multiplication factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8005f88:	4b1f      	ldr	r3, [pc, #124]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005f8a:	685b      	ldr	r3, [r3, #4]
 8005f8c:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	6a19      	ldr	r1, [r3, #32]
 8005f94:	687b      	ldr	r3, [r7, #4]
 8005f96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f98:	430b      	orrs	r3, r1
 8005f9a:	491b      	ldr	r1, [pc, #108]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005f9c:	4313      	orrs	r3, r2
 8005f9e:	604b      	str	r3, [r1, #4]
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8005fa0:	4b1b      	ldr	r3, [pc, #108]	; (8006010 <HAL_RCC_OscConfig+0x4cc>)
 8005fa2:	2201      	movs	r2, #1
 8005fa4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005fa6:	f7ff f95b 	bl	8005260 <HAL_GetTick>
 8005faa:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8005fac:	e008      	b.n	8005fc0 <HAL_RCC_OscConfig+0x47c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005fae:	f7ff f957 	bl	8005260 <HAL_GetTick>
 8005fb2:	4602      	mov	r2, r0
 8005fb4:	693b      	ldr	r3, [r7, #16]
 8005fb6:	1ad3      	subs	r3, r2, r3
 8005fb8:	2b02      	cmp	r3, #2
 8005fba:	d901      	bls.n	8005fc0 <HAL_RCC_OscConfig+0x47c>
          {
            return HAL_TIMEOUT;
 8005fbc:	2303      	movs	r3, #3
 8005fbe:	e03d      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8005fc0:	4b11      	ldr	r3, [pc, #68]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005fc2:	681b      	ldr	r3, [r3, #0]
 8005fc4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005fc8:	2b00      	cmp	r3, #0
 8005fca:	d0f0      	beq.n	8005fae <HAL_RCC_OscConfig+0x46a>
 8005fcc:	e035      	b.n	800603a <HAL_RCC_OscConfig+0x4f6>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005fce:	4b10      	ldr	r3, [pc, #64]	; (8006010 <HAL_RCC_OscConfig+0x4cc>)
 8005fd0:	2200      	movs	r2, #0
 8005fd2:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005fd4:	f7ff f944 	bl	8005260 <HAL_GetTick>
 8005fd8:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8005fda:	e008      	b.n	8005fee <HAL_RCC_OscConfig+0x4aa>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005fdc:	f7ff f940 	bl	8005260 <HAL_GetTick>
 8005fe0:	4602      	mov	r2, r0
 8005fe2:	693b      	ldr	r3, [r7, #16]
 8005fe4:	1ad3      	subs	r3, r2, r3
 8005fe6:	2b02      	cmp	r3, #2
 8005fe8:	d901      	bls.n	8005fee <HAL_RCC_OscConfig+0x4aa>
          {
            return HAL_TIMEOUT;
 8005fea:	2303      	movs	r3, #3
 8005fec:	e026      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8005fee:	4b06      	ldr	r3, [pc, #24]	; (8006008 <HAL_RCC_OscConfig+0x4c4>)
 8005ff0:	681b      	ldr	r3, [r3, #0]
 8005ff2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005ff6:	2b00      	cmp	r3, #0
 8005ff8:	d1f0      	bne.n	8005fdc <HAL_RCC_OscConfig+0x498>
 8005ffa:	e01e      	b.n	800603a <HAL_RCC_OscConfig+0x4f6>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005ffc:	687b      	ldr	r3, [r7, #4]
 8005ffe:	69db      	ldr	r3, [r3, #28]
 8006000:	2b01      	cmp	r3, #1
 8006002:	d107      	bne.n	8006014 <HAL_RCC_OscConfig+0x4d0>
      {
        return HAL_ERROR;
 8006004:	2301      	movs	r3, #1
 8006006:	e019      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
 8006008:	40021000 	.word	0x40021000
 800600c:	40007000 	.word	0x40007000
 8006010:	42420060 	.word	0x42420060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8006014:	4b0b      	ldr	r3, [pc, #44]	; (8006044 <HAL_RCC_OscConfig+0x500>)
 8006016:	685b      	ldr	r3, [r3, #4]
 8006018:	60fb      	str	r3, [r7, #12]
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800601a:	68fb      	ldr	r3, [r7, #12]
 800601c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8006020:	687b      	ldr	r3, [r7, #4]
 8006022:	6a1b      	ldr	r3, [r3, #32]
 8006024:	429a      	cmp	r2, r3
 8006026:	d106      	bne.n	8006036 <HAL_RCC_OscConfig+0x4f2>
            (READ_BIT(pll_config, RCC_CFGR_PLLMULL) != RCC_OscInitStruct->PLL.PLLMUL))
 8006028:	68fb      	ldr	r3, [r7, #12]
 800602a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800602e:	687b      	ldr	r3, [r7, #4]
 8006030:	6a5b      	ldr	r3, [r3, #36]	; 0x24
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006032:	429a      	cmp	r2, r3
 8006034:	d001      	beq.n	800603a <HAL_RCC_OscConfig+0x4f6>
        {
          return HAL_ERROR;
 8006036:	2301      	movs	r3, #1
 8006038:	e000      	b.n	800603c <HAL_RCC_OscConfig+0x4f8>
        }
      }
    }
  }

  return HAL_OK;
 800603a:	2300      	movs	r3, #0
}
 800603c:	4618      	mov	r0, r3
 800603e:	3718      	adds	r7, #24
 8006040:	46bd      	mov	sp, r7
 8006042:	bd80      	pop	{r7, pc}
 8006044:	40021000 	.word	0x40021000

08006048 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8006048:	b580      	push	{r7, lr}
 800604a:	b084      	sub	sp, #16
 800604c:	af00      	add	r7, sp, #0
 800604e:	6078      	str	r0, [r7, #4]
 8006050:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8006052:	687b      	ldr	r3, [r7, #4]
 8006054:	2b00      	cmp	r3, #0
 8006056:	d101      	bne.n	800605c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8006058:	2301      	movs	r3, #1
 800605a:	e0d0      	b.n	80061fe <HAL_RCC_ClockConfig+0x1b6>
  must be correctly programmed according to the frequency of the CPU clock
    (HCLK) of the device. */

#if defined(FLASH_ACR_LATENCY)
  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800605c:	4b6a      	ldr	r3, [pc, #424]	; (8006208 <HAL_RCC_ClockConfig+0x1c0>)
 800605e:	681b      	ldr	r3, [r3, #0]
 8006060:	f003 0307 	and.w	r3, r3, #7
 8006064:	683a      	ldr	r2, [r7, #0]
 8006066:	429a      	cmp	r2, r3
 8006068:	d910      	bls.n	800608c <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800606a:	4b67      	ldr	r3, [pc, #412]	; (8006208 <HAL_RCC_ClockConfig+0x1c0>)
 800606c:	681b      	ldr	r3, [r3, #0]
 800606e:	f023 0207 	bic.w	r2, r3, #7
 8006072:	4965      	ldr	r1, [pc, #404]	; (8006208 <HAL_RCC_ClockConfig+0x1c0>)
 8006074:	683b      	ldr	r3, [r7, #0]
 8006076:	4313      	orrs	r3, r2
 8006078:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800607a:	4b63      	ldr	r3, [pc, #396]	; (8006208 <HAL_RCC_ClockConfig+0x1c0>)
 800607c:	681b      	ldr	r3, [r3, #0]
 800607e:	f003 0307 	and.w	r3, r3, #7
 8006082:	683a      	ldr	r2, [r7, #0]
 8006084:	429a      	cmp	r2, r3
 8006086:	d001      	beq.n	800608c <HAL_RCC_ClockConfig+0x44>
  {
    return HAL_ERROR;
 8006088:	2301      	movs	r3, #1
 800608a:	e0b8      	b.n	80061fe <HAL_RCC_ClockConfig+0x1b6>
  }
}

#endif /* FLASH_ACR_LATENCY */
/*-------------------------- HCLK Configuration --------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800608c:	687b      	ldr	r3, [r7, #4]
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	f003 0302 	and.w	r3, r3, #2
 8006094:	2b00      	cmp	r3, #0
 8006096:	d020      	beq.n	80060da <HAL_RCC_ClockConfig+0x92>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
    a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006098:	687b      	ldr	r3, [r7, #4]
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	f003 0304 	and.w	r3, r3, #4
 80060a0:	2b00      	cmp	r3, #0
 80060a2:	d005      	beq.n	80060b0 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80060a4:	4b59      	ldr	r3, [pc, #356]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 80060a6:	685b      	ldr	r3, [r3, #4]
 80060a8:	4a58      	ldr	r2, [pc, #352]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 80060aa:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80060ae:	6053      	str	r3, [r2, #4]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80060b0:	687b      	ldr	r3, [r7, #4]
 80060b2:	681b      	ldr	r3, [r3, #0]
 80060b4:	f003 0308 	and.w	r3, r3, #8
 80060b8:	2b00      	cmp	r3, #0
 80060ba:	d005      	beq.n	80060c8 <HAL_RCC_ClockConfig+0x80>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80060bc:	4b53      	ldr	r3, [pc, #332]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 80060be:	685b      	ldr	r3, [r3, #4]
 80060c0:	4a52      	ldr	r2, [pc, #328]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 80060c2:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80060c6:	6053      	str	r3, [r2, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80060c8:	4b50      	ldr	r3, [pc, #320]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 80060ca:	685b      	ldr	r3, [r3, #4]
 80060cc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80060d0:	687b      	ldr	r3, [r7, #4]
 80060d2:	689b      	ldr	r3, [r3, #8]
 80060d4:	494d      	ldr	r1, [pc, #308]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 80060d6:	4313      	orrs	r3, r2
 80060d8:	604b      	str	r3, [r1, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80060da:	687b      	ldr	r3, [r7, #4]
 80060dc:	681b      	ldr	r3, [r3, #0]
 80060de:	f003 0301 	and.w	r3, r3, #1
 80060e2:	2b00      	cmp	r3, #0
 80060e4:	d040      	beq.n	8006168 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	685b      	ldr	r3, [r3, #4]
 80060ea:	2b01      	cmp	r3, #1
 80060ec:	d107      	bne.n	80060fe <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80060ee:	4b47      	ldr	r3, [pc, #284]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 80060f0:	681b      	ldr	r3, [r3, #0]
 80060f2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80060f6:	2b00      	cmp	r3, #0
 80060f8:	d115      	bne.n	8006126 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80060fa:	2301      	movs	r3, #1
 80060fc:	e07f      	b.n	80061fe <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80060fe:	687b      	ldr	r3, [r7, #4]
 8006100:	685b      	ldr	r3, [r3, #4]
 8006102:	2b02      	cmp	r3, #2
 8006104:	d107      	bne.n	8006116 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006106:	4b41      	ldr	r3, [pc, #260]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 8006108:	681b      	ldr	r3, [r3, #0]
 800610a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800610e:	2b00      	cmp	r3, #0
 8006110:	d109      	bne.n	8006126 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006112:	2301      	movs	r3, #1
 8006114:	e073      	b.n	80061fe <HAL_RCC_ClockConfig+0x1b6>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006116:	4b3d      	ldr	r3, [pc, #244]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 8006118:	681b      	ldr	r3, [r3, #0]
 800611a:	f003 0302 	and.w	r3, r3, #2
 800611e:	2b00      	cmp	r3, #0
 8006120:	d101      	bne.n	8006126 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006122:	2301      	movs	r3, #1
 8006124:	e06b      	b.n	80061fe <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006126:	4b39      	ldr	r3, [pc, #228]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 8006128:	685b      	ldr	r3, [r3, #4]
 800612a:	f023 0203 	bic.w	r2, r3, #3
 800612e:	687b      	ldr	r3, [r7, #4]
 8006130:	685b      	ldr	r3, [r3, #4]
 8006132:	4936      	ldr	r1, [pc, #216]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 8006134:	4313      	orrs	r3, r2
 8006136:	604b      	str	r3, [r1, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8006138:	f7ff f892 	bl	8005260 <HAL_GetTick>
 800613c:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800613e:	e00a      	b.n	8006156 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006140:	f7ff f88e 	bl	8005260 <HAL_GetTick>
 8006144:	4602      	mov	r2, r0
 8006146:	68fb      	ldr	r3, [r7, #12]
 8006148:	1ad3      	subs	r3, r2, r3
 800614a:	f241 3288 	movw	r2, #5000	; 0x1388
 800614e:	4293      	cmp	r3, r2
 8006150:	d901      	bls.n	8006156 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8006152:	2303      	movs	r3, #3
 8006154:	e053      	b.n	80061fe <HAL_RCC_ClockConfig+0x1b6>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006156:	4b2d      	ldr	r3, [pc, #180]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 8006158:	685b      	ldr	r3, [r3, #4]
 800615a:	f003 020c 	and.w	r2, r3, #12
 800615e:	687b      	ldr	r3, [r7, #4]
 8006160:	685b      	ldr	r3, [r3, #4]
 8006162:	009b      	lsls	r3, r3, #2
 8006164:	429a      	cmp	r2, r3
 8006166:	d1eb      	bne.n	8006140 <HAL_RCC_ClockConfig+0xf8>
    }
  }

#if defined(FLASH_ACR_LATENCY)
  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8006168:	4b27      	ldr	r3, [pc, #156]	; (8006208 <HAL_RCC_ClockConfig+0x1c0>)
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	f003 0307 	and.w	r3, r3, #7
 8006170:	683a      	ldr	r2, [r7, #0]
 8006172:	429a      	cmp	r2, r3
 8006174:	d210      	bcs.n	8006198 <HAL_RCC_ClockConfig+0x150>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006176:	4b24      	ldr	r3, [pc, #144]	; (8006208 <HAL_RCC_ClockConfig+0x1c0>)
 8006178:	681b      	ldr	r3, [r3, #0]
 800617a:	f023 0207 	bic.w	r2, r3, #7
 800617e:	4922      	ldr	r1, [pc, #136]	; (8006208 <HAL_RCC_ClockConfig+0x1c0>)
 8006180:	683b      	ldr	r3, [r7, #0]
 8006182:	4313      	orrs	r3, r2
 8006184:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006186:	4b20      	ldr	r3, [pc, #128]	; (8006208 <HAL_RCC_ClockConfig+0x1c0>)
 8006188:	681b      	ldr	r3, [r3, #0]
 800618a:	f003 0307 	and.w	r3, r3, #7
 800618e:	683a      	ldr	r2, [r7, #0]
 8006190:	429a      	cmp	r2, r3
 8006192:	d001      	beq.n	8006198 <HAL_RCC_ClockConfig+0x150>
  {
    return HAL_ERROR;
 8006194:	2301      	movs	r3, #1
 8006196:	e032      	b.n	80061fe <HAL_RCC_ClockConfig+0x1b6>
  }
}
#endif /* FLASH_ACR_LATENCY */

/*-------------------------- PCLK1 Configuration ---------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	681b      	ldr	r3, [r3, #0]
 800619c:	f003 0304 	and.w	r3, r3, #4
 80061a0:	2b00      	cmp	r3, #0
 80061a2:	d008      	beq.n	80061b6 <HAL_RCC_ClockConfig+0x16e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80061a4:	4b19      	ldr	r3, [pc, #100]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 80061a6:	685b      	ldr	r3, [r3, #4]
 80061a8:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80061ac:	687b      	ldr	r3, [r7, #4]
 80061ae:	68db      	ldr	r3, [r3, #12]
 80061b0:	4916      	ldr	r1, [pc, #88]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 80061b2:	4313      	orrs	r3, r2
 80061b4:	604b      	str	r3, [r1, #4]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80061b6:	687b      	ldr	r3, [r7, #4]
 80061b8:	681b      	ldr	r3, [r3, #0]
 80061ba:	f003 0308 	and.w	r3, r3, #8
 80061be:	2b00      	cmp	r3, #0
 80061c0:	d009      	beq.n	80061d6 <HAL_RCC_ClockConfig+0x18e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 80061c2:	4b12      	ldr	r3, [pc, #72]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 80061c4:	685b      	ldr	r3, [r3, #4]
 80061c6:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80061ca:	687b      	ldr	r3, [r7, #4]
 80061cc:	691b      	ldr	r3, [r3, #16]
 80061ce:	00db      	lsls	r3, r3, #3
 80061d0:	490e      	ldr	r1, [pc, #56]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 80061d2:	4313      	orrs	r3, r2
 80061d4:	604b      	str	r3, [r1, #4]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80061d6:	f000 f821 	bl	800621c <HAL_RCC_GetSysClockFreq>
 80061da:	4602      	mov	r2, r0
 80061dc:	4b0b      	ldr	r3, [pc, #44]	; (800620c <HAL_RCC_ClockConfig+0x1c4>)
 80061de:	685b      	ldr	r3, [r3, #4]
 80061e0:	091b      	lsrs	r3, r3, #4
 80061e2:	f003 030f 	and.w	r3, r3, #15
 80061e6:	490a      	ldr	r1, [pc, #40]	; (8006210 <HAL_RCC_ClockConfig+0x1c8>)
 80061e8:	5ccb      	ldrb	r3, [r1, r3]
 80061ea:	fa22 f303 	lsr.w	r3, r2, r3
 80061ee:	4a09      	ldr	r2, [pc, #36]	; (8006214 <HAL_RCC_ClockConfig+0x1cc>)
 80061f0:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 80061f2:	4b09      	ldr	r3, [pc, #36]	; (8006218 <HAL_RCC_ClockConfig+0x1d0>)
 80061f4:	681b      	ldr	r3, [r3, #0]
 80061f6:	4618      	mov	r0, r3
 80061f8:	f7fe fff0 	bl	80051dc <HAL_InitTick>

  return HAL_OK;
 80061fc:	2300      	movs	r3, #0
}
 80061fe:	4618      	mov	r0, r3
 8006200:	3710      	adds	r7, #16
 8006202:	46bd      	mov	sp, r7
 8006204:	bd80      	pop	{r7, pc}
 8006206:	bf00      	nop
 8006208:	40022000 	.word	0x40022000
 800620c:	40021000 	.word	0x40021000
 8006210:	08006e68 	.word	0x08006e68
 8006214:	20000000 	.word	0x20000000
 8006218:	20000004 	.word	0x20000004

0800621c <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 800621c:	b490      	push	{r4, r7}
 800621e:	b08a      	sub	sp, #40	; 0x28
 8006220:	af00      	add	r7, sp, #0
#if defined(RCC_CFGR2_PREDIV1SRC)
  const uint8_t aPLLMULFactorTable[14] = {0, 0, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 13};
  const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
#else
  const uint8_t aPLLMULFactorTable[16] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16};
 8006222:	4b29      	ldr	r3, [pc, #164]	; (80062c8 <HAL_RCC_GetSysClockFreq+0xac>)
 8006224:	1d3c      	adds	r4, r7, #4
 8006226:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8006228:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
#if defined(RCC_CFGR2_PREDIV1)
  const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
#else
  const uint8_t aPredivFactorTable[2] = {1, 2};
 800622c:	f240 2301 	movw	r3, #513	; 0x201
 8006230:	803b      	strh	r3, [r7, #0]
#endif /*RCC_CFGR2_PREDIV1*/

#endif
  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8006232:	2300      	movs	r3, #0
 8006234:	61fb      	str	r3, [r7, #28]
 8006236:	2300      	movs	r3, #0
 8006238:	61bb      	str	r3, [r7, #24]
 800623a:	2300      	movs	r3, #0
 800623c:	627b      	str	r3, [r7, #36]	; 0x24
 800623e:	2300      	movs	r3, #0
 8006240:	617b      	str	r3, [r7, #20]
  uint32_t sysclockfreq = 0U;
 8006242:	2300      	movs	r3, #0
 8006244:	623b      	str	r3, [r7, #32]
#if defined(RCC_CFGR2_PREDIV1SRC)
  uint32_t prediv2 = 0U, pll2mul = 0U;
#endif /*RCC_CFGR2_PREDIV1SRC*/

  tmpreg = RCC->CFGR;
 8006246:	4b21      	ldr	r3, [pc, #132]	; (80062cc <HAL_RCC_GetSysClockFreq+0xb0>)
 8006248:	685b      	ldr	r3, [r3, #4]
 800624a:	61fb      	str	r3, [r7, #28]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 800624c:	69fb      	ldr	r3, [r7, #28]
 800624e:	f003 030c 	and.w	r3, r3, #12
 8006252:	2b04      	cmp	r3, #4
 8006254:	d002      	beq.n	800625c <HAL_RCC_GetSysClockFreq+0x40>
 8006256:	2b08      	cmp	r3, #8
 8006258:	d003      	beq.n	8006262 <HAL_RCC_GetSysClockFreq+0x46>
 800625a:	e02b      	b.n	80062b4 <HAL_RCC_GetSysClockFreq+0x98>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 800625c:	4b1c      	ldr	r3, [pc, #112]	; (80062d0 <HAL_RCC_GetSysClockFreq+0xb4>)
 800625e:	623b      	str	r3, [r7, #32]
      break;
 8006260:	e02b      	b.n	80062ba <HAL_RCC_GetSysClockFreq+0x9e>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 8006262:	69fb      	ldr	r3, [r7, #28]
 8006264:	0c9b      	lsrs	r3, r3, #18
 8006266:	f003 030f 	and.w	r3, r3, #15
 800626a:	3328      	adds	r3, #40	; 0x28
 800626c:	443b      	add	r3, r7
 800626e:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8006272:	617b      	str	r3, [r7, #20]
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 8006274:	69fb      	ldr	r3, [r7, #28]
 8006276:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800627a:	2b00      	cmp	r3, #0
 800627c:	d012      	beq.n	80062a4 <HAL_RCC_GetSysClockFreq+0x88>
      {
#if defined(RCC_CFGR2_PREDIV1)
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1_Pos];
#else
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 800627e:	4b13      	ldr	r3, [pc, #76]	; (80062cc <HAL_RCC_GetSysClockFreq+0xb0>)
 8006280:	685b      	ldr	r3, [r3, #4]
 8006282:	0c5b      	lsrs	r3, r3, #17
 8006284:	f003 0301 	and.w	r3, r3, #1
 8006288:	3328      	adds	r3, #40	; 0x28
 800628a:	443b      	add	r3, r7
 800628c:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8006290:	61bb      	str	r3, [r7, #24]
        {
          pllclk = pllclk / 2;
        }
#else
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 8006292:	697b      	ldr	r3, [r7, #20]
 8006294:	4a0e      	ldr	r2, [pc, #56]	; (80062d0 <HAL_RCC_GetSysClockFreq+0xb4>)
 8006296:	fb03 f202 	mul.w	r2, r3, r2
 800629a:	69bb      	ldr	r3, [r7, #24]
 800629c:	fbb2 f3f3 	udiv	r3, r2, r3
 80062a0:	627b      	str	r3, [r7, #36]	; 0x24
 80062a2:	e004      	b.n	80062ae <HAL_RCC_GetSysClockFreq+0x92>
#endif /*RCC_CFGR2_PREDIV1SRC*/
      }
      else
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 80062a4:	697b      	ldr	r3, [r7, #20]
 80062a6:	4a0b      	ldr	r2, [pc, #44]	; (80062d4 <HAL_RCC_GetSysClockFreq+0xb8>)
 80062a8:	fb02 f303 	mul.w	r3, r2, r3
 80062ac:	627b      	str	r3, [r7, #36]	; 0x24
      }
      sysclockfreq = pllclk;
 80062ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80062b0:	623b      	str	r3, [r7, #32]
      break;
 80062b2:	e002      	b.n	80062ba <HAL_RCC_GetSysClockFreq+0x9e>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 80062b4:	4b06      	ldr	r3, [pc, #24]	; (80062d0 <HAL_RCC_GetSysClockFreq+0xb4>)
 80062b6:	623b      	str	r3, [r7, #32]
      break;
 80062b8:	bf00      	nop
    }
  }
  return sysclockfreq;
 80062ba:	6a3b      	ldr	r3, [r7, #32]
}
 80062bc:	4618      	mov	r0, r3
 80062be:	3728      	adds	r7, #40	; 0x28
 80062c0:	46bd      	mov	sp, r7
 80062c2:	bc90      	pop	{r4, r7}
 80062c4:	4770      	bx	lr
 80062c6:	bf00      	nop
 80062c8:	08006e58 	.word	0x08006e58
 80062cc:	40021000 	.word	0x40021000
 80062d0:	007a1200 	.word	0x007a1200
 80062d4:	003d0900 	.word	0x003d0900

080062d8 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80062d8:	b480      	push	{r7}
 80062da:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80062dc:	4b02      	ldr	r3, [pc, #8]	; (80062e8 <HAL_RCC_GetHCLKFreq+0x10>)
 80062de:	681b      	ldr	r3, [r3, #0]
}
 80062e0:	4618      	mov	r0, r3
 80062e2:	46bd      	mov	sp, r7
 80062e4:	bc80      	pop	{r7}
 80062e6:	4770      	bx	lr
 80062e8:	20000000 	.word	0x20000000

080062ec <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80062ec:	b580      	push	{r7, lr}
 80062ee:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80062f0:	f7ff fff2 	bl	80062d8 <HAL_RCC_GetHCLKFreq>
 80062f4:	4602      	mov	r2, r0
 80062f6:	4b05      	ldr	r3, [pc, #20]	; (800630c <HAL_RCC_GetPCLK1Freq+0x20>)
 80062f8:	685b      	ldr	r3, [r3, #4]
 80062fa:	0a1b      	lsrs	r3, r3, #8
 80062fc:	f003 0307 	and.w	r3, r3, #7
 8006300:	4903      	ldr	r1, [pc, #12]	; (8006310 <HAL_RCC_GetPCLK1Freq+0x24>)
 8006302:	5ccb      	ldrb	r3, [r1, r3]
 8006304:	fa22 f303 	lsr.w	r3, r2, r3
}
 8006308:	4618      	mov	r0, r3
 800630a:	bd80      	pop	{r7, pc}
 800630c:	40021000 	.word	0x40021000
 8006310:	08006e78 	.word	0x08006e78

08006314 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8006314:	b580      	push	{r7, lr}
 8006316:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8006318:	f7ff ffde 	bl	80062d8 <HAL_RCC_GetHCLKFreq>
 800631c:	4602      	mov	r2, r0
 800631e:	4b05      	ldr	r3, [pc, #20]	; (8006334 <HAL_RCC_GetPCLK2Freq+0x20>)
 8006320:	685b      	ldr	r3, [r3, #4]
 8006322:	0adb      	lsrs	r3, r3, #11
 8006324:	f003 0307 	and.w	r3, r3, #7
 8006328:	4903      	ldr	r1, [pc, #12]	; (8006338 <HAL_RCC_GetPCLK2Freq+0x24>)
 800632a:	5ccb      	ldrb	r3, [r1, r3]
 800632c:	fa22 f303 	lsr.w	r3, r2, r3
}
 8006330:	4618      	mov	r0, r3
 8006332:	bd80      	pop	{r7, pc}
 8006334:	40021000 	.word	0x40021000
 8006338:	08006e78 	.word	0x08006e78

0800633c <RCC_Delay>:
  * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
  * @param  mdelay: specifies the delay time length, in milliseconds.
  * @retval None
  */
static void RCC_Delay(uint32_t mdelay)
{
 800633c:	b480      	push	{r7}
 800633e:	b085      	sub	sp, #20
 8006340:	af00      	add	r7, sp, #0
 8006342:	6078      	str	r0, [r7, #4]
  __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 8006344:	4b0a      	ldr	r3, [pc, #40]	; (8006370 <RCC_Delay+0x34>)
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	4a0a      	ldr	r2, [pc, #40]	; (8006374 <RCC_Delay+0x38>)
 800634a:	fba2 2303 	umull	r2, r3, r2, r3
 800634e:	0a5b      	lsrs	r3, r3, #9
 8006350:	687a      	ldr	r2, [r7, #4]
 8006352:	fb02 f303 	mul.w	r3, r2, r3
 8006356:	60fb      	str	r3, [r7, #12]
  do
  {
    __NOP();
 8006358:	bf00      	nop
  }
  while (Delay --);
 800635a:	68fb      	ldr	r3, [r7, #12]
 800635c:	1e5a      	subs	r2, r3, #1
 800635e:	60fa      	str	r2, [r7, #12]
 8006360:	2b00      	cmp	r3, #0
 8006362:	d1f9      	bne.n	8006358 <RCC_Delay+0x1c>
}
 8006364:	bf00      	nop
 8006366:	bf00      	nop
 8006368:	3714      	adds	r7, #20
 800636a:	46bd      	mov	sp, r7
 800636c:	bc80      	pop	{r7}
 800636e:	4770      	bx	lr
 8006370:	20000000 	.word	0x20000000
 8006374:	10624dd3 	.word	0x10624dd3

08006378 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8006378:	b580      	push	{r7, lr}
 800637a:	b082      	sub	sp, #8
 800637c:	af00      	add	r7, sp, #0
 800637e:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	2b00      	cmp	r3, #0
 8006384:	d101      	bne.n	800638a <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8006386:	2301      	movs	r3, #1
 8006388:	e03f      	b.n	800640a <HAL_UART_Init+0x92>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
#if defined(USART_CR1_OVER8)
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
#endif /* USART_CR1_OVER8 */

  if (huart->gState == HAL_UART_STATE_RESET)
 800638a:	687b      	ldr	r3, [r7, #4]
 800638c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006390:	b2db      	uxtb	r3, r3
 8006392:	2b00      	cmp	r3, #0
 8006394:	d106      	bne.n	80063a4 <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8006396:	687b      	ldr	r3, [r7, #4]
 8006398:	2200      	movs	r2, #0
 800639a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 800639e:	6878      	ldr	r0, [r7, #4]
 80063a0:	f7fe fe8c 	bl	80050bc <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 80063a4:	687b      	ldr	r3, [r7, #4]
 80063a6:	2224      	movs	r2, #36	; 0x24
 80063a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 80063ac:	687b      	ldr	r3, [r7, #4]
 80063ae:	681b      	ldr	r3, [r3, #0]
 80063b0:	68da      	ldr	r2, [r3, #12]
 80063b2:	687b      	ldr	r3, [r7, #4]
 80063b4:	681b      	ldr	r3, [r3, #0]
 80063b6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80063ba:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 80063bc:	6878      	ldr	r0, [r7, #4]
 80063be:	f000 fc85 	bl	8006ccc <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80063c2:	687b      	ldr	r3, [r7, #4]
 80063c4:	681b      	ldr	r3, [r3, #0]
 80063c6:	691a      	ldr	r2, [r3, #16]
 80063c8:	687b      	ldr	r3, [r7, #4]
 80063ca:	681b      	ldr	r3, [r3, #0]
 80063cc:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80063d0:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80063d2:	687b      	ldr	r3, [r7, #4]
 80063d4:	681b      	ldr	r3, [r3, #0]
 80063d6:	695a      	ldr	r2, [r3, #20]
 80063d8:	687b      	ldr	r3, [r7, #4]
 80063da:	681b      	ldr	r3, [r3, #0]
 80063dc:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80063e0:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 80063e2:	687b      	ldr	r3, [r7, #4]
 80063e4:	681b      	ldr	r3, [r3, #0]
 80063e6:	68da      	ldr	r2, [r3, #12]
 80063e8:	687b      	ldr	r3, [r7, #4]
 80063ea:	681b      	ldr	r3, [r3, #0]
 80063ec:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80063f0:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80063f2:	687b      	ldr	r3, [r7, #4]
 80063f4:	2200      	movs	r2, #0
 80063f6:	641a      	str	r2, [r3, #64]	; 0x40
  huart->gState = HAL_UART_STATE_READY;
 80063f8:	687b      	ldr	r3, [r7, #4]
 80063fa:	2220      	movs	r2, #32
 80063fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  huart->RxState = HAL_UART_STATE_READY;
 8006400:	687b      	ldr	r3, [r7, #4]
 8006402:	2220      	movs	r2, #32
 8006404:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 8006408:	2300      	movs	r3, #0
}
 800640a:	4618      	mov	r0, r3
 800640c:	3708      	adds	r7, #8
 800640e:	46bd      	mov	sp, r7
 8006410:	bd80      	pop	{r7, pc}

08006412 <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006412:	b580      	push	{r7, lr}
 8006414:	b08a      	sub	sp, #40	; 0x28
 8006416:	af02      	add	r7, sp, #8
 8006418:	60f8      	str	r0, [r7, #12]
 800641a:	60b9      	str	r1, [r7, #8]
 800641c:	603b      	str	r3, [r7, #0]
 800641e:	4613      	mov	r3, r2
 8006420:	80fb      	strh	r3, [r7, #6]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart = 0U;
 8006422:	2300      	movs	r3, #0
 8006424:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8006426:	68fb      	ldr	r3, [r7, #12]
 8006428:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800642c:	b2db      	uxtb	r3, r3
 800642e:	2b20      	cmp	r3, #32
 8006430:	d17c      	bne.n	800652c <HAL_UART_Transmit+0x11a>
  {
    if ((pData == NULL) || (Size == 0U))
 8006432:	68bb      	ldr	r3, [r7, #8]
 8006434:	2b00      	cmp	r3, #0
 8006436:	d002      	beq.n	800643e <HAL_UART_Transmit+0x2c>
 8006438:	88fb      	ldrh	r3, [r7, #6]
 800643a:	2b00      	cmp	r3, #0
 800643c:	d101      	bne.n	8006442 <HAL_UART_Transmit+0x30>
    {
      return  HAL_ERROR;
 800643e:	2301      	movs	r3, #1
 8006440:	e075      	b.n	800652e <HAL_UART_Transmit+0x11c>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8006442:	68fb      	ldr	r3, [r7, #12]
 8006444:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006448:	2b01      	cmp	r3, #1
 800644a:	d101      	bne.n	8006450 <HAL_UART_Transmit+0x3e>
 800644c:	2302      	movs	r3, #2
 800644e:	e06e      	b.n	800652e <HAL_UART_Transmit+0x11c>
 8006450:	68fb      	ldr	r3, [r7, #12]
 8006452:	2201      	movs	r2, #1
 8006454:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006458:	68fb      	ldr	r3, [r7, #12]
 800645a:	2200      	movs	r2, #0
 800645c:	641a      	str	r2, [r3, #64]	; 0x40
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800645e:	68fb      	ldr	r3, [r7, #12]
 8006460:	2221      	movs	r2, #33	; 0x21
 8006462:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8006466:	f7fe fefb 	bl	8005260 <HAL_GetTick>
 800646a:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 800646c:	68fb      	ldr	r3, [r7, #12]
 800646e:	88fa      	ldrh	r2, [r7, #6]
 8006470:	849a      	strh	r2, [r3, #36]	; 0x24
    huart->TxXferCount = Size;
 8006472:	68fb      	ldr	r3, [r7, #12]
 8006474:	88fa      	ldrh	r2, [r7, #6]
 8006476:	84da      	strh	r2, [r3, #38]	; 0x26

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006478:	68fb      	ldr	r3, [r7, #12]
 800647a:	689b      	ldr	r3, [r3, #8]
 800647c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006480:	d108      	bne.n	8006494 <HAL_UART_Transmit+0x82>
 8006482:	68fb      	ldr	r3, [r7, #12]
 8006484:	691b      	ldr	r3, [r3, #16]
 8006486:	2b00      	cmp	r3, #0
 8006488:	d104      	bne.n	8006494 <HAL_UART_Transmit+0x82>
    {
      pdata8bits  = NULL;
 800648a:	2300      	movs	r3, #0
 800648c:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 800648e:	68bb      	ldr	r3, [r7, #8]
 8006490:	61bb      	str	r3, [r7, #24]
 8006492:	e003      	b.n	800649c <HAL_UART_Transmit+0x8a>
    }
    else
    {
      pdata8bits  = pData;
 8006494:	68bb      	ldr	r3, [r7, #8]
 8006496:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8006498:	2300      	movs	r3, #0
 800649a:	61bb      	str	r3, [r7, #24]
    }

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 800649c:	68fb      	ldr	r3, [r7, #12]
 800649e:	2200      	movs	r2, #0
 80064a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    while (huart->TxXferCount > 0U)
 80064a4:	e02a      	b.n	80064fc <HAL_UART_Transmit+0xea>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80064a6:	683b      	ldr	r3, [r7, #0]
 80064a8:	9300      	str	r3, [sp, #0]
 80064aa:	697b      	ldr	r3, [r7, #20]
 80064ac:	2200      	movs	r2, #0
 80064ae:	2180      	movs	r1, #128	; 0x80
 80064b0:	68f8      	ldr	r0, [r7, #12]
 80064b2:	f000 fa38 	bl	8006926 <UART_WaitOnFlagUntilTimeout>
 80064b6:	4603      	mov	r3, r0
 80064b8:	2b00      	cmp	r3, #0
 80064ba:	d001      	beq.n	80064c0 <HAL_UART_Transmit+0xae>
      {
        return HAL_TIMEOUT;
 80064bc:	2303      	movs	r3, #3
 80064be:	e036      	b.n	800652e <HAL_UART_Transmit+0x11c>
      }
      if (pdata8bits == NULL)
 80064c0:	69fb      	ldr	r3, [r7, #28]
 80064c2:	2b00      	cmp	r3, #0
 80064c4:	d10b      	bne.n	80064de <HAL_UART_Transmit+0xcc>
      {
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80064c6:	69bb      	ldr	r3, [r7, #24]
 80064c8:	881b      	ldrh	r3, [r3, #0]
 80064ca:	461a      	mov	r2, r3
 80064cc:	68fb      	ldr	r3, [r7, #12]
 80064ce:	681b      	ldr	r3, [r3, #0]
 80064d0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80064d4:	605a      	str	r2, [r3, #4]
        pdata16bits++;
 80064d6:	69bb      	ldr	r3, [r7, #24]
 80064d8:	3302      	adds	r3, #2
 80064da:	61bb      	str	r3, [r7, #24]
 80064dc:	e007      	b.n	80064ee <HAL_UART_Transmit+0xdc>
      }
      else
      {
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 80064de:	69fb      	ldr	r3, [r7, #28]
 80064e0:	781a      	ldrb	r2, [r3, #0]
 80064e2:	68fb      	ldr	r3, [r7, #12]
 80064e4:	681b      	ldr	r3, [r3, #0]
 80064e6:	605a      	str	r2, [r3, #4]
        pdata8bits++;
 80064e8:	69fb      	ldr	r3, [r7, #28]
 80064ea:	3301      	adds	r3, #1
 80064ec:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 80064ee:	68fb      	ldr	r3, [r7, #12]
 80064f0:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80064f2:	b29b      	uxth	r3, r3
 80064f4:	3b01      	subs	r3, #1
 80064f6:	b29a      	uxth	r2, r3
 80064f8:	68fb      	ldr	r3, [r7, #12]
 80064fa:	84da      	strh	r2, [r3, #38]	; 0x26
    while (huart->TxXferCount > 0U)
 80064fc:	68fb      	ldr	r3, [r7, #12]
 80064fe:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8006500:	b29b      	uxth	r3, r3
 8006502:	2b00      	cmp	r3, #0
 8006504:	d1cf      	bne.n	80064a6 <HAL_UART_Transmit+0x94>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8006506:	683b      	ldr	r3, [r7, #0]
 8006508:	9300      	str	r3, [sp, #0]
 800650a:	697b      	ldr	r3, [r7, #20]
 800650c:	2200      	movs	r2, #0
 800650e:	2140      	movs	r1, #64	; 0x40
 8006510:	68f8      	ldr	r0, [r7, #12]
 8006512:	f000 fa08 	bl	8006926 <UART_WaitOnFlagUntilTimeout>
 8006516:	4603      	mov	r3, r0
 8006518:	2b00      	cmp	r3, #0
 800651a:	d001      	beq.n	8006520 <HAL_UART_Transmit+0x10e>
    {
      return HAL_TIMEOUT;
 800651c:	2303      	movs	r3, #3
 800651e:	e006      	b.n	800652e <HAL_UART_Transmit+0x11c>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8006520:	68fb      	ldr	r3, [r7, #12]
 8006522:	2220      	movs	r2, #32
 8006524:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 8006528:	2300      	movs	r3, #0
 800652a:	e000      	b.n	800652e <HAL_UART_Transmit+0x11c>
  }
  else
  {
    return HAL_BUSY;
 800652c:	2302      	movs	r3, #2
  }
}
 800652e:	4618      	mov	r0, r3
 8006530:	3720      	adds	r7, #32
 8006532:	46bd      	mov	sp, r7
 8006534:	bd80      	pop	{r7, pc}

08006536 <HAL_UART_Receive_IT>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8006536:	b580      	push	{r7, lr}
 8006538:	b084      	sub	sp, #16
 800653a:	af00      	add	r7, sp, #0
 800653c:	60f8      	str	r0, [r7, #12]
 800653e:	60b9      	str	r1, [r7, #8]
 8006540:	4613      	mov	r3, r2
 8006542:	80fb      	strh	r3, [r7, #6]
  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8006544:	68fb      	ldr	r3, [r7, #12]
 8006546:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800654a:	b2db      	uxtb	r3, r3
 800654c:	2b20      	cmp	r3, #32
 800654e:	d11d      	bne.n	800658c <HAL_UART_Receive_IT+0x56>
  {
    if ((pData == NULL) || (Size == 0U))
 8006550:	68bb      	ldr	r3, [r7, #8]
 8006552:	2b00      	cmp	r3, #0
 8006554:	d002      	beq.n	800655c <HAL_UART_Receive_IT+0x26>
 8006556:	88fb      	ldrh	r3, [r7, #6]
 8006558:	2b00      	cmp	r3, #0
 800655a:	d101      	bne.n	8006560 <HAL_UART_Receive_IT+0x2a>
    {
      return HAL_ERROR;
 800655c:	2301      	movs	r3, #1
 800655e:	e016      	b.n	800658e <HAL_UART_Receive_IT+0x58>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8006560:	68fb      	ldr	r3, [r7, #12]
 8006562:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006566:	2b01      	cmp	r3, #1
 8006568:	d101      	bne.n	800656e <HAL_UART_Receive_IT+0x38>
 800656a:	2302      	movs	r3, #2
 800656c:	e00f      	b.n	800658e <HAL_UART_Receive_IT+0x58>
 800656e:	68fb      	ldr	r3, [r7, #12]
 8006570:	2201      	movs	r2, #1
 8006572:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Set Reception type to Standard reception */
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006576:	68fb      	ldr	r3, [r7, #12]
 8006578:	2200      	movs	r2, #0
 800657a:	631a      	str	r2, [r3, #48]	; 0x30

    return(UART_Start_Receive_IT(huart, pData, Size));
 800657c:	88fb      	ldrh	r3, [r7, #6]
 800657e:	461a      	mov	r2, r3
 8006580:	68b9      	ldr	r1, [r7, #8]
 8006582:	68f8      	ldr	r0, [r7, #12]
 8006584:	f000 fa19 	bl	80069ba <UART_Start_Receive_IT>
 8006588:	4603      	mov	r3, r0
 800658a:	e000      	b.n	800658e <HAL_UART_Receive_IT+0x58>
  }
  else
  {
    return HAL_BUSY;
 800658c:	2302      	movs	r3, #2
  }
}
 800658e:	4618      	mov	r0, r3
 8006590:	3710      	adds	r7, #16
 8006592:	46bd      	mov	sp, r7
 8006594:	bd80      	pop	{r7, pc}
	...

08006598 <HAL_UART_IRQHandler>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 8006598:	b580      	push	{r7, lr}
 800659a:	b08a      	sub	sp, #40	; 0x28
 800659c:	af00      	add	r7, sp, #0
 800659e:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 80065a0:	687b      	ldr	r3, [r7, #4]
 80065a2:	681b      	ldr	r3, [r3, #0]
 80065a4:	681b      	ldr	r3, [r3, #0]
 80065a6:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 80065a8:	687b      	ldr	r3, [r7, #4]
 80065aa:	681b      	ldr	r3, [r3, #0]
 80065ac:	68db      	ldr	r3, [r3, #12]
 80065ae:	623b      	str	r3, [r7, #32]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 80065b0:	687b      	ldr	r3, [r7, #4]
 80065b2:	681b      	ldr	r3, [r3, #0]
 80065b4:	695b      	ldr	r3, [r3, #20]
 80065b6:	61fb      	str	r3, [r7, #28]
  uint32_t errorflags = 0x00U;
 80065b8:	2300      	movs	r3, #0
 80065ba:	61bb      	str	r3, [r7, #24]
  uint32_t dmarequest = 0x00U;
 80065bc:	2300      	movs	r3, #0
 80065be:	617b      	str	r3, [r7, #20]

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 80065c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065c2:	f003 030f 	and.w	r3, r3, #15
 80065c6:	61bb      	str	r3, [r7, #24]
  if (errorflags == RESET)
 80065c8:	69bb      	ldr	r3, [r7, #24]
 80065ca:	2b00      	cmp	r3, #0
 80065cc:	d10d      	bne.n	80065ea <HAL_UART_IRQHandler+0x52>
  {
    /* UART in mode Receiver -------------------------------------------------*/
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 80065ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065d0:	f003 0320 	and.w	r3, r3, #32
 80065d4:	2b00      	cmp	r3, #0
 80065d6:	d008      	beq.n	80065ea <HAL_UART_IRQHandler+0x52>
 80065d8:	6a3b      	ldr	r3, [r7, #32]
 80065da:	f003 0320 	and.w	r3, r3, #32
 80065de:	2b00      	cmp	r3, #0
 80065e0:	d003      	beq.n	80065ea <HAL_UART_IRQHandler+0x52>
    {
      UART_Receive_IT(huart);
 80065e2:	6878      	ldr	r0, [r7, #4]
 80065e4:	f000 fac9 	bl	8006b7a <UART_Receive_IT>
      return;
 80065e8:	e17b      	b.n	80068e2 <HAL_UART_IRQHandler+0x34a>
    }
  }

  /* If some errors occur */
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 80065ea:	69bb      	ldr	r3, [r7, #24]
 80065ec:	2b00      	cmp	r3, #0
 80065ee:	f000 80b1 	beq.w	8006754 <HAL_UART_IRQHandler+0x1bc>
 80065f2:	69fb      	ldr	r3, [r7, #28]
 80065f4:	f003 0301 	and.w	r3, r3, #1
 80065f8:	2b00      	cmp	r3, #0
 80065fa:	d105      	bne.n	8006608 <HAL_UART_IRQHandler+0x70>
 80065fc:	6a3b      	ldr	r3, [r7, #32]
 80065fe:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8006602:	2b00      	cmp	r3, #0
 8006604:	f000 80a6 	beq.w	8006754 <HAL_UART_IRQHandler+0x1bc>
  {
    /* UART parity error interrupt occurred ----------------------------------*/
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8006608:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800660a:	f003 0301 	and.w	r3, r3, #1
 800660e:	2b00      	cmp	r3, #0
 8006610:	d00a      	beq.n	8006628 <HAL_UART_IRQHandler+0x90>
 8006612:	6a3b      	ldr	r3, [r7, #32]
 8006614:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006618:	2b00      	cmp	r3, #0
 800661a:	d005      	beq.n	8006628 <HAL_UART_IRQHandler+0x90>
    {
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 800661c:	687b      	ldr	r3, [r7, #4]
 800661e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006620:	f043 0201 	orr.w	r2, r3, #1
 8006624:	687b      	ldr	r3, [r7, #4]
 8006626:	641a      	str	r2, [r3, #64]	; 0x40
    }

    /* UART noise error interrupt occurred -----------------------------------*/
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8006628:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800662a:	f003 0304 	and.w	r3, r3, #4
 800662e:	2b00      	cmp	r3, #0
 8006630:	d00a      	beq.n	8006648 <HAL_UART_IRQHandler+0xb0>
 8006632:	69fb      	ldr	r3, [r7, #28]
 8006634:	f003 0301 	and.w	r3, r3, #1
 8006638:	2b00      	cmp	r3, #0
 800663a:	d005      	beq.n	8006648 <HAL_UART_IRQHandler+0xb0>
    {
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 800663c:	687b      	ldr	r3, [r7, #4]
 800663e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006640:	f043 0202 	orr.w	r2, r3, #2
 8006644:	687b      	ldr	r3, [r7, #4]
 8006646:	641a      	str	r2, [r3, #64]	; 0x40
    }

    /* UART frame error interrupt occurred -----------------------------------*/
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8006648:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800664a:	f003 0302 	and.w	r3, r3, #2
 800664e:	2b00      	cmp	r3, #0
 8006650:	d00a      	beq.n	8006668 <HAL_UART_IRQHandler+0xd0>
 8006652:	69fb      	ldr	r3, [r7, #28]
 8006654:	f003 0301 	and.w	r3, r3, #1
 8006658:	2b00      	cmp	r3, #0
 800665a:	d005      	beq.n	8006668 <HAL_UART_IRQHandler+0xd0>
    {
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 800665c:	687b      	ldr	r3, [r7, #4]
 800665e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006660:	f043 0204 	orr.w	r2, r3, #4
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	641a      	str	r2, [r3, #64]	; 0x40
    }

    /* UART Over-Run interrupt occurred --------------------------------------*/
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 8006668:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800666a:	f003 0308 	and.w	r3, r3, #8
 800666e:	2b00      	cmp	r3, #0
 8006670:	d00f      	beq.n	8006692 <HAL_UART_IRQHandler+0xfa>
 8006672:	6a3b      	ldr	r3, [r7, #32]
 8006674:	f003 0320 	and.w	r3, r3, #32
 8006678:	2b00      	cmp	r3, #0
 800667a:	d104      	bne.n	8006686 <HAL_UART_IRQHandler+0xee>
 800667c:	69fb      	ldr	r3, [r7, #28]
 800667e:	f003 0301 	and.w	r3, r3, #1
 8006682:	2b00      	cmp	r3, #0
 8006684:	d005      	beq.n	8006692 <HAL_UART_IRQHandler+0xfa>
    {
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800668a:	f043 0208 	orr.w	r2, r3, #8
 800668e:	687b      	ldr	r3, [r7, #4]
 8006690:	641a      	str	r2, [r3, #64]	; 0x40
    }

    /* Call UART Error Call back function if need be --------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8006692:	687b      	ldr	r3, [r7, #4]
 8006694:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006696:	2b00      	cmp	r3, #0
 8006698:	f000 811e 	beq.w	80068d8 <HAL_UART_IRQHandler+0x340>
    {
      /* UART in mode Receiver -----------------------------------------------*/
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 800669c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800669e:	f003 0320 	and.w	r3, r3, #32
 80066a2:	2b00      	cmp	r3, #0
 80066a4:	d007      	beq.n	80066b6 <HAL_UART_IRQHandler+0x11e>
 80066a6:	6a3b      	ldr	r3, [r7, #32]
 80066a8:	f003 0320 	and.w	r3, r3, #32
 80066ac:	2b00      	cmp	r3, #0
 80066ae:	d002      	beq.n	80066b6 <HAL_UART_IRQHandler+0x11e>
      {
        UART_Receive_IT(huart);
 80066b0:	6878      	ldr	r0, [r7, #4]
 80066b2:	f000 fa62 	bl	8006b7a <UART_Receive_IT>
      }

      /* If Overrun error occurs, or if any error occurs in DMA mode reception,
         consider error as blocking */
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 80066b6:	687b      	ldr	r3, [r7, #4]
 80066b8:	681b      	ldr	r3, [r3, #0]
 80066ba:	695b      	ldr	r3, [r3, #20]
 80066bc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80066c0:	2b00      	cmp	r3, #0
 80066c2:	bf14      	ite	ne
 80066c4:	2301      	movne	r3, #1
 80066c6:	2300      	moveq	r3, #0
 80066c8:	b2db      	uxtb	r3, r3
 80066ca:	617b      	str	r3, [r7, #20]
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 80066cc:	687b      	ldr	r3, [r7, #4]
 80066ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066d0:	f003 0308 	and.w	r3, r3, #8
 80066d4:	2b00      	cmp	r3, #0
 80066d6:	d102      	bne.n	80066de <HAL_UART_IRQHandler+0x146>
 80066d8:	697b      	ldr	r3, [r7, #20]
 80066da:	2b00      	cmp	r3, #0
 80066dc:	d031      	beq.n	8006742 <HAL_UART_IRQHandler+0x1aa>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 80066de:	6878      	ldr	r0, [r7, #4]
 80066e0:	f000 f9a4 	bl	8006a2c <UART_EndRxTransfer>

        /* Disable the UART DMA Rx request if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80066e4:	687b      	ldr	r3, [r7, #4]
 80066e6:	681b      	ldr	r3, [r3, #0]
 80066e8:	695b      	ldr	r3, [r3, #20]
 80066ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80066ee:	2b00      	cmp	r3, #0
 80066f0:	d023      	beq.n	800673a <HAL_UART_IRQHandler+0x1a2>
        {
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80066f2:	687b      	ldr	r3, [r7, #4]
 80066f4:	681b      	ldr	r3, [r3, #0]
 80066f6:	695a      	ldr	r2, [r3, #20]
 80066f8:	687b      	ldr	r3, [r7, #4]
 80066fa:	681b      	ldr	r3, [r3, #0]
 80066fc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006700:	615a      	str	r2, [r3, #20]

          /* Abort the UART DMA Rx channel */
          if (huart->hdmarx != NULL)
 8006702:	687b      	ldr	r3, [r7, #4]
 8006704:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006706:	2b00      	cmp	r3, #0
 8006708:	d013      	beq.n	8006732 <HAL_UART_IRQHandler+0x19a>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 800670a:	687b      	ldr	r3, [r7, #4]
 800670c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800670e:	4a76      	ldr	r2, [pc, #472]	; (80068e8 <HAL_UART_IRQHandler+0x350>)
 8006710:	635a      	str	r2, [r3, #52]	; 0x34
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8006712:	687b      	ldr	r3, [r7, #4]
 8006714:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006716:	4618      	mov	r0, r3
 8006718:	f7fe ff18 	bl	800554c <HAL_DMA_Abort_IT>
 800671c:	4603      	mov	r3, r0
 800671e:	2b00      	cmp	r3, #0
 8006720:	d016      	beq.n	8006750 <HAL_UART_IRQHandler+0x1b8>
            {
              /* Call Directly XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8006722:	687b      	ldr	r3, [r7, #4]
 8006724:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006726:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006728:	687a      	ldr	r2, [r7, #4]
 800672a:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800672c:	4610      	mov	r0, r2
 800672e:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006730:	e00e      	b.n	8006750 <HAL_UART_IRQHandler+0x1b8>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 8006732:	6878      	ldr	r0, [r7, #4]
 8006734:	f000 f8e3 	bl	80068fe <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006738:	e00a      	b.n	8006750 <HAL_UART_IRQHandler+0x1b8>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 800673a:	6878      	ldr	r0, [r7, #4]
 800673c:	f000 f8df 	bl	80068fe <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006740:	e006      	b.n	8006750 <HAL_UART_IRQHandler+0x1b8>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 8006742:	6878      	ldr	r0, [r7, #4]
 8006744:	f000 f8db 	bl	80068fe <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */

        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006748:	687b      	ldr	r3, [r7, #4]
 800674a:	2200      	movs	r2, #0
 800674c:	641a      	str	r2, [r3, #64]	; 0x40
      }
    }
    return;
 800674e:	e0c3      	b.n	80068d8 <HAL_UART_IRQHandler+0x340>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006750:	bf00      	nop
    return;
 8006752:	e0c1      	b.n	80068d8 <HAL_UART_IRQHandler+0x340>
  } /* End if some error occurs */

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : */
  if (  (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006758:	2b01      	cmp	r3, #1
 800675a:	f040 80a1 	bne.w	80068a0 <HAL_UART_IRQHandler+0x308>
      &&((isrflags & USART_SR_IDLE) != 0U)
 800675e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006760:	f003 0310 	and.w	r3, r3, #16
 8006764:	2b00      	cmp	r3, #0
 8006766:	f000 809b 	beq.w	80068a0 <HAL_UART_IRQHandler+0x308>
      &&((cr1its & USART_SR_IDLE) != 0U))
 800676a:	6a3b      	ldr	r3, [r7, #32]
 800676c:	f003 0310 	and.w	r3, r3, #16
 8006770:	2b00      	cmp	r3, #0
 8006772:	f000 8095 	beq.w	80068a0 <HAL_UART_IRQHandler+0x308>
  {
    __HAL_UART_CLEAR_IDLEFLAG(huart);
 8006776:	2300      	movs	r3, #0
 8006778:	60fb      	str	r3, [r7, #12]
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	681b      	ldr	r3, [r3, #0]
 800677e:	681b      	ldr	r3, [r3, #0]
 8006780:	60fb      	str	r3, [r7, #12]
 8006782:	687b      	ldr	r3, [r7, #4]
 8006784:	681b      	ldr	r3, [r3, #0]
 8006786:	685b      	ldr	r3, [r3, #4]
 8006788:	60fb      	str	r3, [r7, #12]
 800678a:	68fb      	ldr	r3, [r7, #12]

    /* Check if DMA mode is enabled in UART */
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800678c:	687b      	ldr	r3, [r7, #4]
 800678e:	681b      	ldr	r3, [r3, #0]
 8006790:	695b      	ldr	r3, [r3, #20]
 8006792:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006796:	2b00      	cmp	r3, #0
 8006798:	d04e      	beq.n	8006838 <HAL_UART_IRQHandler+0x2a0>
    {
      /* DMA mode enabled */
      /* Check received length : If all expected data are received, do nothing,
         (DMA cplt callback will be called).
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 800679a:	687b      	ldr	r3, [r7, #4]
 800679c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800679e:	681b      	ldr	r3, [r3, #0]
 80067a0:	685b      	ldr	r3, [r3, #4]
 80067a2:	823b      	strh	r3, [r7, #16]
      if (  (nb_remaining_rx_data > 0U)
 80067a4:	8a3b      	ldrh	r3, [r7, #16]
 80067a6:	2b00      	cmp	r3, #0
 80067a8:	f000 8098 	beq.w	80068dc <HAL_UART_IRQHandler+0x344>
          &&(nb_remaining_rx_data < huart->RxXferSize))
 80067ac:	687b      	ldr	r3, [r7, #4]
 80067ae:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80067b0:	8a3a      	ldrh	r2, [r7, #16]
 80067b2:	429a      	cmp	r2, r3
 80067b4:	f080 8092 	bcs.w	80068dc <HAL_UART_IRQHandler+0x344>
      {
        /* Reception is not complete */
        huart->RxXferCount = nb_remaining_rx_data;
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	8a3a      	ldrh	r2, [r7, #16]
 80067bc:	85da      	strh	r2, [r3, #46]	; 0x2e

        /* In Normal mode, end DMA xfer and HAL UART Rx process*/
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80067c2:	699b      	ldr	r3, [r3, #24]
 80067c4:	2b20      	cmp	r3, #32
 80067c6:	d02b      	beq.n	8006820 <HAL_UART_IRQHandler+0x288>
        {
          /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 80067c8:	687b      	ldr	r3, [r7, #4]
 80067ca:	681b      	ldr	r3, [r3, #0]
 80067cc:	68da      	ldr	r2, [r3, #12]
 80067ce:	687b      	ldr	r3, [r7, #4]
 80067d0:	681b      	ldr	r3, [r3, #0]
 80067d2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80067d6:	60da      	str	r2, [r3, #12]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80067d8:	687b      	ldr	r3, [r7, #4]
 80067da:	681b      	ldr	r3, [r3, #0]
 80067dc:	695a      	ldr	r2, [r3, #20]
 80067de:	687b      	ldr	r3, [r7, #4]
 80067e0:	681b      	ldr	r3, [r3, #0]
 80067e2:	f022 0201 	bic.w	r2, r2, #1
 80067e6:	615a      	str	r2, [r3, #20]

          /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
             in the UART CR3 register */
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80067e8:	687b      	ldr	r3, [r7, #4]
 80067ea:	681b      	ldr	r3, [r3, #0]
 80067ec:	695a      	ldr	r2, [r3, #20]
 80067ee:	687b      	ldr	r3, [r7, #4]
 80067f0:	681b      	ldr	r3, [r3, #0]
 80067f2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80067f6:	615a      	str	r2, [r3, #20]

          /* At end of Rx process, restore huart->RxState to Ready */
          huart->RxState = HAL_UART_STATE_READY;
 80067f8:	687b      	ldr	r3, [r7, #4]
 80067fa:	2220      	movs	r2, #32
 80067fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	2200      	movs	r2, #0
 8006804:	631a      	str	r2, [r3, #48]	; 0x30

          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006806:	687b      	ldr	r3, [r7, #4]
 8006808:	681b      	ldr	r3, [r3, #0]
 800680a:	68da      	ldr	r2, [r3, #12]
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	681b      	ldr	r3, [r3, #0]
 8006810:	f022 0210 	bic.w	r2, r2, #16
 8006814:	60da      	str	r2, [r3, #12]

          /* Last bytes received, so no need as the abort is immediate */
          (void)HAL_DMA_Abort(huart->hdmarx);
 8006816:	687b      	ldr	r3, [r7, #4]
 8006818:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800681a:	4618      	mov	r0, r3
 800681c:	f7fe fe5b 	bl	80054d6 <HAL_DMA_Abort>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8006824:	687b      	ldr	r3, [r7, #4]
 8006826:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006828:	b29b      	uxth	r3, r3
 800682a:	1ad3      	subs	r3, r2, r3
 800682c:	b29b      	uxth	r3, r3
 800682e:	4619      	mov	r1, r3
 8006830:	6878      	ldr	r0, [r7, #4]
 8006832:	f000 f86d 	bl	8006910 <HAL_UARTEx_RxEventCallback>
#endif
      }
      return;
 8006836:	e051      	b.n	80068dc <HAL_UART_IRQHandler+0x344>
    else
    {
      /* DMA mode not enabled */
      /* Check received length : If all expected data are received, do nothing.
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800683c:	687b      	ldr	r3, [r7, #4]
 800683e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006840:	b29b      	uxth	r3, r3
 8006842:	1ad3      	subs	r3, r2, r3
 8006844:	827b      	strh	r3, [r7, #18]
      if (  (huart->RxXferCount > 0U)
 8006846:	687b      	ldr	r3, [r7, #4]
 8006848:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800684a:	b29b      	uxth	r3, r3
 800684c:	2b00      	cmp	r3, #0
 800684e:	d047      	beq.n	80068e0 <HAL_UART_IRQHandler+0x348>
          &&(nb_rx_data > 0U) )
 8006850:	8a7b      	ldrh	r3, [r7, #18]
 8006852:	2b00      	cmp	r3, #0
 8006854:	d044      	beq.n	80068e0 <HAL_UART_IRQHandler+0x348>
      {
        /* Disable the UART Parity Error Interrupt and RXNE interrupts */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006856:	687b      	ldr	r3, [r7, #4]
 8006858:	681b      	ldr	r3, [r3, #0]
 800685a:	68da      	ldr	r2, [r3, #12]
 800685c:	687b      	ldr	r3, [r7, #4]
 800685e:	681b      	ldr	r3, [r3, #0]
 8006860:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8006864:	60da      	str	r2, [r3, #12]

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006866:	687b      	ldr	r3, [r7, #4]
 8006868:	681b      	ldr	r3, [r3, #0]
 800686a:	695a      	ldr	r2, [r3, #20]
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	681b      	ldr	r3, [r3, #0]
 8006870:	f022 0201 	bic.w	r2, r2, #1
 8006874:	615a      	str	r2, [r3, #20]

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 8006876:	687b      	ldr	r3, [r7, #4]
 8006878:	2220      	movs	r2, #32
 800687a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800687e:	687b      	ldr	r3, [r7, #4]
 8006880:	2200      	movs	r2, #0
 8006882:	631a      	str	r2, [r3, #48]	; 0x30

        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	681b      	ldr	r3, [r3, #0]
 8006888:	68da      	ldr	r2, [r3, #12]
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	681b      	ldr	r3, [r3, #0]
 800688e:	f022 0210 	bic.w	r2, r2, #16
 8006892:	60da      	str	r2, [r3, #12]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxEventCallback(huart, nb_rx_data);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8006894:	8a7b      	ldrh	r3, [r7, #18]
 8006896:	4619      	mov	r1, r3
 8006898:	6878      	ldr	r0, [r7, #4]
 800689a:	f000 f839 	bl	8006910 <HAL_UARTEx_RxEventCallback>
#endif
      }
      return;
 800689e:	e01f      	b.n	80068e0 <HAL_UART_IRQHandler+0x348>
    }
  }

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 80068a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80068a2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80068a6:	2b00      	cmp	r3, #0
 80068a8:	d008      	beq.n	80068bc <HAL_UART_IRQHandler+0x324>
 80068aa:	6a3b      	ldr	r3, [r7, #32]
 80068ac:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80068b0:	2b00      	cmp	r3, #0
 80068b2:	d003      	beq.n	80068bc <HAL_UART_IRQHandler+0x324>
  {
    UART_Transmit_IT(huart);
 80068b4:	6878      	ldr	r0, [r7, #4]
 80068b6:	f000 f8f9 	bl	8006aac <UART_Transmit_IT>
    return;
 80068ba:	e012      	b.n	80068e2 <HAL_UART_IRQHandler+0x34a>
  }

  /* UART in mode Transmitter end --------------------------------------------*/
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 80068bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80068be:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80068c2:	2b00      	cmp	r3, #0
 80068c4:	d00d      	beq.n	80068e2 <HAL_UART_IRQHandler+0x34a>
 80068c6:	6a3b      	ldr	r3, [r7, #32]
 80068c8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80068cc:	2b00      	cmp	r3, #0
 80068ce:	d008      	beq.n	80068e2 <HAL_UART_IRQHandler+0x34a>
  {
    UART_EndTransmit_IT(huart);
 80068d0:	6878      	ldr	r0, [r7, #4]
 80068d2:	f000 f93a 	bl	8006b4a <UART_EndTransmit_IT>
    return;
 80068d6:	e004      	b.n	80068e2 <HAL_UART_IRQHandler+0x34a>
    return;
 80068d8:	bf00      	nop
 80068da:	e002      	b.n	80068e2 <HAL_UART_IRQHandler+0x34a>
      return;
 80068dc:	bf00      	nop
 80068de:	e000      	b.n	80068e2 <HAL_UART_IRQHandler+0x34a>
      return;
 80068e0:	bf00      	nop
  }
}
 80068e2:	3728      	adds	r7, #40	; 0x28
 80068e4:	46bd      	mov	sp, r7
 80068e6:	bd80      	pop	{r7, pc}
 80068e8:	08006a85 	.word	0x08006a85

080068ec <HAL_UART_TxCpltCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 80068ec:	b480      	push	{r7}
 80068ee:	b083      	sub	sp, #12
 80068f0:	af00      	add	r7, sp, #0
 80068f2:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_TxCpltCallback could be implemented in the user file
   */
}
 80068f4:	bf00      	nop
 80068f6:	370c      	adds	r7, #12
 80068f8:	46bd      	mov	sp, r7
 80068fa:	bc80      	pop	{r7}
 80068fc:	4770      	bx	lr

080068fe <HAL_UART_ErrorCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 80068fe:	b480      	push	{r7}
 8006900:	b083      	sub	sp, #12
 8006902:	af00      	add	r7, sp, #0
 8006904:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_ErrorCallback could be implemented in the user file
   */
}
 8006906:	bf00      	nop
 8006908:	370c      	adds	r7, #12
 800690a:	46bd      	mov	sp, r7
 800690c:	bc80      	pop	{r7}
 800690e:	4770      	bx	lr

08006910 <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 8006910:	b480      	push	{r7}
 8006912:	b083      	sub	sp, #12
 8006914:	af00      	add	r7, sp, #0
 8006916:	6078      	str	r0, [r7, #4]
 8006918:	460b      	mov	r3, r1
 800691a:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 800691c:	bf00      	nop
 800691e:	370c      	adds	r7, #12
 8006920:	46bd      	mov	sp, r7
 8006922:	bc80      	pop	{r7}
 8006924:	4770      	bx	lr

08006926 <UART_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 8006926:	b580      	push	{r7, lr}
 8006928:	b084      	sub	sp, #16
 800692a:	af00      	add	r7, sp, #0
 800692c:	60f8      	str	r0, [r7, #12]
 800692e:	60b9      	str	r1, [r7, #8]
 8006930:	603b      	str	r3, [r7, #0]
 8006932:	4613      	mov	r3, r2
 8006934:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8006936:	e02c      	b.n	8006992 <UART_WaitOnFlagUntilTimeout+0x6c>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8006938:	69bb      	ldr	r3, [r7, #24]
 800693a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800693e:	d028      	beq.n	8006992 <UART_WaitOnFlagUntilTimeout+0x6c>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8006940:	69bb      	ldr	r3, [r7, #24]
 8006942:	2b00      	cmp	r3, #0
 8006944:	d007      	beq.n	8006956 <UART_WaitOnFlagUntilTimeout+0x30>
 8006946:	f7fe fc8b 	bl	8005260 <HAL_GetTick>
 800694a:	4602      	mov	r2, r0
 800694c:	683b      	ldr	r3, [r7, #0]
 800694e:	1ad3      	subs	r3, r2, r3
 8006950:	69ba      	ldr	r2, [r7, #24]
 8006952:	429a      	cmp	r2, r3
 8006954:	d21d      	bcs.n	8006992 <UART_WaitOnFlagUntilTimeout+0x6c>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8006956:	68fb      	ldr	r3, [r7, #12]
 8006958:	681b      	ldr	r3, [r3, #0]
 800695a:	68da      	ldr	r2, [r3, #12]
 800695c:	68fb      	ldr	r3, [r7, #12]
 800695e:	681b      	ldr	r3, [r3, #0]
 8006960:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8006964:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006966:	68fb      	ldr	r3, [r7, #12]
 8006968:	681b      	ldr	r3, [r3, #0]
 800696a:	695a      	ldr	r2, [r3, #20]
 800696c:	68fb      	ldr	r3, [r7, #12]
 800696e:	681b      	ldr	r3, [r3, #0]
 8006970:	f022 0201 	bic.w	r2, r2, #1
 8006974:	615a      	str	r2, [r3, #20]

        huart->gState  = HAL_UART_STATE_READY;
 8006976:	68fb      	ldr	r3, [r7, #12]
 8006978:	2220      	movs	r2, #32
 800697a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        huart->RxState = HAL_UART_STATE_READY;
 800697e:	68fb      	ldr	r3, [r7, #12]
 8006980:	2220      	movs	r2, #32
 8006982:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 8006986:	68fb      	ldr	r3, [r7, #12]
 8006988:	2200      	movs	r2, #0
 800698a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_TIMEOUT;
 800698e:	2303      	movs	r3, #3
 8006990:	e00f      	b.n	80069b2 <UART_WaitOnFlagUntilTimeout+0x8c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8006992:	68fb      	ldr	r3, [r7, #12]
 8006994:	681b      	ldr	r3, [r3, #0]
 8006996:	681a      	ldr	r2, [r3, #0]
 8006998:	68bb      	ldr	r3, [r7, #8]
 800699a:	4013      	ands	r3, r2
 800699c:	68ba      	ldr	r2, [r7, #8]
 800699e:	429a      	cmp	r2, r3
 80069a0:	bf0c      	ite	eq
 80069a2:	2301      	moveq	r3, #1
 80069a4:	2300      	movne	r3, #0
 80069a6:	b2db      	uxtb	r3, r3
 80069a8:	461a      	mov	r2, r3
 80069aa:	79fb      	ldrb	r3, [r7, #7]
 80069ac:	429a      	cmp	r2, r3
 80069ae:	d0c3      	beq.n	8006938 <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 80069b0:	2300      	movs	r3, #0
}
 80069b2:	4618      	mov	r0, r3
 80069b4:	3710      	adds	r7, #16
 80069b6:	46bd      	mov	sp, r7
 80069b8:	bd80      	pop	{r7, pc}

080069ba <UART_Start_Receive_IT>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 80069ba:	b480      	push	{r7}
 80069bc:	b085      	sub	sp, #20
 80069be:	af00      	add	r7, sp, #0
 80069c0:	60f8      	str	r0, [r7, #12]
 80069c2:	60b9      	str	r1, [r7, #8]
 80069c4:	4613      	mov	r3, r2
 80069c6:	80fb      	strh	r3, [r7, #6]
  huart->pRxBuffPtr = pData;
 80069c8:	68fb      	ldr	r3, [r7, #12]
 80069ca:	68ba      	ldr	r2, [r7, #8]
 80069cc:	629a      	str	r2, [r3, #40]	; 0x28
  huart->RxXferSize = Size;
 80069ce:	68fb      	ldr	r3, [r7, #12]
 80069d0:	88fa      	ldrh	r2, [r7, #6]
 80069d2:	859a      	strh	r2, [r3, #44]	; 0x2c
  huart->RxXferCount = Size;
 80069d4:	68fb      	ldr	r3, [r7, #12]
 80069d6:	88fa      	ldrh	r2, [r7, #6]
 80069d8:	85da      	strh	r2, [r3, #46]	; 0x2e

  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80069da:	68fb      	ldr	r3, [r7, #12]
 80069dc:	2200      	movs	r2, #0
 80069de:	641a      	str	r2, [r3, #64]	; 0x40
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 80069e0:	68fb      	ldr	r3, [r7, #12]
 80069e2:	2222      	movs	r2, #34	; 0x22
 80069e4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 80069e8:	68fb      	ldr	r3, [r7, #12]
 80069ea:	2200      	movs	r2, #0
 80069ec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Enable the UART Parity Error Interrupt */
  __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 80069f0:	68fb      	ldr	r3, [r7, #12]
 80069f2:	681b      	ldr	r3, [r3, #0]
 80069f4:	68da      	ldr	r2, [r3, #12]
 80069f6:	68fb      	ldr	r3, [r7, #12]
 80069f8:	681b      	ldr	r3, [r3, #0]
 80069fa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80069fe:	60da      	str	r2, [r3, #12]

  /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
  __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 8006a00:	68fb      	ldr	r3, [r7, #12]
 8006a02:	681b      	ldr	r3, [r3, #0]
 8006a04:	695a      	ldr	r2, [r3, #20]
 8006a06:	68fb      	ldr	r3, [r7, #12]
 8006a08:	681b      	ldr	r3, [r3, #0]
 8006a0a:	f042 0201 	orr.w	r2, r2, #1
 8006a0e:	615a      	str	r2, [r3, #20]

  /* Enable the UART Data Register not empty Interrupt */
  __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 8006a10:	68fb      	ldr	r3, [r7, #12]
 8006a12:	681b      	ldr	r3, [r3, #0]
 8006a14:	68da      	ldr	r2, [r3, #12]
 8006a16:	68fb      	ldr	r3, [r7, #12]
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	f042 0220 	orr.w	r2, r2, #32
 8006a1e:	60da      	str	r2, [r3, #12]

  return HAL_OK;
 8006a20:	2300      	movs	r3, #0
}
 8006a22:	4618      	mov	r0, r3
 8006a24:	3714      	adds	r7, #20
 8006a26:	46bd      	mov	sp, r7
 8006a28:	bc80      	pop	{r7}
 8006a2a:	4770      	bx	lr

08006a2c <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8006a2c:	b480      	push	{r7}
 8006a2e:	b083      	sub	sp, #12
 8006a30:	af00      	add	r7, sp, #0
 8006a32:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	681b      	ldr	r3, [r3, #0]
 8006a38:	68da      	ldr	r2, [r3, #12]
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	681b      	ldr	r3, [r3, #0]
 8006a3e:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8006a42:	60da      	str	r2, [r3, #12]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	681b      	ldr	r3, [r3, #0]
 8006a48:	695a      	ldr	r2, [r3, #20]
 8006a4a:	687b      	ldr	r3, [r7, #4]
 8006a4c:	681b      	ldr	r3, [r3, #0]
 8006a4e:	f022 0201 	bic.w	r2, r2, #1
 8006a52:	615a      	str	r2, [r3, #20]

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a58:	2b01      	cmp	r3, #1
 8006a5a:	d107      	bne.n	8006a6c <UART_EndRxTransfer+0x40>
  {
    CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006a5c:	687b      	ldr	r3, [r7, #4]
 8006a5e:	681b      	ldr	r3, [r3, #0]
 8006a60:	68da      	ldr	r2, [r3, #12]
 8006a62:	687b      	ldr	r3, [r7, #4]
 8006a64:	681b      	ldr	r3, [r3, #0]
 8006a66:	f022 0210 	bic.w	r2, r2, #16
 8006a6a:	60da      	str	r2, [r3, #12]
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8006a6c:	687b      	ldr	r3, [r7, #4]
 8006a6e:	2220      	movs	r2, #32
 8006a70:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	2200      	movs	r2, #0
 8006a78:	631a      	str	r2, [r3, #48]	; 0x30
}
 8006a7a:	bf00      	nop
 8006a7c:	370c      	adds	r7, #12
 8006a7e:	46bd      	mov	sp, r7
 8006a80:	bc80      	pop	{r7}
 8006a82:	4770      	bx	lr

08006a84 <UART_DMAAbortOnError>:
  * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8006a84:	b580      	push	{r7, lr}
 8006a86:	b084      	sub	sp, #16
 8006a88:	af00      	add	r7, sp, #0
 8006a8a:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006a8c:	687b      	ldr	r3, [r7, #4]
 8006a8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a90:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0x00U;
 8006a92:	68fb      	ldr	r3, [r7, #12]
 8006a94:	2200      	movs	r2, #0
 8006a96:	85da      	strh	r2, [r3, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8006a98:	68fb      	ldr	r3, [r7, #12]
 8006a9a:	2200      	movs	r2, #0
 8006a9c:	84da      	strh	r2, [r3, #38]	; 0x26
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8006a9e:	68f8      	ldr	r0, [r7, #12]
 8006aa0:	f7ff ff2d 	bl	80068fe <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8006aa4:	bf00      	nop
 8006aa6:	3710      	adds	r7, #16
 8006aa8:	46bd      	mov	sp, r7
 8006aaa:	bd80      	pop	{r7, pc}

08006aac <UART_Transmit_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
 8006aac:	b480      	push	{r7}
 8006aae:	b085      	sub	sp, #20
 8006ab0:	af00      	add	r7, sp, #0
 8006ab2:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8006ab4:	687b      	ldr	r3, [r7, #4]
 8006ab6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006aba:	b2db      	uxtb	r3, r3
 8006abc:	2b21      	cmp	r3, #33	; 0x21
 8006abe:	d13e      	bne.n	8006b3e <UART_Transmit_IT+0x92>
  {
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	689b      	ldr	r3, [r3, #8]
 8006ac4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006ac8:	d114      	bne.n	8006af4 <UART_Transmit_IT+0x48>
 8006aca:	687b      	ldr	r3, [r7, #4]
 8006acc:	691b      	ldr	r3, [r3, #16]
 8006ace:	2b00      	cmp	r3, #0
 8006ad0:	d110      	bne.n	8006af4 <UART_Transmit_IT+0x48>
    {
      tmp = (uint16_t *) huart->pTxBuffPtr;
 8006ad2:	687b      	ldr	r3, [r7, #4]
 8006ad4:	6a1b      	ldr	r3, [r3, #32]
 8006ad6:	60fb      	str	r3, [r7, #12]
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8006ad8:	68fb      	ldr	r3, [r7, #12]
 8006ada:	881b      	ldrh	r3, [r3, #0]
 8006adc:	461a      	mov	r2, r3
 8006ade:	687b      	ldr	r3, [r7, #4]
 8006ae0:	681b      	ldr	r3, [r3, #0]
 8006ae2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006ae6:	605a      	str	r2, [r3, #4]
      huart->pTxBuffPtr += 2U;
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	6a1b      	ldr	r3, [r3, #32]
 8006aec:	1c9a      	adds	r2, r3, #2
 8006aee:	687b      	ldr	r3, [r7, #4]
 8006af0:	621a      	str	r2, [r3, #32]
 8006af2:	e008      	b.n	8006b06 <UART_Transmit_IT+0x5a>
    }
    else
    {
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 8006af4:	687b      	ldr	r3, [r7, #4]
 8006af6:	6a1b      	ldr	r3, [r3, #32]
 8006af8:	1c59      	adds	r1, r3, #1
 8006afa:	687a      	ldr	r2, [r7, #4]
 8006afc:	6211      	str	r1, [r2, #32]
 8006afe:	781a      	ldrb	r2, [r3, #0]
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	681b      	ldr	r3, [r3, #0]
 8006b04:	605a      	str	r2, [r3, #4]
    }

    if (--huart->TxXferCount == 0U)
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8006b0a:	b29b      	uxth	r3, r3
 8006b0c:	3b01      	subs	r3, #1
 8006b0e:	b29b      	uxth	r3, r3
 8006b10:	687a      	ldr	r2, [r7, #4]
 8006b12:	4619      	mov	r1, r3
 8006b14:	84d1      	strh	r1, [r2, #38]	; 0x26
 8006b16:	2b00      	cmp	r3, #0
 8006b18:	d10f      	bne.n	8006b3a <UART_Transmit_IT+0x8e>
    {
      /* Disable the UART Transmit Complete Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	681b      	ldr	r3, [r3, #0]
 8006b1e:	68da      	ldr	r2, [r3, #12]
 8006b20:	687b      	ldr	r3, [r7, #4]
 8006b22:	681b      	ldr	r3, [r3, #0]
 8006b24:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006b28:	60da      	str	r2, [r3, #12]

      /* Enable the UART Transmit Complete Interrupt */
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	681b      	ldr	r3, [r3, #0]
 8006b2e:	68da      	ldr	r2, [r3, #12]
 8006b30:	687b      	ldr	r3, [r7, #4]
 8006b32:	681b      	ldr	r3, [r3, #0]
 8006b34:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006b38:	60da      	str	r2, [r3, #12]
    }
    return HAL_OK;
 8006b3a:	2300      	movs	r3, #0
 8006b3c:	e000      	b.n	8006b40 <UART_Transmit_IT+0x94>
  }
  else
  {
    return HAL_BUSY;
 8006b3e:	2302      	movs	r3, #2
  }
}
 8006b40:	4618      	mov	r0, r3
 8006b42:	3714      	adds	r7, #20
 8006b44:	46bd      	mov	sp, r7
 8006b46:	bc80      	pop	{r7}
 8006b48:	4770      	bx	lr

08006b4a <UART_EndTransmit_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 8006b4a:	b580      	push	{r7, lr}
 8006b4c:	b082      	sub	sp, #8
 8006b4e:	af00      	add	r7, sp, #0
 8006b50:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8006b52:	687b      	ldr	r3, [r7, #4]
 8006b54:	681b      	ldr	r3, [r3, #0]
 8006b56:	68da      	ldr	r2, [r3, #12]
 8006b58:	687b      	ldr	r3, [r7, #4]
 8006b5a:	681b      	ldr	r3, [r3, #0]
 8006b5c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006b60:	60da      	str	r2, [r3, #12]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	2220      	movs	r2, #32
 8006b66:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 8006b6a:	6878      	ldr	r0, [r7, #4]
 8006b6c:	f7ff febe 	bl	80068ec <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */

  return HAL_OK;
 8006b70:	2300      	movs	r3, #0
}
 8006b72:	4618      	mov	r0, r3
 8006b74:	3708      	adds	r7, #8
 8006b76:	46bd      	mov	sp, r7
 8006b78:	bd80      	pop	{r7, pc}

08006b7a <UART_Receive_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
{
 8006b7a:	b580      	push	{r7, lr}
 8006b7c:	b086      	sub	sp, #24
 8006b7e:	af00      	add	r7, sp, #0
 8006b80:	6078      	str	r0, [r7, #4]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006b88:	b2db      	uxtb	r3, r3
 8006b8a:	2b22      	cmp	r3, #34	; 0x22
 8006b8c:	f040 8099 	bne.w	8006cc2 <UART_Receive_IT+0x148>
  {
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	689b      	ldr	r3, [r3, #8]
 8006b94:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006b98:	d117      	bne.n	8006bca <UART_Receive_IT+0x50>
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	691b      	ldr	r3, [r3, #16]
 8006b9e:	2b00      	cmp	r3, #0
 8006ba0:	d113      	bne.n	8006bca <UART_Receive_IT+0x50>
    {
      pdata8bits  = NULL;
 8006ba2:	2300      	movs	r3, #0
 8006ba4:	617b      	str	r3, [r7, #20]
      pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 8006ba6:	687b      	ldr	r3, [r7, #4]
 8006ba8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006baa:	613b      	str	r3, [r7, #16]
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8006bac:	687b      	ldr	r3, [r7, #4]
 8006bae:	681b      	ldr	r3, [r3, #0]
 8006bb0:	685b      	ldr	r3, [r3, #4]
 8006bb2:	b29b      	uxth	r3, r3
 8006bb4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006bb8:	b29a      	uxth	r2, r3
 8006bba:	693b      	ldr	r3, [r7, #16]
 8006bbc:	801a      	strh	r2, [r3, #0]
      huart->pRxBuffPtr += 2U;
 8006bbe:	687b      	ldr	r3, [r7, #4]
 8006bc0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006bc2:	1c9a      	adds	r2, r3, #2
 8006bc4:	687b      	ldr	r3, [r7, #4]
 8006bc6:	629a      	str	r2, [r3, #40]	; 0x28
 8006bc8:	e026      	b.n	8006c18 <UART_Receive_IT+0x9e>
    }
    else
    {
      pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 8006bca:	687b      	ldr	r3, [r7, #4]
 8006bcc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006bce:	617b      	str	r3, [r7, #20]
      pdata16bits  = NULL;
 8006bd0:	2300      	movs	r3, #0
 8006bd2:	613b      	str	r3, [r7, #16]

      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	689b      	ldr	r3, [r3, #8]
 8006bd8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006bdc:	d007      	beq.n	8006bee <UART_Receive_IT+0x74>
 8006bde:	687b      	ldr	r3, [r7, #4]
 8006be0:	689b      	ldr	r3, [r3, #8]
 8006be2:	2b00      	cmp	r3, #0
 8006be4:	d10a      	bne.n	8006bfc <UART_Receive_IT+0x82>
 8006be6:	687b      	ldr	r3, [r7, #4]
 8006be8:	691b      	ldr	r3, [r3, #16]
 8006bea:	2b00      	cmp	r3, #0
 8006bec:	d106      	bne.n	8006bfc <UART_Receive_IT+0x82>
      {
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8006bee:	687b      	ldr	r3, [r7, #4]
 8006bf0:	681b      	ldr	r3, [r3, #0]
 8006bf2:	685b      	ldr	r3, [r3, #4]
 8006bf4:	b2da      	uxtb	r2, r3
 8006bf6:	697b      	ldr	r3, [r7, #20]
 8006bf8:	701a      	strb	r2, [r3, #0]
 8006bfa:	e008      	b.n	8006c0e <UART_Receive_IT+0x94>
      }
      else
      {
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	681b      	ldr	r3, [r3, #0]
 8006c00:	685b      	ldr	r3, [r3, #4]
 8006c02:	b2db      	uxtb	r3, r3
 8006c04:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8006c08:	b2da      	uxtb	r2, r3
 8006c0a:	697b      	ldr	r3, [r7, #20]
 8006c0c:	701a      	strb	r2, [r3, #0]
      }
      huart->pRxBuffPtr += 1U;
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006c12:	1c5a      	adds	r2, r3, #1
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	629a      	str	r2, [r3, #40]	; 0x28
    }

    if (--huart->RxXferCount == 0U)
 8006c18:	687b      	ldr	r3, [r7, #4]
 8006c1a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006c1c:	b29b      	uxth	r3, r3
 8006c1e:	3b01      	subs	r3, #1
 8006c20:	b29b      	uxth	r3, r3
 8006c22:	687a      	ldr	r2, [r7, #4]
 8006c24:	4619      	mov	r1, r3
 8006c26:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8006c28:	2b00      	cmp	r3, #0
 8006c2a:	d148      	bne.n	8006cbe <UART_Receive_IT+0x144>
    {
      /* Disable the UART Data Register not empty Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8006c2c:	687b      	ldr	r3, [r7, #4]
 8006c2e:	681b      	ldr	r3, [r3, #0]
 8006c30:	68da      	ldr	r2, [r3, #12]
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	681b      	ldr	r3, [r3, #0]
 8006c36:	f022 0220 	bic.w	r2, r2, #32
 8006c3a:	60da      	str	r2, [r3, #12]

      /* Disable the UART Parity Error Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	681b      	ldr	r3, [r3, #0]
 8006c40:	68da      	ldr	r2, [r3, #12]
 8006c42:	687b      	ldr	r3, [r7, #4]
 8006c44:	681b      	ldr	r3, [r3, #0]
 8006c46:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006c4a:	60da      	str	r2, [r3, #12]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	681b      	ldr	r3, [r3, #0]
 8006c50:	695a      	ldr	r2, [r3, #20]
 8006c52:	687b      	ldr	r3, [r7, #4]
 8006c54:	681b      	ldr	r3, [r3, #0]
 8006c56:	f022 0201 	bic.w	r2, r2, #1
 8006c5a:	615a      	str	r2, [r3, #20]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	2220      	movs	r2, #32
 8006c60:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c68:	2b01      	cmp	r3, #1
 8006c6a:	d123      	bne.n	8006cb4 <UART_Receive_IT+0x13a>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	2200      	movs	r2, #0
 8006c70:	631a      	str	r2, [r3, #48]	; 0x30

        /* Disable IDLE interrupt */
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006c72:	687b      	ldr	r3, [r7, #4]
 8006c74:	681b      	ldr	r3, [r3, #0]
 8006c76:	68da      	ldr	r2, [r3, #12]
 8006c78:	687b      	ldr	r3, [r7, #4]
 8006c7a:	681b      	ldr	r3, [r3, #0]
 8006c7c:	f022 0210 	bic.w	r2, r2, #16
 8006c80:	60da      	str	r2, [r3, #12]

        /* Check if IDLE flag is set */
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 8006c82:	687b      	ldr	r3, [r7, #4]
 8006c84:	681b      	ldr	r3, [r3, #0]
 8006c86:	681b      	ldr	r3, [r3, #0]
 8006c88:	f003 0310 	and.w	r3, r3, #16
 8006c8c:	2b10      	cmp	r3, #16
 8006c8e:	d10a      	bne.n	8006ca6 <UART_Receive_IT+0x12c>
        {
          /* Clear IDLE flag in ISR */
          __HAL_UART_CLEAR_IDLEFLAG(huart);
 8006c90:	2300      	movs	r3, #0
 8006c92:	60fb      	str	r3, [r7, #12]
 8006c94:	687b      	ldr	r3, [r7, #4]
 8006c96:	681b      	ldr	r3, [r3, #0]
 8006c98:	681b      	ldr	r3, [r3, #0]
 8006c9a:	60fb      	str	r3, [r7, #12]
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	681b      	ldr	r3, [r3, #0]
 8006ca0:	685b      	ldr	r3, [r3, #4]
 8006ca2:	60fb      	str	r3, [r7, #12]
 8006ca4:	68fb      	ldr	r3, [r7, #12]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8006ca6:	687b      	ldr	r3, [r7, #4]
 8006ca8:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8006caa:	4619      	mov	r1, r3
 8006cac:	6878      	ldr	r0, [r7, #4]
 8006cae:	f7ff fe2f 	bl	8006910 <HAL_UARTEx_RxEventCallback>
 8006cb2:	e002      	b.n	8006cba <UART_Receive_IT+0x140>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)		  
       /*Call registered Rx complete callback*/
       huart->RxCpltCallback(huart);
#else
       /*Call legacy weak Rx complete callback*/
       HAL_UART_RxCpltCallback(huart);
 8006cb4:	6878      	ldr	r0, [r7, #4]
 8006cb6:	f7fa fcb7 	bl	8001628 <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }

      return HAL_OK;
 8006cba:	2300      	movs	r3, #0
 8006cbc:	e002      	b.n	8006cc4 <UART_Receive_IT+0x14a>
    }
    return HAL_OK;
 8006cbe:	2300      	movs	r3, #0
 8006cc0:	e000      	b.n	8006cc4 <UART_Receive_IT+0x14a>
  }
  else
  {
    return HAL_BUSY;
 8006cc2:	2302      	movs	r3, #2
  }
}
 8006cc4:	4618      	mov	r0, r3
 8006cc6:	3718      	adds	r7, #24
 8006cc8:	46bd      	mov	sp, r7
 8006cca:	bd80      	pop	{r7, pc}

08006ccc <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8006ccc:	b580      	push	{r7, lr}
 8006cce:	b084      	sub	sp, #16
 8006cd0:	af00      	add	r7, sp, #0
 8006cd2:	6078      	str	r0, [r7, #4]
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	681b      	ldr	r3, [r3, #0]
 8006cd8:	691b      	ldr	r3, [r3, #16]
 8006cda:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	68da      	ldr	r2, [r3, #12]
 8006ce2:	687b      	ldr	r3, [r7, #4]
 8006ce4:	681b      	ldr	r3, [r3, #0]
 8006ce6:	430a      	orrs	r2, r1
 8006ce8:	611a      	str	r2, [r3, #16]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
  MODIFY_REG(huart->Instance->CR1,
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);
#else
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 8006cea:	687b      	ldr	r3, [r7, #4]
 8006cec:	689a      	ldr	r2, [r3, #8]
 8006cee:	687b      	ldr	r3, [r7, #4]
 8006cf0:	691b      	ldr	r3, [r3, #16]
 8006cf2:	431a      	orrs	r2, r3
 8006cf4:	687b      	ldr	r3, [r7, #4]
 8006cf6:	695b      	ldr	r3, [r3, #20]
 8006cf8:	4313      	orrs	r3, r2
 8006cfa:	60bb      	str	r3, [r7, #8]
  MODIFY_REG(huart->Instance->CR1,
 8006cfc:	687b      	ldr	r3, [r7, #4]
 8006cfe:	681b      	ldr	r3, [r3, #0]
 8006d00:	68db      	ldr	r3, [r3, #12]
 8006d02:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8006d06:	f023 030c 	bic.w	r3, r3, #12
 8006d0a:	687a      	ldr	r2, [r7, #4]
 8006d0c:	6812      	ldr	r2, [r2, #0]
 8006d0e:	68b9      	ldr	r1, [r7, #8]
 8006d10:	430b      	orrs	r3, r1
 8006d12:	60d3      	str	r3, [r2, #12]
             tmpreg);
#endif /* USART_CR1_OVER8 */

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	681b      	ldr	r3, [r3, #0]
 8006d18:	695b      	ldr	r3, [r3, #20]
 8006d1a:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8006d1e:	687b      	ldr	r3, [r7, #4]
 8006d20:	699a      	ldr	r2, [r3, #24]
 8006d22:	687b      	ldr	r3, [r7, #4]
 8006d24:	681b      	ldr	r3, [r3, #0]
 8006d26:	430a      	orrs	r2, r1
 8006d28:	615a      	str	r2, [r3, #20]


  if(huart->Instance == USART1)
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	681b      	ldr	r3, [r3, #0]
 8006d2e:	4a2c      	ldr	r2, [pc, #176]	; (8006de0 <UART_SetConfig+0x114>)
 8006d30:	4293      	cmp	r3, r2
 8006d32:	d103      	bne.n	8006d3c <UART_SetConfig+0x70>
  {
    pclk = HAL_RCC_GetPCLK2Freq();
 8006d34:	f7ff faee 	bl	8006314 <HAL_RCC_GetPCLK2Freq>
 8006d38:	60f8      	str	r0, [r7, #12]
 8006d3a:	e002      	b.n	8006d42 <UART_SetConfig+0x76>
  }
  else
  {
    pclk = HAL_RCC_GetPCLK1Freq();
 8006d3c:	f7ff fad6 	bl	80062ec <HAL_RCC_GetPCLK1Freq>
 8006d40:	60f8      	str	r0, [r7, #12]
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
  }
#else
  huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8006d42:	68fa      	ldr	r2, [r7, #12]
 8006d44:	4613      	mov	r3, r2
 8006d46:	009b      	lsls	r3, r3, #2
 8006d48:	4413      	add	r3, r2
 8006d4a:	009a      	lsls	r2, r3, #2
 8006d4c:	441a      	add	r2, r3
 8006d4e:	687b      	ldr	r3, [r7, #4]
 8006d50:	685b      	ldr	r3, [r3, #4]
 8006d52:	009b      	lsls	r3, r3, #2
 8006d54:	fbb2 f3f3 	udiv	r3, r2, r3
 8006d58:	4a22      	ldr	r2, [pc, #136]	; (8006de4 <UART_SetConfig+0x118>)
 8006d5a:	fba2 2303 	umull	r2, r3, r2, r3
 8006d5e:	095b      	lsrs	r3, r3, #5
 8006d60:	0119      	lsls	r1, r3, #4
 8006d62:	68fa      	ldr	r2, [r7, #12]
 8006d64:	4613      	mov	r3, r2
 8006d66:	009b      	lsls	r3, r3, #2
 8006d68:	4413      	add	r3, r2
 8006d6a:	009a      	lsls	r2, r3, #2
 8006d6c:	441a      	add	r2, r3
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	685b      	ldr	r3, [r3, #4]
 8006d72:	009b      	lsls	r3, r3, #2
 8006d74:	fbb2 f2f3 	udiv	r2, r2, r3
 8006d78:	4b1a      	ldr	r3, [pc, #104]	; (8006de4 <UART_SetConfig+0x118>)
 8006d7a:	fba3 0302 	umull	r0, r3, r3, r2
 8006d7e:	095b      	lsrs	r3, r3, #5
 8006d80:	2064      	movs	r0, #100	; 0x64
 8006d82:	fb00 f303 	mul.w	r3, r0, r3
 8006d86:	1ad3      	subs	r3, r2, r3
 8006d88:	011b      	lsls	r3, r3, #4
 8006d8a:	3332      	adds	r3, #50	; 0x32
 8006d8c:	4a15      	ldr	r2, [pc, #84]	; (8006de4 <UART_SetConfig+0x118>)
 8006d8e:	fba2 2303 	umull	r2, r3, r2, r3
 8006d92:	095b      	lsrs	r3, r3, #5
 8006d94:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8006d98:	4419      	add	r1, r3
 8006d9a:	68fa      	ldr	r2, [r7, #12]
 8006d9c:	4613      	mov	r3, r2
 8006d9e:	009b      	lsls	r3, r3, #2
 8006da0:	4413      	add	r3, r2
 8006da2:	009a      	lsls	r2, r3, #2
 8006da4:	441a      	add	r2, r3
 8006da6:	687b      	ldr	r3, [r7, #4]
 8006da8:	685b      	ldr	r3, [r3, #4]
 8006daa:	009b      	lsls	r3, r3, #2
 8006dac:	fbb2 f2f3 	udiv	r2, r2, r3
 8006db0:	4b0c      	ldr	r3, [pc, #48]	; (8006de4 <UART_SetConfig+0x118>)
 8006db2:	fba3 0302 	umull	r0, r3, r3, r2
 8006db6:	095b      	lsrs	r3, r3, #5
 8006db8:	2064      	movs	r0, #100	; 0x64
 8006dba:	fb00 f303 	mul.w	r3, r0, r3
 8006dbe:	1ad3      	subs	r3, r2, r3
 8006dc0:	011b      	lsls	r3, r3, #4
 8006dc2:	3332      	adds	r3, #50	; 0x32
 8006dc4:	4a07      	ldr	r2, [pc, #28]	; (8006de4 <UART_SetConfig+0x118>)
 8006dc6:	fba2 2303 	umull	r2, r3, r2, r3
 8006dca:	095b      	lsrs	r3, r3, #5
 8006dcc:	f003 020f 	and.w	r2, r3, #15
 8006dd0:	687b      	ldr	r3, [r7, #4]
 8006dd2:	681b      	ldr	r3, [r3, #0]
 8006dd4:	440a      	add	r2, r1
 8006dd6:	609a      	str	r2, [r3, #8]
#endif /* USART_CR1_OVER8 */
}
 8006dd8:	bf00      	nop
 8006dda:	3710      	adds	r7, #16
 8006ddc:	46bd      	mov	sp, r7
 8006dde:	bd80      	pop	{r7, pc}
 8006de0:	40013800 	.word	0x40013800
 8006de4:	51eb851f 	.word	0x51eb851f

08006de8 <memset>:
 8006de8:	4603      	mov	r3, r0
 8006dea:	4402      	add	r2, r0
 8006dec:	4293      	cmp	r3, r2
 8006dee:	d100      	bne.n	8006df2 <memset+0xa>
 8006df0:	4770      	bx	lr
 8006df2:	f803 1b01 	strb.w	r1, [r3], #1
 8006df6:	e7f9      	b.n	8006dec <memset+0x4>

08006df8 <__libc_init_array>:
 8006df8:	b570      	push	{r4, r5, r6, lr}
 8006dfa:	2600      	movs	r6, #0
 8006dfc:	4d0c      	ldr	r5, [pc, #48]	; (8006e30 <__libc_init_array+0x38>)
 8006dfe:	4c0d      	ldr	r4, [pc, #52]	; (8006e34 <__libc_init_array+0x3c>)
 8006e00:	1b64      	subs	r4, r4, r5
 8006e02:	10a4      	asrs	r4, r4, #2
 8006e04:	42a6      	cmp	r6, r4
 8006e06:	d109      	bne.n	8006e1c <__libc_init_array+0x24>
 8006e08:	f000 f81a 	bl	8006e40 <_init>
 8006e0c:	2600      	movs	r6, #0
 8006e0e:	4d0a      	ldr	r5, [pc, #40]	; (8006e38 <__libc_init_array+0x40>)
 8006e10:	4c0a      	ldr	r4, [pc, #40]	; (8006e3c <__libc_init_array+0x44>)
 8006e12:	1b64      	subs	r4, r4, r5
 8006e14:	10a4      	asrs	r4, r4, #2
 8006e16:	42a6      	cmp	r6, r4
 8006e18:	d105      	bne.n	8006e26 <__libc_init_array+0x2e>
 8006e1a:	bd70      	pop	{r4, r5, r6, pc}
 8006e1c:	f855 3b04 	ldr.w	r3, [r5], #4
 8006e20:	4798      	blx	r3
 8006e22:	3601      	adds	r6, #1
 8006e24:	e7ee      	b.n	8006e04 <__libc_init_array+0xc>
 8006e26:	f855 3b04 	ldr.w	r3, [r5], #4
 8006e2a:	4798      	blx	r3
 8006e2c:	3601      	adds	r6, #1
 8006e2e:	e7f2      	b.n	8006e16 <__libc_init_array+0x1e>
 8006e30:	08006e80 	.word	0x08006e80
 8006e34:	08006e80 	.word	0x08006e80
 8006e38:	08006e80 	.word	0x08006e80
 8006e3c:	08006e84 	.word	0x08006e84

08006e40 <_init>:
 8006e40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006e42:	bf00      	nop
 8006e44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006e46:	bc08      	pop	{r3}
 8006e48:	469e      	mov	lr, r3
 8006e4a:	4770      	bx	lr

08006e4c <_fini>:
 8006e4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006e4e:	bf00      	nop
 8006e50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006e52:	bc08      	pop	{r3}
 8006e54:	469e      	mov	lr, r3
 8006e56:	4770      	bx	lr
